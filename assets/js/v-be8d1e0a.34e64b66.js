"use strict";(self.webpackChunknotebook=self.webpackChunknotebook||[]).push([[192],{761:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-be8d1e0a",path:"/nodejsplus.html",title:"nodejs 进阶",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"1.开始",slug:"_1-开始",children:[{level:3,title:"1.1 创建项目",slug:"_1-1-创建项目",children:[]},{level:3,title:"1.2 演示路由",slug:"_1-2-演示路由",children:[]},{level:3,title:"1.3 ejs - 变量和判断",slug:"_1-3-ejs-变量和判断",children:[]}]},{level:2,title:"2.mysql",slug:"_2-mysql",children:[{level:3,title:"2.0 一些基本知识补充",slug:"_2-0-一些基本知识补充",children:[]},{level:3,title:"2.1 mysql - 前置准备",slug:"_2-1-mysql-前置准备",children:[]},{level:3,title:"2.2 mysql - 外键",slug:"_2-2-mysql-外键",children:[]},{level:3,title:"2.3 mysql - 连表查询",slug:"_2-3-mysql-连表查询",children:[]},{level:3,title:"2.4 sequelize 介绍",slug:"_2-4-sequelize-介绍",children:[]},{level:3,title:"2.5 创建关联",slug:"_2-5-创建关联",children:[]},{level:3,title:"2.6 查询数据",slug:"_2-6-查询数据",children:[]},{level:3,title:"2.7 连表查询",slug:"_2-7-连表查询",children:[]},{level:3,title:"2.8 删除和修改",slug:"_2-8-删除和修改",children:[]},{level:3,title:"2.9 连接池",slug:"_2-9-连接池",children:[]}]},{level:2,title:"3.redis、session、jest、eslint、jwt",slug:"_3-redis、session、jest、eslint、jwt",children:[{level:3,title:"3.1 redis 基本配置",slug:"_3-1-redis-基本配置",children:[]},{level:3,title:"3.2 session、redis 的一些问题",slug:"_3-2-session、redis-的一些问题",children:[]},{level:3,title:"3.3 koa2 配置 session",slug:"_3-3-koa2-配置-session",children:[]},{level:3,title:"3.4 单元测试 jest",slug:"_3-4-单元测试-jest",children:[]},{level:3,title:"3.5 测试 http 请求",slug:"_3-5-测试-http-请求",children:[]},{level:3,title:"3.6 eslint",slug:"_3-6-eslint",children:[]},{level:3,title:"3.7 inspect 调试",slug:"_3-7-inspect-调试",children:[]},{level:3,title:"3.8 404和错误页",slug:"_3-8-404和错误页",children:[]},{level:3,title:"3.9 jwt",slug:"_3-9-jwt",children:[]}]},{level:2,title:"4.技术方案设计",slug:"_4-技术方案设计",children:[{level:3,title:"4.1 页面与 API",slug:"_4-1-页面与-api",children:[]},{level:3,title:"4.2 数据模型设计",slug:"_4-2-数据模型设计",children:[]}]},{level:2,title:"5.API 接口开发",slug:"_5-api-接口开发",children:[{level:3,title:"5.1 创建页面",slug:"_5-1-创建页面",children:[]},{level:3,title:"5.2 数据建模",slug:"_5-2-数据建模",children:[]},{level:3,title:"5.3 注册 API - 路由和分层",slug:"_5-3-注册-api-路由和分层",children:[]},{level:3,title:"5.4 注册 API - 格式化用户信息",slug:"_5-4-注册-api-格式化用户信息",children:[]},{level:3,title:"5.5 注册 API - 完成 register",slug:"_5-5-注册-api-完成-register",children:[]},{level:3,title:"5.6 注册 API - 密码加密",slug:"_5-6-注册-api-密码加密",children:[]},{level:3,title:"5.7 注册 API - 格式校验",slug:"_5-7-注册-api-格式校验",children:[]},{level:3,title:"5.8 登录 API",slug:"_5-8-登录-api",children:[]},{level:3,title:"5.9 登录验证",slug:"_5-9-登录验证",children:[]},{level:3,title:"5.10 单元测试",slug:"_5-10-单元测试",children:[]},{level:3,title:"5.11 单元测试 - 测试接口",slug:"_5-11-单元测试-测试接口",children:[]}]},{level:2,title:"6.fs 的异步操作",slug:"_6-fs-的异步操作",children:[{level:3,title:"6.1 stat - 判断是否为文件 & 文件夹、access - 判断文件 & 文件夹是否存在",slug:"_6-1-stat-判断是否为文件-文件夹、access-判断文件-文件夹是否存在",children:[]},{level:3,title:"6.2 mkdir - 创建文件夹、writeFile -写入数据",slug:"_6-2-mkdir-创建文件夹、writefile-写入数据",children:[]},{level:3,title:"6.3 appendFile - 追加内容、readFile - 读取内容",slug:"_6-3-appendfile-追加内容、readfile-读取内容",children:[]},{level:3,title:"6.4 readDir - 读取文件夹、rename - 修改文件名、rm - 删除文件夹 & 文件",slug:"_6-4-readdir-读取文件夹、rename-修改文件名、rm-删除文件夹-文件",children:[]},{level:3,title:"6.5 open 的应用 - 文件复制",slug:"_6-5-open-的应用-文件复制",children:[]},{level:3,title:"6.6 流的入门",slug:"_6-6-流的入门",children:[]},{level:3,title:"6.7 流的应用",slug:"_6-7-流的应用",children:[]}]},{level:2,title:"7.页面、文件上传、修改密码、退出登录",slug:"_7-页面、文件上传、修改密码、退出登录",children:[{level:3,title:"7.1 创建页面",slug:"_7-1-创建页面",children:[]},{level:3,title:"7.2 文件上传",slug:"_7-2-文件上传",children:[]},{level:3,title:"7.3 修改基本信息",slug:"_7-3-修改基本信息",children:[]},{level:3,title:"7.4 修改密码(逻辑同 7.3)",slug:"_7-4-修改密码-逻辑同-7-3",children:[]},{level:3,title:"7.5 退出登录",slug:"_7-5-退出登录",children:[]},{level:3,title:"7.6 单元测试",slug:"_7-6-单元测试",children:[]}]},{level:2,title:"8.微博内容开始",slug:"_8-微博内容开始",children:[{level:3,title:"8.1 创建数据模型",slug:"_8-1-创建数据模型",children:[]},{level:3,title:"8.2 创建微博 API",slug:"_8-2-创建微博-api",children:[]},{level:3,title:"8.3 xss 过滤和格式校验",slug:"_8-3-xss-过滤和格式校验",children:[]},{level:3,title:"8.4 单元测试",slug:"_8-4-单元测试",children:[]}]},{level:2,title:"9.微博内容深入",slug:"_9-微博内容深入",children:[{level:3,title:"9.1 开始和创建页面",slug:"_9-1-开始和创建页面",children:[]},{level:3,title:"9.2 创建路由 - 格式化时间",slug:"_9-2-创建路由-格式化时间",children:[]},{level:3,title:'9.3 后端渲染"加载更多"页面',slug:"_9-3-后端渲染-加载更多-页面",children:[]},{level:3,title:"9.4 单元测试",slug:"_9-4-单元测试",children:[]}]},{level:2,title:"10.微博广场页",slug:"_10-微博广场页",children:[{level:3,title:"10.1 redis - 基本设置",slug:"_10-1-redis-基本设置",children:[]},{level:3,title:"10.2 单元测试",slug:"_10-2-单元测试",children:[]}]},{level:2,title:"11.关注",slug:"_11-关注",children:[{level:3,title:"11.1 开始与数据建模",slug:"_11-1-开始与数据建模",children:[]},{level:3,title:"11.2 开发粉丝列表",slug:"_11-2-开发粉丝列表",children:[]},{level:3,title:"11.3 开发关注接口 - 判断开发状态",slug:"_11-3-开发关注接口-判断开发状态",children:[]},{level:3,title:"11.4 关注开发接口 - 完成",slug:"_11-4-关注开发接口-完成",children:[]},{level:3,title:"11.5 开发关注人列表",slug:"_11-5-开发关注人列表",children:[]},{level:3,title:"11.6 单元测试",slug:"_11-6-单元测试",children:[]}]},{level:2,title:"12.首页",slug:"_12-首页",children:[{level:3,title:"12.1 数据建模",slug:"_12-1-数据建模",children:[]},{level:3,title:'12.2 "自己关注自己"',slug:"_12-2-自己关注自己",children:[]},{level:3,title:"12.3 主页渲染 - 三表查询",slug:"_12-3-主页渲染-三表查询",children:[]},{level:3,title:"12.4 加载更多",slug:"_12-4-加载更多",children:[]},{level:3,title:"12.5 单元测试",slug:"_12-5-单元测试",children:[]}]},{level:2,title:"13.回复 & @功能",slug:"_13-回复-功能",children:[{level:3,title:"13.1 开始和显示 @",slug:"_13-1-开始和显示",children:[]},{level:3,title:"13.2 at 用户转为链接格式",slug:"_13-2-at-用户转为链接格式",children:[]},{level:3,title:"13.3 实现回复功能",slug:"_13-3-实现回复功能",children:[]},{level:3,title:"13.4 单元测试",slug:"_13-4-单元测试",children:[]}]},{level:2,title:"14.at 提到自己和已读等",slug:"_14-at-提到自己和已读等",children:[{level:3,title:"14.1 数据建模",slug:"_14-1-数据建模",children:[]},{level:3,title:"14.2 分析 at 关系并存储",slug:"_14-2-分析-at-关系并存储",children:[]},{level:3,title:"14.3 显示 at 数量",slug:"_14-3-显示-at-数量",children:[]},{level:3,title:"14.4 开发 at 页面",slug:"_14-4-开发-at-页面",children:[]},{level:3,title:"14.5 标记为已读",slug:"_14-5-标记为已读",children:[]},{level:3,title:"14.6 单元测试",slug:"_14-6-单元测试",children:[]}]},{level:2,title:"15.上线",slug:"_15-上线",children:[{level:3,title:"15.1 pm2 常用命令",slug:"_15-1-pm2-常用命令",children:[]},{level:3,title:"15.2 pm2 配置项",slug:"_15-2-pm2-配置项",children:[]},{level:3,title:"15.3 多进程",slug:"_15-3-多进程",children:[]},{level:3,title:"15.4 nginx",slug:"_15-4-nginx",children:[]}]}],filePathRelative:"nodejsplus.md",git:{updatedTime:null,contributors:[]}}},3520:(n,s,a)=>{a.r(s),a.d(s,{default:()=>v});var p=a(6252);const t=(0,p.uE)('<h1 id="nodejs-进阶" tabindex="-1"><a class="header-anchor" href="#nodejs-进阶" aria-hidden="true">#</a> nodejs 进阶</h1><p><img src="https://cdn.jsdelivr.net/gh//YuanKe3/PHOTO/img/1558ded1ecd01f5010c94c8892f7ca2.jpg" alt="1558ded1ecd01f5010c94c8892f7ca2"></p><h2 id="_1-开始" tabindex="-1"><a class="header-anchor" href="#_1-开始" aria-hidden="true">#</a> 1.开始</h2><h3 id="_1-1-创建项目" tabindex="-1"><a class="header-anchor" href="#_1-1-创建项目" aria-hidden="true">#</a> 1.1 创建项目</h3><p><strong>简单设置</strong>：</p>',5),e=(0,p._)("li",null,[(0,p.Uk)("下载脚手架："),(0,p._)("code",null,"npm i -g koa-generator")],-1),o=(0,p._)("li",null,[(0,p.Uk)("创建项目（"),(0,p._)("code",null,"-e"),(0,p.Uk)(" 指以 ejs 模板进行开发）："),(0,p._)("code",null,"koa2 -e koa2-weibo-code")],-1),c=(0,p._)("li",null,[(0,p.Uk)("git 初始化："),(0,p._)("code",null,"git init")],-1),l=(0,p.Uk)("创建源（"),u={href:"https://coding.net",target:"_blank",rel:"noopener noreferrer"},r=(0,p.Uk)("coding.net"),i=(0,p.Uk)("）："),k=(0,p._)("code",null,"git remote add origin git@e.coding.net:yuanke2/koa2-weibo-code/koa2-weibo-code.git",-1),b=(0,p.uE)("<li>输入：<code>git status</code> =&gt; 用于显示工作目录和暂存区的状态。使用此命令能看到那些修改被暂存到了, 哪些没有, 哪些文件没有被 Git tracked 到</li><li>将远程主机 origin 的 master 分支拉取过来，将远程的 <em>.gitignore</em> 文件成功拉取到本地项目中：<code>git pull origin master</code></li><li>添加当前目录下的所有文件到暂存区：<code>git add .</code></li><li>将本地修改过的文件提交到本地库中：<code>git commit -m &quot;init project&quot;</code>（如果做了代码结构重构，就可以用 <code>git commit -m &quot;refactor: 调整目录结构&quot;</code> 这种声明；如果新增了功能，则把 <code>refactor</code> 改成 <code>feat</code> 即可；修改了 bug 用 <code>fix</code>，修改了文档用 <code>doc</code>；做了 eslint 用 <code>lint</code>）</li><li>将本地库中的最新信息发送给远程库：<code>git push origin master</code></li><li>用于显示提交日志信息：<code>git log</code></li><li>查看修改了什么：<code>git diff</code></li>",7),m=(0,p.uE)('<p><strong>ssh 简单设置</strong>：</p><ol><li><code>ssh-keygen -m PEM -t ed25519 -C &quot;your.email@example.com&quot;</code>：创建新的 SSH 私钥与公钥秘钥对，输入邮箱作为标签（<em>id_rsa.pub</em> 是公钥，<em>id_rsa</em> 是私钥，当执行 <em>git clone xxx</em> 时，公钥传给服务器进行权限校验，来与本地私钥进行匹配）。此外，在执行该命令时，可以设置多个公钥</li><li>若步骤 1 设置了多个公钥，就需要 <em>code ~/.ssh/config</em> 去修改配置（挺简单的）</li><li>验证是否成功连接 ssh：<code>ssh -T git@e.coding.net</code></li></ol><p><strong>简单介绍 <em>app.js</em></strong>：</p><p><em>src/app.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> Koa <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;koa&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Koa</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> views <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;koa-views&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> json <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;koa-json&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> onerror <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;koa-onerror&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> bodyparser <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;koa-bodyparser&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> logger <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;koa-logger&#39;</span><span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> index <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./routes/index&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> users <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./routes/users&#39;</span><span class="token punctuation">)</span>\n\n<span class="token comment">// error handler</span>\n<span class="token function">onerror</span><span class="token punctuation">(</span>app<span class="token punctuation">)</span>\n\n<span class="token comment">// middlewares</span>\n<span class="token comment">// bodyparser 和 json() 是解析 post 数据的</span>\napp<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token function">bodyparser</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  enableTypes<span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">&#39;json&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;form&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;text&#39;</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\napp<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\napp<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token function">logger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token comment">// 只要访问 localhost:3000/stylesheets/style.css 就能访问该文件内容了</span>\napp<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;koa-static&#39;</span><span class="token punctuation">)</span><span class="token punctuation">(</span>__dirname <span class="token operator">+</span> <span class="token string">&#39;/public&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n\napp<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token function">views</span><span class="token punctuation">(</span>__dirname <span class="token operator">+</span> <span class="token string">&#39;/views&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  extension<span class="token operator">:</span> <span class="token string">&#39;ejs&#39;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n\n<span class="token comment">// // logger，手写的一个写日志的功能（中间件的演示）</span>\n<span class="token comment">// app.use(async (ctx, next) =&gt; {</span>\n<span class="token comment">//   const start = new Date()</span>\n<span class="token comment">//   await next()</span>\n<span class="token comment">//   const ms = new Date() - start</span>\n<span class="token comment">//   console.log(`${ctx.method} ${ctx.url} - ${ms}ms`)</span>\n<span class="token comment">// })</span>\n\n<span class="token comment">// routes</span>\napp<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>index<span class="token punctuation">.</span><span class="token function">routes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> index<span class="token punctuation">.</span><span class="token function">allowedMethods</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\napp<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>users<span class="token punctuation">.</span><span class="token function">routes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> users<span class="token punctuation">.</span><span class="token function">allowedMethods</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n\n<span class="token comment">// error-handling</span>\napp<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> ctx</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;server error&#39;</span><span class="token punctuation">,</span> err<span class="token punctuation">,</span> ctx<span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> app\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br></div></div><br><h3 id="_1-2-演示路由" tabindex="-1"><a class="header-anchor" href="#_1-2-演示路由" aria-hidden="true">#</a> 1.2 演示路由</h3><p><strong>动态参数</strong>：</p><ol><li>访问 <em>localhost:3000/profile/zhangsan</em> 会触发：</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>router<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/profile/:userName&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> userName <span class="token punctuation">}</span> <span class="token operator">=</span> ctx<span class="token punctuation">.</span>params\n  ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">&#39;this is a profile page&#39;</span><span class="token punctuation">,</span>\n    userName\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><ol start="2"><li>访问 <em>localhost:3000/loadMore/lisi/2</em>：</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>router<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/loadMore/:userName/:pageIndex&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> userName<span class="token punctuation">,</span> pageIndex <span class="token punctuation">}</span> <span class="token operator">=</span> ctx<span class="token punctuation">.</span>params\n  ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">&#39;this is a loadMore API&#39;</span><span class="token punctuation">,</span>\n    userName<span class="token punctuation">,</span>\n    pageIndex\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><br><h3 id="_1-3-ejs-变量和判断" tabindex="-1"><a class="header-anchor" href="#_1-3-ejs-变量和判断" aria-hidden="true">#</a> 1.3 ejs - 变量和判断</h3><p><strong>知识点</strong>：</p><ul><li>变量</li><li>判断和循环</li><li>引用组件</li></ul><p><strong>变量 &amp;&amp; if 判断</strong>：</p><p><em>src/routes/index.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>router<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">await</span> ctx<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token string">&#39;index&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">&#39;Hello Koa 2!&#39;</span><span class="token punctuation">,</span>\n    msg<span class="token operator">:</span> <span class="token string">&#39;nihao&#39;</span><span class="token punctuation">,</span>\n    isMe<span class="token operator">:</span> <span class="token boolean">false</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p><em>src/views/index.ejs</em>：</p><div class="language-ejs ext-ejs line-numbers-mode"><pre class="language-ejs"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript"> title </span><span class="token delimiter punctuation">%&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>stylesheet<span class="token punctuation">&#39;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>/stylesheets/style.css<span class="token punctuation">&#39;</span></span> <span class="token punctuation">/&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript"> title </span><span class="token delimiter punctuation">%&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>EJS Welcome to <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript"> title </span><span class="token delimiter punctuation">%&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript"> msg </span><span class="token delimiter punctuation">%&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>\n    <span class="token comment">&lt;!-- 由于没有传 name 变量，下面加上 locals. 就不会报错了 --&gt;</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript"> locals<span class="token punctuation">.</span>name</span><span class="token delimiter punctuation">%&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>\n\n    <span class="token comment">&lt;!-- if 判断 --&gt;</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>\n      <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">if</span> <span class="token punctuation">(</span>isMe<span class="token punctuation">)</span> <span class="token punctuation">{</span> </span><span class="token delimiter punctuation">%&gt;</span></span>\n      \t<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>@ 提到我的(3)<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>\n      <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> </span><span class="token delimiter punctuation">%&gt;</span></span>\n      \t<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">&gt;</span></span>关注<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n      <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">}</span> </span><span class="token delimiter punctuation">%&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><p><strong>组件化</strong>：</p><p><em>src/views/index.ejs</em>：</p><div class="language-ejs ext-ejs line-numbers-mode"><pre class="language-ejs"><code><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">include</span><span class="token punctuation">(</span><span class="token string">&#39;widgets/user-info&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  isMe\n<span class="token punctuation">}</span><span class="token punctuation">)</span></span><span class="token delimiter punctuation">%&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><em>src/views/widget/user-info.ejs</em>：</p><div class="language-ejs ext-ejs line-numbers-mode"><pre class="language-ejs"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>\n  <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">if</span> <span class="token punctuation">(</span>isMe<span class="token punctuation">)</span> <span class="token punctuation">{</span> </span><span class="token delimiter punctuation">%&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>@ 提到我的(3)<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>\n  <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> </span><span class="token delimiter punctuation">%&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">&gt;</span></span>关注<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n  <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">}</span> </span><span class="token delimiter punctuation">%&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p><strong>循环</strong>：</p><p><em>src/routes/index.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>router<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">await</span> ctx<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token string">&#39;index&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">&#39;Hello Koa 2!&#39;</span><span class="token punctuation">,</span>\n    isMe<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    blogList<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        id<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n        title<span class="token operator">:</span> <span class="token string">&#39;aaa&#39;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        id<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>\n        title<span class="token operator">:</span> <span class="token string">&#39;bbb&#39;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        id<span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>\n        title<span class="token operator">:</span> <span class="token string">&#39;ccc&#39;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        id<span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>\n        title<span class="token operator">:</span> <span class="token string">&#39;ddd&#39;</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><p><em>src/views/index.ejs</em>：</p><div class="language-ejs ext-ejs line-numbers-mode"><pre class="language-ejs"><code><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">include</span><span class="token punctuation">(</span><span class="token string">&#39;widgets/blog-list&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  blogList\n<span class="token punctuation">}</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><em>src/views/widgets/blog-list.ejs</em>：</p><div class="language-ejs ext-ejs line-numbers-mode"><pre class="language-ejs"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>\n  <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> blogList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">blog</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> </span><span class="token delimiter punctuation">%&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">data-id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript"> blog<span class="token punctuation">.</span>id </span><span class="token delimiter punctuation">%&gt;</span></span><span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript"> blog<span class="token punctuation">.</span>title </span><span class="token delimiter punctuation">%&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>\n  <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">}</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><br><h2 id="_2-mysql" tabindex="-1"><a class="header-anchor" href="#_2-mysql" aria-hidden="true">#</a> 2.mysql</h2><h3 id="_2-0-一些基本知识补充" tabindex="-1"><a class="header-anchor" href="#_2-0-一些基本知识补充" aria-hidden="true">#</a> 2.0 一些基本知识补充</h3><p><strong>只修改列的数据类型方法</strong>：<code>alter table blogs modify column username varchar(20)</code></p><p><strong>同时修改列名和列的数据类型的方法</strong>：<code>alter table blogs change column username name varchar(30)</code></p><br><h3 id="_2-1-mysql-前置准备" tabindex="-1"><a class="header-anchor" href="#_2-1-mysql-前置准备" aria-hidden="true">#</a> 2.1 mysql - 前置准备</h3><ol><li>建立一个 <code>users</code> 表，分别有 <code>id</code>、<code>username</code>、<code>password</code>、<code>nickname</code></li><li>建立一个 <code>blogs</code> 表，分别有 <code>id</code>、<code>title</code>、<code>content</code>、<code>userId</code></li></ol><br><h3 id="_2-2-mysql-外键" tabindex="-1"><a class="header-anchor" href="#_2-2-mysql-外键" aria-hidden="true">#</a> 2.2 mysql - 外键</h3><blockquote><p>外键使数据库更加严谨，不会出错，不会出现垃圾数据</p></blockquote><p><strong>求总数和分页</strong>：</p><ol><li><code>select count(id) as &#39;count&#39; from blogs;</code>：查找 <strong>总数</strong></li><li><code>select * from blogs order by id desc limit 2 offset 2;</code>：每次查询只能返回两行数据，第二次查询将会跳过前两行数据，达到 <strong>分页</strong> 效果</li></ol><p><strong>创建外键</strong>：（设置了更新规则和删除规则都为 <code>cascade</code> 之后，假定删除了 <code>users</code> 表中的 <code>id=1</code> 的行，则 <code>blogs</code> 表中所有行中含 <code>id=1</code> 的数据都将会被删除）</p><div class="language-mysql ext-mysql line-numbers-mode"><pre class="language-mysql"><code>alter table blogs\n    add constraint userid\n        foreign key (userid) references users (id)\n            on update cascade on delete cascade;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><br><h3 id="_2-3-mysql-连表查询" tabindex="-1"><a class="header-anchor" href="#_2-3-mysql-连表查询" aria-hidden="true">#</a> 2.3 mysql - 连表查询</h3><p><strong>简单的连表查询</strong>：（不一定非要有外键，即下面的 <code>blogs.userid=users.id</code> 与外键无关）</p><div class="language-mysql ext-mysql line-numbers-mode"><pre class="language-mysql"><code>select blogs.*,users.username,users.nickname,users.password from blogs\n    inner join users on blogs.userid=users.id\n        where  users.username=&#39;lisi&#39;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><br><h3 id="_2-4-sequelize-介绍" tabindex="-1"><a class="header-anchor" href="#_2-4-sequelize-介绍" aria-hidden="true">#</a> 2.4 sequelize 介绍</h3><blockquote><p>ORM - Object Relational Mapping 对象关系映射</p></blockquote><p><strong>简单介绍</strong>：</p><ul><li>数据表，用 JS 中的模型（class 或对象）代替</li><li>一条或多条记录，用 JS 中的一个对象或数组代替</li><li>sql 语句，用对象方法代替</li></ul><p><strong>代码写法</strong>：</p><p><em>src/seq.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> Sequelize <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;sequelize&#39;</span><span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> conf <span class="token operator">=</span> <span class="token punctuation">{</span>\n  host<span class="token operator">:</span> <span class="token string">&#39;localhost&#39;</span><span class="token punctuation">,</span>\n  dialect<span class="token operator">:</span> <span class="token string">&#39;mysql&#39;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> seq <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Sequelize</span><span class="token punctuation">(</span><span class="token string">&#39;koa2_weibo_db&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;root&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;123456&#39;</span><span class="token punctuation">,</span> conf<span class="token punctuation">)</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> seq\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p><em>src/model.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> DataTypes <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;sequelize&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> seq <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./seq&#39;</span><span class="token punctuation">)</span>\n\n<span class="token comment">// 创建 User 模型，user 是表的名字，会自动转为 users</span>\n<span class="token keyword">const</span> User <span class="token operator">=</span> seq<span class="token punctuation">.</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token string">&#39;user&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  <span class="token comment">// id 会自动创建，并设为主键、自增</span>\n  userName<span class="token operator">:</span> <span class="token punctuation">{</span>\n    type<span class="token operator">:</span> DataTypes<span class="token punctuation">.</span><span class="token constant">STRING</span><span class="token punctuation">,</span> <span class="token comment">// varchar(255)</span>\n    allowNull<span class="token operator">:</span> <span class="token boolean">false</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  password<span class="token operator">:</span> <span class="token punctuation">{</span>\n    type<span class="token operator">:</span> DataTypes<span class="token punctuation">.</span><span class="token constant">STRING</span><span class="token punctuation">,</span>\n    allowNull<span class="token operator">:</span> <span class="token boolean">false</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  nickName<span class="token operator">:</span> <span class="token punctuation">{</span>\n    type<span class="token operator">:</span> DataTypes<span class="token punctuation">.</span><span class="token constant">STRING</span><span class="token punctuation">,</span>\n    comment<span class="token operator">:</span> <span class="token string">&#39;昵称&#39;</span>\n  <span class="token punctuation">}</span>\n  <span class="token comment">// 自动创建：createdAt 和 updateAt</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token comment">// 创建 Blog 模型</span>\n\n<span class="token comment">// 外键关联</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  User\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><p><em>src/sync.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> seq <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./seq&#39;</span><span class="token punctuation">)</span>\n\n<span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./model&#39;</span><span class="token punctuation">)</span>\n\n<span class="token comment">// 测试连接</span>\nseq<span class="token punctuation">.</span><span class="token function">authenticate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;ok&#39;</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;err&#39;</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token comment">// 执行同步</span>\nseq<span class="token punctuation">.</span><span class="token function">sync</span><span class="token punctuation">(</span><span class="token punctuation">{</span> force<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;用户模型表刚刚创建！&#39;</span><span class="token punctuation">)</span>\n  process<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><br><h3 id="_2-5-创建关联" tabindex="-1"><a class="header-anchor" href="#_2-5-创建关联" aria-hidden="true">#</a> 2.5 创建关联</h3><p><strong>不推荐的写法</strong>：</p><p><em>src/model.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Blog<span class="token punctuation">.</span><span class="token function">belongTo</span><span class="token punctuation">(</span>User<span class="token punctuation">)</span> <span class="token comment">// 这样写就不要写 Blog 中的 userId 了，会隐式创建 Blog 中的 userId 并关联与 User.id</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>写法一</strong>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 外键关联</span>\nBlog<span class="token punctuation">.</span><span class="token function">belongsTo</span><span class="token punctuation">(</span>User<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 创建外键 Blog.userId -&gt; User.id</span>\n  foreignKey<span class="token operator">:</span> <span class="token string">&#39;userId&#39;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><strong>写法二</strong>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>User<span class="token punctuation">.</span><span class="token function">hasMany</span><span class="token punctuation">(</span>Blog<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  foreignKey<span class="token operator">:</span> <span class="token string">&#39;userId&#39;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><strong>写法三（推荐）</strong>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 下面两个一起写有利于表查询</span>\nBlog<span class="token punctuation">.</span><span class="token function">belongsTo</span><span class="token punctuation">(</span>User<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 创建外键 Blog.userId -&gt; User.id</span>\n  foreignKey<span class="token operator">:</span> <span class="token string">&#39;userId&#39;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\nUser<span class="token punctuation">.</span><span class="token function">hasMany</span><span class="token punctuation">(</span>Blog<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  foreignKey<span class="token operator">:</span> <span class="token string">&#39;userId&#39;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><br><h3 id="_2-6-查询数据" tabindex="-1"><a class="header-anchor" href="#_2-6-查询数据" aria-hidden="true">#</a> 2.6 查询数据</h3><blockquote><p><code>node src/select.js</code> 就可以进行查询</p></blockquote><p><em>src/select.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> Blog<span class="token punctuation">,</span> User <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./model&#39;</span><span class="token punctuation">)</span>\n\n<span class="token operator">!</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token comment">// // 查询一条记录</span>\n  <span class="token comment">// const zhangsan = await User.findOne({</span>\n  <span class="token comment">//   where: {</span>\n  <span class="token comment">//     userName: &#39;zhangsan&#39;</span>\n  <span class="token comment">//   }</span>\n  <span class="token comment">// })</span>\n  <span class="token comment">// console.log(&#39;zhangsan&#39;, zhangsan.toJSON())</span>\n\n  <span class="token comment">// // 查询特定的列</span>\n  <span class="token comment">// const zhangsanName = await User.findOne({</span>\n  <span class="token comment">//   attributes: [&#39;userName&#39;, &#39;nickName&#39;],</span>\n  <span class="token comment">//   where: {</span>\n  <span class="token comment">//     userName: &#39;zhangsan&#39;</span>\n  <span class="token comment">//   }</span>\n  <span class="token comment">// })</span>\n  <span class="token comment">// console.log(&#39;zhangsanName&#39;, zhangsanName.toJSON())</span>\n\n  <span class="token comment">// // 查询一个列表</span>\n  <span class="token comment">// const zhangsanBlogList = await Blog.findAll({</span>\n  <span class="token comment">//   where: {</span>\n  <span class="token comment">//     userId: 1</span>\n  <span class="token comment">//   },</span>\n  <span class="token comment">//   order: [</span>\n  <span class="token comment">//     [&#39;id&#39;, &#39;desc&#39;]</span>\n  <span class="token comment">//   ]</span>\n  <span class="token comment">// })</span>\n  <span class="token comment">// console.log(&#39;zhangsanBlogList&#39;, zhangsanBlogList.map(blog =&gt; blog.toJSON()))</span>\n\n  <span class="token comment">// // 分页</span>\n  <span class="token comment">// const blogPageList = await Blog.findAll({</span>\n  <span class="token comment">//   limit: 2, // 限制本次查询两条</span>\n  <span class="token comment">//   offset: 0, // 跳过多少条</span>\n  <span class="token comment">//   order: [</span>\n  <span class="token comment">//     [&#39;id&#39;, &#39;desc&#39;]</span>\n  <span class="token comment">//   ]</span>\n  <span class="token comment">// })</span>\n  <span class="token comment">// console.log(</span>\n  <span class="token comment">//   &#39;blogPageList&#39;,</span>\n  <span class="token comment">//   blogPageList.map(blog =&gt; blog.toJSON())</span>\n  <span class="token comment">// )</span>\n\n  <span class="token comment">// 查询总数</span>\n  <span class="token keyword">const</span> blogListAndCount <span class="token operator">=</span> <span class="token keyword">await</span> Blog<span class="token punctuation">.</span><span class="token function">findAndCountAll</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    limit<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>\n    offset<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n    order<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">[</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;desc&#39;</span><span class="token punctuation">]</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>\n    <span class="token string">&#39;blogListAndCount&#39;</span><span class="token punctuation">,</span>\n    blogListAndCount<span class="token punctuation">.</span>count<span class="token punctuation">,</span> <span class="token comment">// 所有的总数</span>\n    blogListAndCount<span class="token punctuation">.</span>rows<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">blog</span> <span class="token operator">=&gt;</span> blog<span class="token punctuation">.</span><span class="token function">toJSON</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n  <span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br></div></div><br><h3 id="_2-7-连表查询" tabindex="-1"><a class="header-anchor" href="#_2-7-连表查询" aria-hidden="true">#</a> 2.7 连表查询</h3><blockquote><p>必须要在 <em>src/model.js</em> 定义了 <code>Blog.belongTo()</code> 之后才能在 <em>src/select.js</em> 发起 <code>Blog.findAndCountAll()</code> 的连表查询</p></blockquote><p><em>src/select.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 连表查询1</span>\n<span class="token keyword">const</span> blogListWithUser <span class="token operator">=</span> <span class="token keyword">await</span> Blog<span class="token punctuation">.</span><span class="token function">findAndCountAll</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  order<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">[</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;desc&#39;</span><span class="token punctuation">]</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  include<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      model<span class="token operator">:</span> User<span class="token punctuation">,</span>\n      attributes<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;userName&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;nickName&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n      where<span class="token operator">:</span> <span class="token punctuation">{</span>\n        userName<span class="token operator">:</span> <span class="token string">&#39;zhangsan&#39;</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>\n  <span class="token string">&#39;blogListWithUser&#39;</span><span class="token punctuation">,</span>\n  blogListWithUser<span class="token punctuation">.</span>count<span class="token punctuation">,</span>\n  blogListWithUser<span class="token punctuation">.</span>rows<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">blog</span> <span class="token operator">=&gt;</span> blog<span class="token punctuation">.</span><span class="token function">toJSON</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token punctuation">)</span>\n<span class="token comment">// 结果：</span>\n<span class="token comment">// blogListWithUser 2 [</span>\n<span class="token comment">//   {</span>\n<span class="token comment">//     id: 2,</span>\n<span class="token comment">//     title: &#39;标题2&#39;,</span>\n<span class="token comment">//     content: &#39;内容2&#39;,</span>\n<span class="token comment">//     userId: 1,</span>\n<span class="token comment">//     createdAt: 2022-07-18T02:56:52.000Z,</span>\n<span class="token comment">//     updatedAt: 2022-07-18T02:56:52.000Z,</span>\n<span class="token comment">//     user: { userName: &#39;zhangsan&#39;, nickName: &#39;张三&#39; }</span>\n<span class="token comment">//   },</span>\n<span class="token comment">//   {</span>\n<span class="token comment">//     id: 1,</span>\n<span class="token comment">//     title: &#39;标题1&#39;,</span>\n<span class="token comment">//     content: &#39;内容1&#39;,</span>\n<span class="token comment">//     userId: 1,</span>\n<span class="token comment">//     createdAt: 2022-07-18T02:56:52.000Z,</span>\n<span class="token comment">//     updatedAt: 2022-07-18T02:56:52.000Z,</span>\n<span class="token comment">//     user: { userName: &#39;zhangsan&#39;, nickName: &#39;张三&#39; }</span>\n<span class="token comment">//   }</span>\n<span class="token comment">// ]</span>\n\n  <span class="token comment">// 连表查询2</span>\n  <span class="token keyword">const</span> userListWithUser <span class="token operator">=</span> <span class="token keyword">await</span> User<span class="token punctuation">.</span><span class="token function">findAndCountAll</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    attributes<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;userName&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;nickName&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    include<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        model<span class="token operator">:</span> Blog\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>\n    <span class="token string">&#39;userListWithUser&#39;</span><span class="token punctuation">,</span>\n    userListWithUser<span class="token punctuation">.</span>count<span class="token punctuation">,</span>\n    userListWithUser<span class="token punctuation">.</span>rows<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">user</span> <span class="token operator">=&gt;</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>user<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n  <span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br></div></div><br><h3 id="_2-8-删除和修改" tabindex="-1"><a class="header-anchor" href="#_2-8-删除和修改" aria-hidden="true">#</a> 2.8 删除和修改</h3><p><strong>修改</strong>：</p><p><em>src/update.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> User <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./model&#39;</span><span class="token punctuation">)</span>\n\n<span class="token operator">!</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> updateRes <span class="token operator">=</span> <span class="token keyword">await</span> User<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    nickName<span class="token operator">:</span> <span class="token string">&#39;张三&#39;</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    where<span class="token operator">:</span> <span class="token punctuation">{</span>\n      userName<span class="token operator">:</span> <span class="token string">&#39;zhangsan&#39;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;updateRes...&#39;</span><span class="token punctuation">,</span> updateRes<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p><strong>删除</strong>：</p><p><em>src/delete.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> User<span class="token punctuation">,</span> Blog <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./model&#39;</span><span class="token punctuation">)</span>\n\n<span class="token operator">!</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token comment">// // 删除一条博客</span>\n  <span class="token comment">// const delBlogRes = await Blog.destroy({</span>\n  <span class="token comment">//   where: {</span>\n  <span class="token comment">//     id: 4</span>\n  <span class="token comment">//   }</span>\n  <span class="token comment">// })</span>\n  <span class="token comment">// console.log(delBlogRes)</span>\n\n  <span class="token comment">// 删除一个用户</span>\n  <span class="token keyword">const</span> delUserRes <span class="token operator">=</span> <span class="token keyword">await</span> User<span class="token punctuation">.</span><span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    where<span class="token operator">:</span> <span class="token punctuation">{</span>\n      id<span class="token operator">:</span> <span class="token number">1</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>delUserRes<span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><br><h3 id="_2-9-连接池" tabindex="-1"><a class="header-anchor" href="#_2-9-连接池" aria-hidden="true">#</a> 2.9 连接池</h3><p><em>src/seq.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> Sequelize <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;sequelize&#39;</span><span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> conf <span class="token operator">=</span> <span class="token punctuation">{</span>\n  host<span class="token operator">:</span> <span class="token string">&#39;localhost&#39;</span><span class="token punctuation">,</span>\n  dialect<span class="token operator">:</span> <span class="token string">&#39;mysql&#39;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// 线上环境，使用连接池</span>\nconf<span class="token punctuation">.</span>pool <span class="token operator">=</span> <span class="token punctuation">{</span>\n  max<span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token comment">// 连接池最大的连接数量</span>\n  min<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n  idle<span class="token operator">:</span> <span class="token number">10000</span><span class="token punctuation">,</span> <span class="token comment">// 如果一个连接池 10s 之内没有被使用则释放</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> seq <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Sequelize</span><span class="token punctuation">(</span><span class="token string">&#39;koa2_weibo_db&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;root&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;123456&#39;</span><span class="token punctuation">,</span> conf<span class="token punctuation">)</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> seq\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><br><h2 id="_3-redis、session、jest、eslint、jwt" tabindex="-1"><a class="header-anchor" href="#_3-redis、session、jest、eslint、jwt" aria-hidden="true">#</a> 3.redis、session、jest、eslint、jwt</h2><h3 id="_3-1-redis-基本配置" tabindex="-1"><a class="header-anchor" href="#_3-1-redis-基本配置" aria-hidden="true">#</a> 3.1 redis 基本配置</h3><p><em>src/conf/db.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * <span class="token keyword">@description</span> 存储配置\n * <span class="token keyword">@author</span> yuanke\n */</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> isProd <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../utils/env&#39;</span><span class="token punctuation">)</span>\n\n<span class="token keyword">let</span> <span class="token constant">REDIS_CONF</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  port<span class="token operator">:</span> <span class="token number">6379</span><span class="token punctuation">,</span>\n  host<span class="token operator">:</span> <span class="token string">&#39;127.0.0.1&#39;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">if</span> <span class="token punctuation">(</span>isProd<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token constant">REDIS_CONF</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 线上的 redis 配置</span>\n    port<span class="token operator">:</span> <span class="token number">6379</span><span class="token punctuation">,</span>\n    host<span class="token operator">:</span> <span class="token string">&#39;127.0.0.1&#39;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token constant">REDIS_CONF</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><p><em>src/cache/_redis.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * <span class="token keyword">@description</span> 连接 redis 的方法 get set\n * <span class="token keyword">@author</span> yuanke\n */</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> createClient <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;redis&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token constant">REDIS_CONF</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../conf/db&#39;</span><span class="token punctuation">)</span>\n\n<span class="token comment">// 创建客户端</span>\n<span class="token keyword">const</span> redisClient <span class="token operator">=</span> <span class="token function">createClient</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  url<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">redis://</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token constant">REDIS_CONF</span><span class="token punctuation">.</span>host<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token constant">REDIS_CONF</span><span class="token punctuation">.</span>port<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\nredisClient<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Redis Client Error&#39;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">)</span>\n\n<span class="token operator">!</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">await</span> redisClient<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n<span class="token doc-comment comment">/**\n * redis set\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">key</span> 键\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">val</span> 值\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">timeout</span> 过期时间，单位 s\n */</span>\n<span class="token keyword">const</span> <span class="token function-variable function">set</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">key<span class="token punctuation">,</span> val<span class="token punctuation">,</span> timeout <span class="token operator">=</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">60</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> val <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    val <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">await</span> redisClient<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> val<span class="token punctuation">)</span>\n  <span class="token keyword">await</span> redisClient<span class="token punctuation">.</span><span class="token function">expire</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> timeout<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token doc-comment comment">/**\n * redis get\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">key</span> 键\n */</span>\n<span class="token keyword">const</span> <span class="token function-variable function">get</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token keyword">await</span> redisClient<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">try</span> <span class="token punctuation">{</span>\n      res <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>\n      <span class="token keyword">return</span> res\n    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span> res\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">return</span> <span class="token keyword">null</span>\n<span class="token punctuation">}</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  set<span class="token punctuation">,</span>\n  get\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br></div></div><blockquote><p>完成后提交代码：</p><ul><li><code>git diff</code>：查看不同</li><li><code>git add.</code></li><li><code>git commit -m &quot;feat: redis 操作&quot;</code></li><li><code>git push origin master</code></li></ul></blockquote><br><h3 id="_3-2-session、redis-的一些问题" tabindex="-1"><a class="header-anchor" href="#_3-2-session、redis-的一些问题" aria-hidden="true">#</a> 3.2 session、redis 的一些问题</h3><p><strong>为什么不能直接用 session 存储，而是要配合 redis？</strong></p><ul><li>操作系统会限制一个进程的最大可用内存</li><li>nodejs 启动多进程时，进程之间是数据隔离的，各个进程的 session 也就是相互独立的。当用户登录时，如果命中一个与之前不同的进程，就找不到之前的 session，就要重新登录了。显然，这是非常不妥的</li></ul><p><strong>为什么 session 更适合用 redis？</strong></p><ul><li>session 访问频繁，对性能要求极高</li><li>session 可不考虑断电丢失的问题（内存的硬伤）</li><li>session 数据量不会太大（相比于 mysql 中存储的数据）</li></ul><p><strong>为什么网站数据不适合用 redis？</strong></p><ul><li>操作频率不是太高（相比于 session 操作）</li><li>断电不能丢失，必须保留</li><li>数据量太大，内存成本太高</li></ul><br><h3 id="_3-3-koa2-配置-session" tabindex="-1"><a class="header-anchor" href="#_3-3-koa2-配置-session" aria-hidden="true">#</a> 3.3 koa2 配置 session</h3><ol><li>安装：<code>npm i koa-redis koa-generic-session -D</code></li><li><em>src/app.js</em>：</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> session <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;koa-generic-session&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> redisStore <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;koa-redis&#39;</span><span class="token punctuation">)</span>\n\n<span class="token comment">// session 配置</span>\napp<span class="token punctuation">.</span>keys <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;UIssdf_712%##$&#39;</span><span class="token punctuation">]</span>\napp<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token function">session</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  key<span class="token operator">:</span> <span class="token string">&#39;weibo.sid&#39;</span><span class="token punctuation">,</span> <span class="token comment">// cookie name 默认是 `koa.sid`</span>\n  prefix<span class="token operator">:</span> <span class="token string">&#39;weibo:sess:&#39;</span><span class="token punctuation">,</span> <span class="token comment">// redis key 的前缀，默认是 `koa:sess`</span>\n  cookie<span class="token operator">:</span> <span class="token punctuation">{</span>\n    path<span class="token operator">:</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span>\n    httpOnly<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    maxAge<span class="token operator">:</span> <span class="token number">24</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">,</span> <span class="token comment">// ms</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token comment">// ttl: 24 * 60 * 60 * 1000, // redis 的过期时间是自动配好的</span>\n  store<span class="token operator">:</span> <span class="token function">redisStore</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    all<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token constant">REDIS_CONF</span><span class="token punctuation">.</span>host<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token constant">REDIS_CONF</span><span class="token punctuation">.</span>port<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p><em>src/routes/index.js</em>：</p><blockquote><p>只有访问了 localhost/json 路由，才会记录 cookie 并同步到 session、redis</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>router<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/json&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> session <span class="token operator">=</span> ctx<span class="token punctuation">.</span>session\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>session<span class="token punctuation">.</span>viewNum <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    session<span class="token punctuation">.</span>viewNum <span class="token operator">=</span> <span class="token number">0</span>\n  <span class="token punctuation">}</span>\n  session<span class="token punctuation">.</span>viewNum <span class="token operator">+=</span> <span class="token number">1</span>\n\n  ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">&#39;koa2 json&#39;</span><span class="token punctuation">,</span>\n    viewNum<span class="token operator">:</span> session<span class="token punctuation">.</span>viewNum\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><br><h3 id="_3-4-单元测试-jest" tabindex="-1"><a class="header-anchor" href="#_3-4-单元测试-jest" aria-hidden="true">#</a> 3.4 单元测试 jest</h3><blockquote><p>必须是 *<em>.test.js</em> 作为结尾</p></blockquote><p><strong>单元测试</strong>：</p><ul><li>单个功能或接口，给定输入，得到输出。看输出是否符合要求</li><li>需要手动编写用例代码，然后统一执行</li><li>意义：能一次性执行所有单测，短时间内验证所有功能是否正常</li></ul><hr><blockquote><p>安装：<code>npm i -D jest</code>，运行：<code>npm run test</code></p></blockquote><p><em>package.json</em>：</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token property">&quot;test&quot;</span><span class="token operator">:</span> <span class="token string">&quot;cross-env NODE_ENV=test jest --runInBand --forceExit --colors&quot;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><em>test/demo.test.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * <span class="token keyword">@description</span> test demo\n * <span class="token keyword">@author</span> yuanke\n */</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">sum</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> a <span class="token operator">+</span> b\n<span class="token punctuation">}</span>\n\n<span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;10 + 20 应该等于 30&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token function">sum</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span>\n  <span class="token function">expect</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;10 + 20 不应该等于 40&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token function">sum</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span>\n  <span class="token function">expect</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">.</span>not<span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><br><h3 id="_3-5-测试-http-请求" tabindex="-1"><a class="header-anchor" href="#_3-5-测试-http-请求" aria-hidden="true">#</a> 3.5 测试 http 请求</h3><blockquote><p>安装：<code>npm i -D supertest</code></p></blockquote><p><em>test/json.test.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * <span class="token keyword">@description</span> json test\n * <span class="token keyword">@author</span> yuanke\n */</span>\n\n<span class="token keyword">const</span> server <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./server&#39;</span><span class="token punctuation">)</span>\n\n<span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;json 接口返回数据格式正确&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> server<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/json&#39;</span><span class="token punctuation">)</span>\n  <span class="token function">expect</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>body<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toEqual</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">&#39;koa2 json&#39;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token function">expect</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>body<span class="token punctuation">.</span>title<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token string">&#39;koa2 json&#39;</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token comment">// test(&#39;post 请求返回数据格式正确&#39;, async () =&gt; {</span>\n<span class="token comment">//   const res = await server.post(&#39;/login&#39;).send({</span>\n<span class="token comment">//     userName: &#39;zhangsan&#39;,</span>\n<span class="token comment">//     password: &#39;123&#39;</span>\n<span class="token comment">//   })</span>\n<span class="token comment">//   expect(res.body.code).toBe(20)</span>\n<span class="token comment">// })</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><br><h3 id="_3-6-eslint" tabindex="-1"><a class="header-anchor" href="#_3-6-eslint" aria-hidden="true">#</a> 3.6 eslint</h3>',138),d=(0,p.Uk)("官网："),g={href:"http://eslint.cn/demo/",target:"_blank",rel:"noopener noreferrer"},f=(0,p.Uk)("ESLint Demo - ESLint中文"),w=(0,p.uE)('<ol><li>安装：<code>npm i -S mysql2 sequelize</code></li><li>安装：<code>npm i -D eslint</code></li><li>使用：<code>eslint --init</code></li></ol><hr><p><em>.eslintignore</em>：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>node_modules\ntest\nsrc/public\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><em>.eslintrc.json</em>：</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n    <span class="token property">&quot;env&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token property">&quot;node&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        <span class="token property">&quot;commonjs&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        <span class="token property">&quot;es2021&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;extends&quot;</span><span class="token operator">:</span> <span class="token string">&quot;eslint:recommended&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;parserOptions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token property">&quot;requireConfigFile&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;rules&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token property">&quot;indent&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;error&quot;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token property">&quot;quotes&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n            <span class="token string">&quot;error&quot;</span><span class="token punctuation">,</span>\n            <span class="token string">&quot;single&quot;</span><span class="token punctuation">,</span>\n            <span class="token punctuation">{</span>\n                <span class="token property">&quot;allowTemplateLiterals&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token property">&quot;semi&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n            <span class="token string">&quot;error&quot;</span><span class="token punctuation">,</span>\n            <span class="token string">&quot;never&quot;</span>\n        <span class="token punctuation">]</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><p><strong>使用 eslint 到项目中</strong>：</p><ol><li>安装：<code>npm i -D pre-commit</code></li><li>配置 <em>package.json</em>，使之在每次 <code>commit</code> 之前都要运行一遍 <code>npm run lint</code></li></ol><p><em>package.json</em>：</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n  <span class="token property">&quot;lint&quot;</span><span class="token operator">:</span> <span class="token string">&quot;eslint --ext .js ./src&quot;</span>\n<span class="token punctuation">}</span>\n<span class="token property">&quot;pre-commit&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n  <span class="token string">&quot;lint&quot;</span>\n<span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><br><h3 id="_3-7-inspect-调试" tabindex="-1"><a class="header-anchor" href="#_3-7-inspect-调试" aria-hidden="true">#</a> 3.7 inspect 调试</h3><ol><li>修改 <em>package.json</em>：</li></ol><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token property">&quot;dev&quot;</span><span class="token operator">:</span> <span class="token string">&quot;cross-env NODE_ENV=dev nodemon --inspect=9229 bin/www&quot;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ol start="2"><li><code>npm run dev</code> 后，访问 <em>edge://inspect/#devices</em>，点击 inspect</li><li>在代码某处另起一行写上 <code>debugger</code>（例如在进入 <em>/json</em> 路由后），然后访问 <em>localhost:3000/json</em> 就会自动进入路由里面了</li></ol><br><h3 id="_3-8-404和错误页" tabindex="-1"><a class="header-anchor" href="#_3-8-404和错误页" aria-hidden="true">#</a> 3.8 404和错误页</h3><p><strong>404</strong>:</p><p><em>src/routes/views/404.ejs</em>：</p><div class="language-ejs ext-ejs line-numbers-mode"><pre class="language-ejs"><code><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">include</span><span class="token punctuation">(</span><span class="token string">&#39;layout/header&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">&#39;微博 - 404&#39;</span><span class="token punctuation">,</span> isNav<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span><span class="token delimiter punctuation">%&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container margin-top-20<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>row<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n      <span class="token comment">&lt;!-- 左侧 --&gt;</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>col-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>margin-bottom-20 padding-bottom-10 border-bottom<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>404<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">&gt;</span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>该网页未找到，请<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>返回首页<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">include</span><span class="token punctuation">(</span><span class="token string">&#39;layout/footer&#39;</span><span class="token punctuation">)</span></span><span class="token delimiter punctuation">%&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p><em>src/routes/views/error.ejs</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * <span class="token keyword">@description</span> error 404 路由\n * <span class="token keyword">@author</span> yuanke\n */</span>\n\n<span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;koa-router&#39;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n<span class="token comment">// error</span>\nrouter<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/error&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">await</span> ctx<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token comment">// 404</span>\nrouter<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;*&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">await</span> ctx<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token string">&#39;404&#39;</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> router\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p><em>src/app.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 引入路由</span>\n<span class="token keyword">const</span> index <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./routes/index&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> users <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./routes/users&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> errorViewRouter <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./routes/view/error&#39;</span><span class="token punctuation">)</span>\n\n<span class="token comment">// 注册路由</span>\napp<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>index<span class="token punctuation">.</span><span class="token function">routes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> index<span class="token punctuation">.</span><span class="token function">allowedMethods</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\napp<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>users<span class="token punctuation">.</span><span class="token function">routes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> users<span class="token punctuation">.</span><span class="token function">allowedMethods</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token comment">// 404 路由注册到最下面</span>\napp<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>errorViewRouter<span class="token punctuation">.</span><span class="token function">routes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> errorViewRouter<span class="token punctuation">.</span><span class="token function">allowedMethods</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p><strong>错误页</strong>：</p><p><em>src/routes/index.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>router<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/json&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">throw</span> <span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">&#39;koa2 json&#39;</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><em>src/app.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// error handler</span>\n<span class="token keyword">let</span> oneerrorConf <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span>isProd<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  oneerrorConf <span class="token operator">=</span> <span class="token punctuation">{</span>\n    redirect<span class="token operator">:</span> <span class="token string">&#39;/error&#39;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token function">onerror</span><span class="token punctuation">(</span>app<span class="token punctuation">,</span> oneerrorConf<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><br><h3 id="_3-9-jwt" tabindex="-1"><a class="header-anchor" href="#_3-9-jwt" aria-hidden="true">#</a> 3.9 jwt</h3><p><strong>简介</strong>：</p><blockquote><p>jwt：json web token，用户认证成功之后，server 端返回一个加密的 token 给客户端，客户端后续每次请求都会携带 token，以示当前的用户身份</p></blockquote><p><strong>步骤</strong>：</p><ol><li>安装：<code>npm i -S koa-jwt jsonwebtoken</code></li><li>实现 server 端返回一个加密的 token 给客户端：</li></ol><p><em>conf/constants.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token constant">SECRET</span><span class="token operator">:</span> <span class="token string">&#39;YuanKe4zaishi!!taIshuaiLe@&#39;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><em>app.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token constant">SECRET</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./conf/constants&#39;</span><span class="token punctuation">)</span>\n\n<span class="token comment">// error handler</span>\n<span class="token function">onerror</span><span class="token punctuation">(</span>app<span class="token punctuation">)</span>\n\n<span class="token comment">// 验证 jwt 的 koa 中间价</span>\napp<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token function">jwtKoa</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  secret<span class="token operator">:</span> <span class="token constant">SECRET</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unless</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  path<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\\/users\\/login</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">]</span> <span class="token comment">// 自定义哪些路由忽略 jwt 验证（登录页可能就是没有 token）</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p><em>routes/users.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;koa-router&#39;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> jwt <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;jsonwebtoken&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token constant">SECRET</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../conf/constants&#39;</span><span class="token punctuation">)</span>\n\nrouter<span class="token punctuation">.</span><span class="token function">prefix</span><span class="token punctuation">(</span><span class="token string">&#39;/users&#39;</span><span class="token punctuation">)</span>\n\n<span class="token comment">// 模拟登录</span>\nrouter<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/login&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> userName<span class="token punctuation">,</span> password <span class="token punctuation">}</span> <span class="token operator">=</span> ctx<span class="token punctuation">.</span>request<span class="token punctuation">.</span>body\n  <span class="token keyword">let</span> userInfo\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>userName <span class="token operator">===</span> <span class="token string">&#39;zhangsan&#39;</span> <span class="token operator">&amp;&amp;</span> password <span class="token operator">===</span> <span class="token string">&#39;abc&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 登录成功，获取用户信息</span>\n    userInfo <span class="token operator">=</span> <span class="token punctuation">{</span>\n      userId<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n      userName<span class="token operator">:</span> <span class="token string">&#39;zhangsan&#39;</span><span class="token punctuation">,</span>\n      nickName<span class="token operator">:</span> <span class="token string">&#39;zhangsan&#39;</span><span class="token punctuation">,</span>\n      gender<span class="token operator">:</span> <span class="token number">1</span> <span class="token comment">// 男</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token comment">// 加密 userInfo</span>\n  <span class="token keyword">let</span> token\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>userInfo<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    token <span class="token operator">=</span> jwt<span class="token punctuation">.</span><span class="token function">sign</span><span class="token punctuation">(</span>userInfo<span class="token punctuation">,</span> <span class="token constant">SECRET</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n      expiresIn<span class="token operator">:</span> <span class="token string">&#39;1h&#39;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>userInfo <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token punctuation">{</span>\n      errno<span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>\n      msg<span class="token operator">:</span> <span class="token string">&#39;登录失败&#39;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">return</span>\n  <span class="token punctuation">}</span>\n  ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token punctuation">{</span>\n    errno<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n    data<span class="token operator">:</span> token\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> router\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br></div></div><ol start="3"><li>访问 <em>localhost:3000/users/getUserInfo</em> 路由，在 postman 中的 header 处填入 <code>Key: Authorization --- Value: Bearer xxx</code>（xxx 为访问 <em>localhost:3000/users/login</em>）登录后产生的加密的 token：</li></ol><p><em>routes/user.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 获取用户信息</span>\nrouter<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/getUserInfo&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> token <span class="token operator">=</span> ctx<span class="token punctuation">.</span>header<span class="token punctuation">.</span>authorization\n  <span class="token comment">// 解析</span>\n  <span class="token keyword">try</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> payload <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">verify</span><span class="token punctuation">(</span>token<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39; &#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token constant">SECRET</span><span class="token punctuation">)</span>\n    ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token punctuation">{</span>\n      errno<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n      userInfo<span class="token operator">:</span> payload\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token punctuation">{</span>\n      errno<span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>\n      msg<span class="token operator">:</span> <span class="token string">&#39;verify token failed&#39;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><br><h2 id="_4-技术方案设计" tabindex="-1"><a class="header-anchor" href="#_4-技术方案设计" aria-hidden="true">#</a> 4.技术方案设计</h2><h3 id="_4-1-页面与-api" tabindex="-1"><a class="header-anchor" href="#_4-1-页面与-api" aria-hidden="true">#</a> 4.1 页面与 API</h3><blockquote><p>凡 API 都有 /api 的前缀</p></blockquote><p><strong>总领</strong>：</p><ul><li>原型图演示</li><li>页面汇总（模板、路由、组件）</li><li>API 汇总</li></ul><hr><p><strong>原型图演示</strong>：</p><ol><li>原型图 - 注册：<em>http://www.weibo.com/register</em><ul><li>注册：<em>/api/user/register</em></li><li>用户名是否存在：<em>/api/user/isExist</em></li></ul></li><li>原型图 - 登录：<em>http://www.weibo.com/login</em><ul><li>登录：<em>/api/user/login</em></li></ul></li><li>原型图 - 设置：<em>http://www.weibo.com/setting</em><ul><li>修改用户信息 表单： <ul><li>修改个人信息：<em>/api/user/changeInfo</em></li><li>图片上传：<em>/api/utils/upload</em></li></ul></li><li>修改密码 表单： <ul><li>修改密码：<em>/api/user/changePassword</em></li></ul></li><li>退出登录： <ul><li>退出登录：<em>/api/user/logout</em></li></ul></li></ul></li><li>原型图 - 首页：<em>http://www.weibo.com</em><ul><li>导航</li><li>发布微博的输入框： <ul><li>创建微博：<em>api/blog/create</em></li><li>图片上传：<em>api/utils/upload</em></li></ul></li><li>个人信息（当前登录用户）</li><li>粉丝列表</li><li>微博列表</li><li>加载更多： <ul><li>加载更多：<em>/api/blog/loadMore/:pageIndex</em></li></ul></li><li>关注人列表</li></ul></li><li>原型图 - 个人主页：<em>http://www.weibo.com/profile/zhangsan</em><ul><li>导航</li><li>微博列表</li><li>粉丝列表</li><li>关主任列表</li><li>个人信息（自己或他人）： <ul><li>关注：<em>/api/profile/follow</em></li><li>取消关注：<em>/api/profile/unFollow</em></li></ul></li><li>加载更多： <ul><li>加载更多：<em>/api/profile/loadMore/:userName/:pageIndex</em></li></ul></li></ul></li><li>原型图 - 广场：<em>http://www.weibo.com/square</em><ul><li>导航</li><li>微博列表</li><li>加载更多： <ul><li>加载更多：<em>/api/square/loadMore/:pageIndex</em></li></ul></li></ul></li><li>原型图 - @ 我的：<em>http://www.weibo.com/atMe</em><ul><li>导航</li><li>发布微博的输入框： <ul><li>创建微博：<em>/api/blog/create</em></li><li>图片上传：<em>/api/utils/upload</em></li></ul></li><li>微博列表</li><li>加载更多 <ul><li>加载更多：<em>/api/atMe/loadMore/:pageIndex</em></li></ul></li></ul></li><li>原型图 - 错误页：<em>http://www.weibo.com/error</em><ul><li>导航</li><li>error 信息</li></ul></li></ol><br><h3 id="_4-2-数据模型设计" tabindex="-1"><a class="header-anchor" href="#_4-2-数据模型设计" aria-hidden="true">#</a> 4.2 数据模型设计</h3><ul><li>回顾 ER 图</li><li>关系型数据库 三大范式</li><li>数据模型设计</li></ul><hr><p><strong>关系型数据库三大范式</strong>：</p><ul><li>属性的原子性：每一列都不可再拆解</li><li>记录的唯一性：有唯一标识（主键），其他属性都依赖于主键</li><li>字段的冗余性：不存在数据冗余和传递依赖</li></ul><p><strong>三大范式好处</strong>：</p><ul><li>数据规范严谨，不易出错</li><li>占用空间更小</li><li>访问速度更快</li></ul><br><h2 id="_5-api-接口开发" tabindex="-1"><a class="header-anchor" href="#_5-api-接口开发" aria-hidden="true">#</a> 5.API 接口开发</h2><h3 id="_5-1-创建页面" tabindex="-1"><a class="header-anchor" href="#_5-1-创建页面" aria-hidden="true">#</a> 5.1 创建页面</h3><blockquote><p>分支的相关知识：</p><p>查看已有分支：<code>git branch -a</code></p><p>创建分支：<code>git branch 分支名字</code></p><p>切换分支：<code>git checkout 分支名字</code></p><p>创建并切换分支：<code>git checkout -b 分支名称</code></p><p>合并分支：第一步，切换到 master 分支：<code>git checkout master</code>；第二步，将分支合并到 master：<code>git merge 分支</code>（或者使用 <code>git pull 远程主机名 远程分支名:本地分支名</code>，如果如果远程分支要与当前分支合并，则可以忽略冒号后面部分）</p><p>删除：<code>git branch -d 分支名称</code></p><p>恢复分支：第一步，<code>git log</code> 查出分支的提交号；第二步：<code>git branch 分支名字 提交号</code></p><p>查看分支图：<code>git log --graph --pretty=oneline --abbrev-commit</code></p><p>重命名分支：<code>git branch -m</code></p></blockquote><ol><li>拉取分支：<code>git checkout -b feature-login</code></li><li>在 <em>src/routes/view/user.js</em>：，并且在 <em>src/app.js</em> 注册声明路由</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * <span class="token keyword">@description</span> user view 路由\n * <span class="token keyword">@author</span> yuanke\n */</span>\n\n<span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;koa-router&#39;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\nrouter<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/login&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">await</span> ctx<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token string">&#39;login&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\nrouter<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/register&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">await</span> ctx<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token string">&#39;register&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> router\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p><em>src/views/login.ejs</em>：</p><div class="language-ejs ext-ejs line-numbers-mode"><pre class="language-ejs"><code><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">include</span><span class="token punctuation">(</span><span class="token string">&#39;layout/header&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">&#39;微博 - 登录&#39;</span><span class="token punctuation">,</span> isNarrow<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span><span class="token delimiter punctuation">%&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>登录<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>\n<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">if</span> <span class="token punctuation">(</span>locals<span class="token punctuation">.</span>isLogin<span class="token punctuation">)</span> <span class="token punctuation">{</span> </span><span class="token delimiter punctuation">%&gt;</span></span>\n\t<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript"> locals<span class="token punctuation">.</span>userName</span><span class="token delimiter punctuation">%&gt;</span></span> 您已成功登录，请直接访问<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>首页<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>\n<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> </span><span class="token delimiter punctuation">%&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-control<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>input-username<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>请输入用户名<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>password<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-control<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>input-password<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>请输入密码<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>submit<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn btn-primary<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn-submit<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>登录<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n    <span class="token entity named-entity" title=" ">&amp;nbsp;</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/register<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>注册账号&gt;&gt;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>\n\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n    <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">var</span> $inputUserName <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#input-username&#39;</span><span class="token punctuation">)</span>\n      <span class="token keyword">var</span> $inputPassword <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#input-password&#39;</span><span class="token punctuation">)</span>\n      <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#btn-submit&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 阻止默认的提交表单行为</span>\n        e<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n        <span class="token keyword">const</span> userName <span class="token operator">=</span> $inputUserName<span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n        <span class="token keyword">const</span> password <span class="token operator">=</span> $inputPassword<span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n        <span class="token comment">// 提交数据</span>\n        ajax<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/api/user/login&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n          userName<span class="token punctuation">,</span>\n          password\n        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token function">alert</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>\n            <span class="token keyword">return</span>\n          <span class="token punctuation">}</span>\n          <span class="token comment">// 跳转到指定 url 或首页</span>\n          <span class="token keyword">var</span> redirectUrl <span class="token operator">=</span> $<span class="token punctuation">.</span>query<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;url&#39;</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">&#39;/&#39;</span>\n          location<span class="token punctuation">.</span>href <span class="token operator">=</span> redirectUrl\n        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">}</span> </span><span class="token delimiter punctuation">%&gt;</span></span>\n\n<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">include</span><span class="token punctuation">(</span><span class="token string">&#39;layout/footer&#39;</span><span class="token punctuation">)</span></span><span class="token delimiter punctuation">%&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br></div></div><p><em>src/views/register.ejs</em>：</p><div class="language-ejs ext-ejs line-numbers-mode"><pre class="language-ejs"><code><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">include</span><span class="token punctuation">(</span><span class="token string">&#39;layout/header&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">&#39;微博 - 注册&#39;</span><span class="token punctuation">,</span> isNarrow<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span><span class="token delimiter punctuation">%&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>注册<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>\n<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">if</span> <span class="token punctuation">(</span>locals<span class="token punctuation">.</span>isLogin<span class="token punctuation">)</span> <span class="token punctuation">{</span> </span><span class="token delimiter punctuation">%&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript"> locals<span class="token punctuation">.</span>userName</span><span class="token delimiter punctuation">%&gt;</span></span> 您已成功登录，请直接访问<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>首页<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>\n<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> </span><span class="token delimiter punctuation">%&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-control<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>input-username<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>请输入用户名<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>small</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>span-username-info<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-text text-muted<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>small</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>password<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-control<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>input-password<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>请输入密码<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>password<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-control<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>input-password-repeat<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>重新输入密码<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>small</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>span-password-repeat-info<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-text text-muted<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>small</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-control<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>select-gender<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>男<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>女<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>保密<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>submit<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn btn-primary<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn-submit<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>注册<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n    <span class="token entity named-entity" title=" ">&amp;nbsp;</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/login<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>已有账号，返回登录&gt;&gt;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>\n\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n    <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">var</span> $inputUserName <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#input-username&#39;</span><span class="token punctuation">)</span>\n      <span class="token keyword">var</span> $spanUserNameInfo <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#span-username-info&#39;</span><span class="token punctuation">)</span>\n      <span class="token keyword">var</span> $inputPassword <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#input-password&#39;</span><span class="token punctuation">)</span>\n      <span class="token keyword">var</span> $inputPasswordRepeat <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#input-password-repeat&#39;</span><span class="token punctuation">)</span>\n      <span class="token keyword">var</span> $spanPasswordRepeatInfo <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#span-password-repeat-info&#39;</span><span class="token punctuation">)</span>\n      <span class="token keyword">var</span> $selectGender <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#select-gender&#39;</span><span class="token punctuation">)</span>\n      <span class="token keyword">var</span> userNameTimeoutId\n      <span class="token keyword">var</span> passwordTimeoutId\n      <span class="token keyword">var</span> isPasswordSame <span class="token operator">=</span> <span class="token boolean">false</span> <span class="token comment">// 默认两次密码不一致</span>\n      <span class="token keyword">var</span> isUserNameExist <span class="token operator">=</span> <span class="token boolean">true</span> <span class="token comment">// 默认用户名已存在</span>\n\n      <span class="token comment">// 监听用户名输入</span>\n      $inputUserName<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;input&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 做一个简单的防抖</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>userNameTimeoutId<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          <span class="token function">clearTimeout</span><span class="token punctuation">(</span>userNameTimeoutId<span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n        userNameTimeoutId <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          <span class="token comment">// 判断用户名是否已存在</span>\n          <span class="token keyword">var</span> userName <span class="token operator">=</span> $inputUserName<span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n          ajax<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/api/user/isExist&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n            userName\n          <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            $spanUserNameInfo<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n              $spanUserNameInfo<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string">&#39;用户名可用&#39;</span><span class="token punctuation">)</span>\n              isUserNameExist <span class="token operator">=</span> <span class="token boolean">false</span>\n            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n              $spanUserNameInfo<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string">&#39;用户名已存在！&#39;</span><span class="token punctuation">)</span>\n              isUserNameExist <span class="token operator">=</span> <span class="token boolean">true</span>\n            <span class="token punctuation">}</span>\n          <span class="token punctuation">}</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n      <span class="token comment">// 监听验证密码输入</span>\n      $inputPasswordRepeat<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;input&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 做一个简单的防抖</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>passwordTimeoutId<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          <span class="token function">clearTimeout</span><span class="token punctuation">(</span>passwordTimeoutId<span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n        passwordTimeoutId <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          <span class="token keyword">var</span> password <span class="token operator">=</span> $inputPassword<span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n          <span class="token keyword">var</span> passwordRepeat <span class="token operator">=</span> $inputPasswordRepeat<span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n          $spanPasswordRepeatInfo<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n          <span class="token keyword">if</span> <span class="token punctuation">(</span>password <span class="token operator">===</span> passwordRepeat<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            $spanPasswordRepeatInfo<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string">&#39;两次密码一致&#39;</span><span class="token punctuation">)</span>\n            isPasswordSame <span class="token operator">=</span> <span class="token boolean">true</span>\n          <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n            $spanPasswordRepeatInfo<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string">&#39;两次密码不一致！&#39;</span><span class="token punctuation">)</span>\n            isPasswordSame <span class="token operator">=</span> <span class="token boolean">false</span>\n          <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n      <span class="token comment">// 注册事件</span>\n      <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#btn-submit&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 阻止默认的提交表单行为</span>\n        e<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n        <span class="token comment">// 验证</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>isUserNameExist<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;用户名已存在&#39;</span><span class="token punctuation">)</span>\n          <span class="token keyword">return</span>\n        <span class="token punctuation">}</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isPasswordSame<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;两次密码不一致&#39;</span><span class="token punctuation">)</span>\n          <span class="token keyword">return</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token keyword">var</span> userName <span class="token operator">=</span> $inputUserName<span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n        <span class="token keyword">var</span> password <span class="token operator">=</span> $inputPassword<span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n        <span class="token keyword">var</span> gender <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>$selectGender<span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n\n        <span class="token comment">// 提交数据</span>\n        ajax<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/api/user/register&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n          userName<span class="token punctuation">,</span>\n          password<span class="token punctuation">,</span>\n          gender\n        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token function">alert</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>\n            <span class="token keyword">return</span>\n          <span class="token punctuation">}</span>\n          <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;注册成功，请登录&#39;</span><span class="token punctuation">)</span>\n          location<span class="token punctuation">.</span>href <span class="token operator">=</span> <span class="token string">&#39;/login&#39;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">}</span> </span><span class="token delimiter punctuation">%&gt;</span></span>\n\n<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">include</span><span class="token punctuation">(</span><span class="token string">&#39;layout/footer&#39;</span><span class="token punctuation">)</span></span><span class="token delimiter punctuation">%&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br></div></div><br><h3 id="_5-2-数据建模" tabindex="-1"><a class="header-anchor" href="#_5-2-数据建模" aria-hidden="true">#</a> 5.2 数据建模</h3><blockquote><p>终端输入：<code>node src/db/sync.js</code> 就可以完成建模</p></blockquote><p><em>src/db/types.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * <span class="token keyword">@description</span> 封装 sequelize 数据类型\n * <span class="token keyword">@author</span> yuanke\n */</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> DataTypes <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;sequelize/types&#39;</span><span class="token punctuation">)</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token constant">STRING</span><span class="token operator">:</span> DataTypes<span class="token punctuation">.</span><span class="token constant">STRING</span><span class="token punctuation">,</span>\n  <span class="token constant">DECIMAL</span><span class="token operator">:</span> DataTypes<span class="token punctuation">.</span><span class="token constant">DECIMAL</span><span class="token punctuation">,</span>\n  <span class="token constant">TEXT</span><span class="token operator">:</span> DataTypes<span class="token punctuation">.</span><span class="token constant">TEXT</span><span class="token punctuation">,</span>\n  <span class="token constant">INTEGER</span><span class="token operator">:</span> DataTypes<span class="token punctuation">.</span><span class="token constant">INTEGER</span><span class="token punctuation">,</span>\n  <span class="token constant">BOOLEAN</span><span class="token operator">:</span> DataTypes<span class="token punctuation">.</span><span class="token constant">BOOLEAN</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p><em>src/db/model/User.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * <span class="token keyword">@description</span> 用户数据模型\n * <span class="token keyword">@author</span> yuanke\n */</span>\n\n<span class="token keyword">const</span> seq <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../seq&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token constant">STRING</span><span class="token punctuation">,</span> <span class="token constant">DECIMAL</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../types&#39;</span><span class="token punctuation">)</span>\n\n<span class="token comment">// users</span>\n<span class="token keyword">const</span> User <span class="token operator">=</span> seq<span class="token punctuation">.</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token string">&#39;user&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  userName<span class="token operator">:</span> <span class="token punctuation">{</span>\n    type<span class="token operator">:</span> <span class="token constant">STRING</span><span class="token punctuation">,</span>\n    allowNull<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n    unique<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    comment<span class="token operator">:</span> <span class="token string">&#39;用户名，唯一&#39;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  password<span class="token operator">:</span> <span class="token punctuation">{</span>\n    type<span class="token operator">:</span> <span class="token constant">STRING</span><span class="token punctuation">,</span>\n    allowNull<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n    comment<span class="token operator">:</span> <span class="token string">&#39;密码&#39;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  nickName<span class="token operator">:</span> <span class="token punctuation">{</span>\n    type<span class="token operator">:</span> <span class="token constant">STRING</span><span class="token punctuation">,</span>\n    allowNull<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    comment<span class="token operator">:</span> <span class="token string">&#39;昵称&#39;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  gender<span class="token operator">:</span> <span class="token punctuation">{</span>\n    type<span class="token operator">:</span> <span class="token constant">DECIMAL</span><span class="token punctuation">,</span>\n    allowNull<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n    defaultValue<span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>\n    comment<span class="token operator">:</span> <span class="token string">&#39;性别 (1 男性,2 女性,3 保密)&#39;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  picture<span class="token operator">:</span> <span class="token punctuation">{</span>\n    type<span class="token operator">:</span> <span class="token constant">STRING</span><span class="token punctuation">,</span>\n    comment<span class="token operator">:</span> <span class="token string">&#39;头像,图片地址&#39;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  city<span class="token operator">:</span> <span class="token punctuation">{</span>\n    type<span class="token operator">:</span> <span class="token constant">STRING</span><span class="token punctuation">,</span>\n    comment<span class="token operator">:</span> <span class="token string">&#39;城市&#39;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> User\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br></div></div><p><em>src/db/sync.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * <span class="token keyword">@description</span> sequelize 同步数据库\n * <span class="token keyword">@author</span> yuanke\n */</span>\n\n<span class="token keyword">const</span> seq <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./seq&#39;</span><span class="token punctuation">)</span>\n<span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./model/index&#39;</span><span class="token punctuation">)</span>\n\n<span class="token comment">// 测试连接</span>\nseq<span class="token punctuation">.</span><span class="token function">authenticate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;auth ok&#39;</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;auth err&#39;</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token comment">// 执行同步</span>\nseq<span class="token punctuation">.</span><span class="token function">sync</span><span class="token punctuation">(</span><span class="token punctuation">{</span> force<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;sync ok&#39;</span><span class="token punctuation">)</span>\n  process<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><br><h3 id="_5-3-注册-api-路由和分层" tabindex="-1"><a class="header-anchor" href="#_5-3-注册-api-路由和分层" aria-hidden="true">#</a> 5.3 注册 API - 路由和分层</h3><p><strong>开发注册功能</strong>：</p><ul><li>回顾技术方案</li><li>开发注册接口</li><li>密码加密 &amp; 用户信息验证</li></ul><hr><p><em>src/routes/view/user.js</em>：routes 层中的 view</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * <span class="token keyword">@description</span> user view 路由\n * <span class="token keyword">@author</span> yuanke\n */</span>\n\n<span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;koa-router&#39;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\nrouter<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/login&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">await</span> ctx<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token string">&#39;login&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\nrouter<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/register&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">await</span> ctx<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token string">&#39;register&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> router\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p><em>src/routes/api/user.js</em>：routes 层中的 API</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * <span class="token keyword">@description</span> user 路由\n * <span class="token keyword">@author</span> yuanke\n */</span>\n\n<span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;koa-router&#39;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\nrouter<span class="token punctuation">.</span><span class="token function">prefix</span><span class="token punctuation">(</span><span class="token string">&#39;/api/user&#39;</span><span class="token punctuation">)</span>\n\n<span class="token comment">// 注册路由</span>\nrouter<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/register&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token comment">// 用户名是否存在</span>\nrouter<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/isExist&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> userName <span class="token punctuation">}</span> <span class="token operator">=</span> ctx<span class="token punctuation">.</span>request<span class="token punctuation">.</span>body\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> router\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p><em>src/controller/user.js</em>：controller 层</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * <span class="token keyword">@description</span> user controller\n * <span class="token keyword">@author</span> yuanke\n */</span>\n\n<span class="token doc-comment comment">/**\n * 用户名是否存在\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">userName</span> 用户名\n */</span>\n<span class="token keyword">const</span> <span class="token function-variable function">isExist</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">userName</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 业务逻辑处理</span>\n  <span class="token comment">// 调用 services 层获取数据</span>\n  <span class="token comment">// 统一返回格式</span>\n<span class="token punctuation">}</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  isExist\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p><em>src/service/user.js</em>：service 层</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * <span class="token keyword">@description</span> user service\n * <span class="token keyword">@author</span> yuanke\n */</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> User <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../db/model/index&#39;</span><span class="token punctuation">)</span>\n\n<span class="token doc-comment comment">/**\n * 获取用户信息\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">userName</span> 用户名\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">password</span> 密码\n */</span>\n<span class="token keyword">const</span> <span class="token function-variable function">getUserInfo</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">userName<span class="token punctuation">,</span> password</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><br><h3 id="_5-4-注册-api-格式化用户信息" tabindex="-1"><a class="header-anchor" href="#_5-4-注册-api-格式化用户信息" aria-hidden="true">#</a> 5.4 注册 API - 格式化用户信息</h3><p><em>src/routes/api/user.js</em>：routes 层</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * <span class="token keyword">@description</span> user 路由\n * <span class="token keyword">@author</span> yuanke\n */</span>\n\n<span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;koa-router&#39;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> isExist <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../../controller/user&#39;</span><span class="token punctuation">)</span>\n\nrouter<span class="token punctuation">.</span><span class="token function">prefix</span><span class="token punctuation">(</span><span class="token string">&#39;/api/user&#39;</span><span class="token punctuation">)</span>\n\n<span class="token comment">// 注册路由</span>\nrouter<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/register&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token comment">// 用户名是否存在</span>\nrouter<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/isExist&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> userName <span class="token punctuation">}</span> <span class="token operator">=</span> ctx<span class="token punctuation">.</span>request<span class="token punctuation">.</span>body\n  ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">isExist</span><span class="token punctuation">(</span>userName<span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> router\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><p><em>src/controller/user.js</em>：controller 层</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * <span class="token keyword">@description</span> user controller\n * <span class="token keyword">@author</span> yuanke\n */</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> getUserInfo <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../service/user&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> SuccessModel<span class="token punctuation">,</span> ErrorModel <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../model/ResModel&#39;</span><span class="token punctuation">)</span>\n\n<span class="token doc-comment comment">/**\n * 用户名是否存在\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">userName</span> 用户名\n */</span>\n<span class="token keyword">const</span> <span class="token function-variable function">isExist</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">userName</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> userInfo <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getUserInfo</span><span class="token punctuation">(</span>userName<span class="token punctuation">)</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>userInfo<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 已存在</span>\n    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">SuccessModel</span><span class="token punctuation">(</span>userInfo<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 不存在</span>\n    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ErrorModel</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      errno<span class="token operator">:</span> <span class="token number">10003</span><span class="token punctuation">,</span>\n      message<span class="token operator">:</span> <span class="token string">&#39;用户名已存在&#39;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  isExist\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><p><em>src/service/user.js</em>：service 层</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * <span class="token keyword">@description</span> user service\n * <span class="token keyword">@author</span> yuanke\n */</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> User <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../db/model/index&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> formatUser <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./_format&#39;</span><span class="token punctuation">)</span>\n\n<span class="token doc-comment comment">/**\n * 获取用户信息\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">userName</span> 用户名\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">password</span> 密码\n */</span>\n<span class="token keyword">const</span> <span class="token function-variable function">getUserInfo</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">userName<span class="token punctuation">,</span> password</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 查询条件</span>\n  <span class="token keyword">const</span> whereOpt <span class="token operator">=</span> <span class="token punctuation">{</span>\n    userName\n  <span class="token punctuation">}</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>password<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>whereOpt<span class="token punctuation">,</span> <span class="token punctuation">{</span> password <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n  <span class="token comment">// 查询</span>\n  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> User<span class="token punctuation">.</span><span class="token function">findOne</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    attributes<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;userName&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;nickName&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;picture&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;city&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    where<span class="token operator">:</span> whereOpt\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>result <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 未找到</span>\n    <span class="token keyword">return</span> result\n  <span class="token punctuation">}</span>\n  <span class="token comment">// 格式化</span>\n  <span class="token keyword">const</span> formatRes <span class="token operator">=</span> <span class="token function">formatUser</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span><span class="token function">toJSON</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n  <span class="token keyword">return</span> formatRes\n<span class="token punctuation">}</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  getUserInfo\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br></div></div><p><em>src/model/ResModel.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * <span class="token keyword">@description</span> res 的数据模型\n * <span class="token keyword">@author</span> yuanke\n */</span>\n\n<span class="token comment">// 基础模块</span>\n<span class="token keyword">class</span> <span class="token class-name">BaseModel</span> <span class="token punctuation">{</span>\n  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> errno<span class="token punctuation">,</span> data<span class="token punctuation">,</span> message <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>errno <span class="token operator">=</span> errno\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span>data <span class="token operator">=</span> data\n    <span class="token punctuation">}</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>message<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span>message <span class="token operator">=</span> message\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token doc-comment comment">/**\n * 成功的数据模型\n */</span>\n<span class="token keyword">class</span> <span class="token class-name">SuccessModel</span> <span class="token keyword">extends</span> <span class="token class-name">BaseModel</span> <span class="token punctuation">{</span>\n  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">data <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      errno<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n      data\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token doc-comment comment">/**\n * 失败的数据模型\n */</span>\n<span class="token keyword">class</span> <span class="token class-name">ErrorModel</span> <span class="token keyword">extends</span> <span class="token class-name">BaseModel</span> <span class="token punctuation">{</span>\n  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> errno<span class="token punctuation">,</span> message <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      errno<span class="token punctuation">,</span>\n      message\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  SuccessModel<span class="token punctuation">,</span>\n  ErrorModel\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br></div></div><p><em>src/service/_format.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * <span class="token keyword">@description</span> 数据格式化\n * <span class="token keyword">@author</span> yuanke\n */</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token constant">DEFAULT_PICTURE</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../conf/constant&#39;</span><span class="token punctuation">)</span>\n\n<span class="token doc-comment comment">/**\n * 用户默认头像\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Object<span class="token punctuation">}</span></span> <span class="token parameter">obj</span> 用户对象\n * <span class="token keyword">@returns</span> 用户对象\n */</span>\n<span class="token keyword">const</span> <span class="token function-variable function">_formatUserPicture</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>obj<span class="token punctuation">.</span>picture <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    obj<span class="token punctuation">.</span>picture <span class="token operator">=</span> <span class="token constant">DEFAULT_PICTURE</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">return</span> obj\n<span class="token punctuation">}</span>\n\n<span class="token doc-comment comment">/**\n * 格式化用户信息\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Array<span class="token operator">|</span>Object<span class="token punctuation">}</span></span> <span class="token parameter">list</span> 用户列表或者单个用户对象\n */</span>\n<span class="token keyword">const</span> <span class="token function-variable function">formatUser</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">list</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>list <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> list\n  <span class="token punctuation">}</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>list <span class="token keyword">instanceof</span> <span class="token class-name">Array</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 数组 用户列表 findMany</span>\n    <span class="token keyword">return</span> list<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>_formatUserPicture<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n  <span class="token comment">// 单个对象 findOne</span>\n  <span class="token keyword">return</span> <span class="token function">_formatUserPicture</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  formatUser\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br></div></div><p><em>src/conf/constant.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * <span class="token keyword">@description</span> 常量集合\n * <span class="token keyword">@author</span> yuanke\n */</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token constant">DEFAULT_PICTURE</span><span class="token operator">:</span> <span class="token string">&#39;https://cn.vuejs.org/images/logo.svg&#39;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><br><h3 id="_5-5-注册-api-完成-register" tabindex="-1"><a class="header-anchor" href="#_5-5-注册-api-完成-register" aria-hidden="true">#</a> 5.5 注册 API - 完成 register</h3><p><em>src/routes/api/user.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * <span class="token keyword">@description</span> user 路由\n * <span class="token keyword">@author</span> yuanke\n */</span>\n\n<span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;koa-router&#39;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> isExist<span class="token punctuation">,</span> register <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../../controller/user&#39;</span><span class="token punctuation">)</span>\n\nrouter<span class="token punctuation">.</span><span class="token function">prefix</span><span class="token punctuation">(</span><span class="token string">&#39;/api/user&#39;</span><span class="token punctuation">)</span>\n\n<span class="token comment">// 注册路由</span>\nrouter<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/register&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> userName<span class="token punctuation">,</span> password<span class="token punctuation">,</span> gender <span class="token punctuation">}</span> <span class="token operator">=</span> ctx<span class="token punctuation">.</span>request<span class="token punctuation">.</span>body\n  <span class="token comment">// 调用 controller,返回</span>\n  ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">register</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    userName<span class="token punctuation">,</span>\n    password<span class="token punctuation">,</span>\n    gender\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token comment">// 用户名是否存在</span>\nrouter<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/isExist&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> userName <span class="token punctuation">}</span> <span class="token operator">=</span> ctx<span class="token punctuation">.</span>request<span class="token punctuation">.</span>body\n  ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">isExist</span><span class="token punctuation">(</span>userName<span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> router\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><p><em>src/controller/user.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * <span class="token keyword">@description</span> user controller\n * <span class="token keyword">@author</span> yuanke\n */</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> getUserInfo<span class="token punctuation">,</span> createUser <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../service/user&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> SuccessModel<span class="token punctuation">,</span> ErrorModel <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../model/ResModel&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span>\n  registerUserNameNotExistInfo<span class="token punctuation">,</span>\n  registerUserNameExistInfo<span class="token punctuation">,</span>\n  registerFailInfo\n<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../model/ErrorInfo&#39;</span><span class="token punctuation">)</span>\n\n<span class="token doc-comment comment">/**\n * 用户名是否存在\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">userName</span> 用户名\n */</span>\n<span class="token keyword">const</span> <span class="token function-variable function">isExist</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">userName</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> userInfo <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getUserInfo</span><span class="token punctuation">(</span>userName<span class="token punctuation">)</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>userInfo<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 已存在</span>\n    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">SuccessModel</span><span class="token punctuation">(</span>userInfo<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 不存在</span>\n    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ErrorModel</span><span class="token punctuation">(</span>registerUserNameNotExistInfo<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token doc-comment comment">/**\n * 注册\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">userName</span> 用户名\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">password</span> 密码\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">userName</span> 性别 1男2女3保密\n */</span>\n<span class="token keyword">const</span> <span class="token function-variable function">register</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> userName<span class="token punctuation">,</span> password<span class="token punctuation">,</span> gender <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> userInfo <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getUserInfo</span><span class="token punctuation">(</span>userName<span class="token punctuation">)</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>userInfo<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 用户名已存在</span>\n    <span class="token keyword">return</span> <span class="token function">ErrorModel</span><span class="token punctuation">(</span>registerUserNameExistInfo<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n  <span class="token comment">// 注册 service</span>\n  <span class="token keyword">try</span> <span class="token punctuation">{</span>\n    <span class="token keyword">await</span> <span class="token function">createUser</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      userName<span class="token punctuation">,</span>\n      password<span class="token punctuation">,</span>\n      gender\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">SuccessModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>ex<span class="token punctuation">.</span>message<span class="token punctuation">,</span> ex<span class="token punctuation">.</span>stack<span class="token punctuation">)</span>\n    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ErrorModel</span><span class="token punctuation">(</span>registerFailInfo<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  isExist<span class="token punctuation">,</span>\n  register\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br></div></div><p><em>src/service/user.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * <span class="token keyword">@description</span> user service\n * <span class="token keyword">@author</span> yuanke\n */</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> User <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../db/model/index&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> formatUser <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./_format&#39;</span><span class="token punctuation">)</span>\n\n<span class="token doc-comment comment">/**\n * 获取用户信息\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">userName</span> 用户名\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">password</span> 密码\n */</span>\n<span class="token keyword">const</span> <span class="token function-variable function">getUserInfo</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">userName<span class="token punctuation">,</span> password</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 查询条件</span>\n  <span class="token keyword">const</span> whereOpt <span class="token operator">=</span> <span class="token punctuation">{</span>\n    userName\n  <span class="token punctuation">}</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>password<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>whereOpt<span class="token punctuation">,</span> <span class="token punctuation">{</span> password <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n  <span class="token comment">// 查询</span>\n  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> User<span class="token punctuation">.</span><span class="token function">findOne</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    attributes<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;userName&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;nickName&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;picture&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;city&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    where<span class="token operator">:</span> whereOpt\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>result <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 未找到</span>\n    <span class="token keyword">return</span> result\n  <span class="token punctuation">}</span>\n  <span class="token comment">// 格式化</span>\n  <span class="token keyword">const</span> formatRes <span class="token operator">=</span> <span class="token function">formatUser</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span><span class="token function">toJSON</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n  <span class="token keyword">return</span> formatRes\n<span class="token punctuation">}</span>\n\n<span class="token doc-comment comment">/**\n * 创建用户\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">userName</span> 用户名\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">password</span> 密码\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">gender</span> 性别\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">nickName</span> 昵称\n */</span>\n<span class="token keyword">const</span> <span class="token function-variable function">createUser</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> userName<span class="token punctuation">,</span> password<span class="token punctuation">,</span> gender <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">,</span> nickName <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> User<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    userName<span class="token punctuation">,</span>\n    password<span class="token punctuation">,</span>\n    nickName<span class="token operator">:</span> nickName <span class="token operator">?</span> nickName <span class="token operator">:</span> userName<span class="token punctuation">,</span>\n    gender\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token keyword">return</span> result<span class="token punctuation">.</span><span class="token function">toJSON</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  getUserInfo<span class="token punctuation">,</span>\n  createUser\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br></div></div><br><h3 id="_5-6-注册-api-密码加密" tabindex="-1"><a class="header-anchor" href="#_5-6-注册-api-密码加密" aria-hidden="true">#</a> 5.6 注册 API - 密码加密</h3><p><em>src/utils/cryp.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * <span class="token keyword">@description</span> 加密方法\n * <span class="token keyword">@author</span> yuanke\n */</span>\n\n<span class="token keyword">const</span> crypto <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;crypto&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token constant">CRYPTO_SECRET_KEY</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../conf/secretKeys&#39;</span><span class="token punctuation">)</span>\n\n<span class="token doc-comment comment">/**\n * md5 加密\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">content</span> 明文\n */</span>\n<span class="token keyword">const</span> <span class="token function-variable function">_md5</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">content</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> md5 <span class="token operator">=</span> crypto<span class="token punctuation">.</span><span class="token function">createHash</span><span class="token punctuation">(</span><span class="token string">&#39;md5&#39;</span><span class="token punctuation">)</span>\n  <span class="token keyword">return</span> md5<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">digest</span><span class="token punctuation">(</span><span class="token string">&#39;hex&#39;</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token doc-comment comment">/**\n * md5 加密\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">content</span> 明文\n */</span>\n<span class="token keyword">const</span> <span class="token function-variable function">doCrypto</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">content</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> str <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">password=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>content<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&amp;key=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token constant">CRYPTO_SECRET_KEY</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span>\n  <span class="token keyword">return</span> <span class="token function">_md5</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> doCrypto\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><p><em>src/controller/user.js</em>：（只写了部分代码）</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">register</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> userName<span class="token punctuation">,</span> password<span class="token punctuation">,</span> gender <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> userInfo <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getUserInfo</span><span class="token punctuation">(</span>userName<span class="token punctuation">)</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>userInfo<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 用户名已存在</span>\n    <span class="token keyword">return</span> <span class="token function">ErrorModel</span><span class="token punctuation">(</span>registerUserNameExistInfo<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n  <span class="token comment">// 注册 service</span>\n  <span class="token keyword">try</span> <span class="token punctuation">{</span>\n    <span class="token keyword">await</span> <span class="token function">createUser</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      userName<span class="token punctuation">,</span>\n      password<span class="token operator">:</span> <span class="token function">doCrypto</span><span class="token punctuation">(</span>password<span class="token punctuation">)</span><span class="token punctuation">,</span>\n      gender\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">SuccessModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>ex<span class="token punctuation">.</span>message<span class="token punctuation">,</span> ex<span class="token punctuation">.</span>stack<span class="token punctuation">)</span>\n    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ErrorModel</span><span class="token punctuation">(</span>registerFailInfo<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><br><h3 id="_5-7-注册-api-格式校验" tabindex="-1"><a class="header-anchor" href="#_5-7-注册-api-格式校验" aria-hidden="true">#</a> 5.7 注册 API - 格式校验</h3><blockquote><p>安装：<code>npm i -S ajv</code></p></blockquote><p><em>src/routes/api/user.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * <span class="token keyword">@description</span> user 路由\n * <span class="token keyword">@author</span> yuanke\n */</span>\n\n<span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;koa-router&#39;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> isExist<span class="token punctuation">,</span> register <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../../controller/user&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> userValidate <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../../validator/user&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> genValidator <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../../middlewares/validator&#39;</span><span class="token punctuation">)</span>\n\nrouter<span class="token punctuation">.</span><span class="token function">prefix</span><span class="token punctuation">(</span><span class="token string">&#39;/api/user&#39;</span><span class="token punctuation">)</span>\n\n<span class="token comment">// 注册路由</span>\nrouter<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/register&#39;</span><span class="token punctuation">,</span> <span class="token function">genValidator</span><span class="token punctuation">(</span>userValidate<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> userName<span class="token punctuation">,</span> password<span class="token punctuation">,</span> gender <span class="token punctuation">}</span> <span class="token operator">=</span> ctx<span class="token punctuation">.</span>request<span class="token punctuation">.</span>body\n  <span class="token comment">// 调用 controller,返回</span>\n  ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">register</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    userName<span class="token punctuation">,</span>\n    password<span class="token punctuation">,</span>\n    gender\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token comment">// 用户名是否存在</span>\nrouter<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/isExist&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> userName <span class="token punctuation">}</span> <span class="token operator">=</span> ctx<span class="token punctuation">.</span>request<span class="token punctuation">.</span>body\n  ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">isExist</span><span class="token punctuation">(</span>userName<span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> router\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><p><em>src/validator/user.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * <span class="token keyword">@description</span> user 数据格式校验\n * <span class="token keyword">@author</span> yuanke\n */</span>\n\n<span class="token keyword">const</span> validate <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./_validate&#39;</span><span class="token punctuation">)</span>\n\n<span class="token comment">// 校验规则</span>\n<span class="token keyword">const</span> <span class="token constant">SCHEMA</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  type<span class="token operator">:</span> <span class="token string">&#39;object&#39;</span><span class="token punctuation">,</span>\n  properties<span class="token operator">:</span> <span class="token punctuation">{</span>\n    userName<span class="token operator">:</span> <span class="token punctuation">{</span>\n      type<span class="token operator">:</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">,</span>\n      pattern<span class="token operator">:</span> <span class="token string">&#39;^[a-zA-Z][a-zA-Z0-9_]+$&#39;</span><span class="token punctuation">,</span>\n      maxLength<span class="token operator">:</span> <span class="token number">255</span><span class="token punctuation">,</span>\n      minLength<span class="token operator">:</span> <span class="token number">2</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    password<span class="token operator">:</span> <span class="token punctuation">{</span>\n      type<span class="token operator">:</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">,</span>\n      maxLength<span class="token operator">:</span> <span class="token number">255</span><span class="token punctuation">,</span>\n      minLength<span class="token operator">:</span> <span class="token number">3</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    newPassword<span class="token operator">:</span> <span class="token punctuation">{</span>\n      type<span class="token operator">:</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">,</span>\n      maxLength<span class="token operator">:</span> <span class="token number">255</span><span class="token punctuation">,</span>\n      minLength<span class="token operator">:</span> <span class="token number">3</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    nickName<span class="token operator">:</span> <span class="token punctuation">{</span>\n      type<span class="token operator">:</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">,</span>\n      maxLength<span class="token operator">:</span> <span class="token number">255</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    picture<span class="token operator">:</span> <span class="token punctuation">{</span>\n      type<span class="token operator">:</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">,</span>\n      maxLength<span class="token operator">:</span> <span class="token number">255</span><span class="token punctuation">,</span>\n      minLength<span class="token operator">:</span> <span class="token number">2</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    gender<span class="token operator">:</span> <span class="token punctuation">{</span>\n      type<span class="token operator">:</span> <span class="token string">&#39;number&#39;</span><span class="token punctuation">,</span>\n      minimum<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n      maximum<span class="token operator">:</span> <span class="token number">3</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    city<span class="token operator">:</span> <span class="token punctuation">{</span>\n      type<span class="token operator">:</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">,</span>\n      maxLength<span class="token operator">:</span> <span class="token number">255</span><span class="token punctuation">,</span>\n      minLength<span class="token operator">:</span> <span class="token number">2</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token doc-comment comment">/**\n * 校验用户数据格式\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Object<span class="token punctuation">}</span></span> <span class="token parameter">data</span> 用户数据\n * <span class="token keyword">@returns</span> \n */</span>\n<span class="token keyword">const</span> <span class="token function-variable function">userValidate</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">data <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token function">validate</span><span class="token punctuation">(</span><span class="token constant">SCHEMA</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> userValidate\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br></div></div><p><em>src/validator/_validate.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * <span class="token keyword">@description</span> json schema 校验\n * <span class="token keyword">@author</span> yuanke\n */</span>\n\n<span class="token keyword">const</span> Ajv <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;ajv&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> ajv <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Ajv</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token comment">// allErrors: true // 输出所有的错误(比较慢)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token doc-comment comment">/**\n * json schema 校验\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Object<span class="token punctuation">}</span></span> <span class="token parameter">schema</span> json schema 规则\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Object<span class="token punctuation">}</span></span> <span class="token parameter">data</span> 待校验的数据\n */</span>\n<span class="token keyword">const</span> <span class="token function-variable function">validate</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">schema<span class="token punctuation">,</span> data <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> valid <span class="token operator">=</span> ajv<span class="token punctuation">.</span><span class="token function">validate</span><span class="token punctuation">(</span>schema<span class="token punctuation">,</span> data<span class="token punctuation">)</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>valid<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> ajv<span class="token punctuation">.</span>errors<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> validate\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><p><em>src/middleware/validator.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * <span class="token keyword">@description</span> json schema 验证中间件\n * <span class="token keyword">@author</span> yuanke\n */</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> ErrorModel <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;../model/ResModel&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> jsonSchemaFileInfo <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../model/ErrorInfo&#39;</span><span class="token punctuation">)</span>\n\n<span class="token doc-comment comment">/**\n * 生成 json schema 验证的中间件\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Function<span class="token punctuation">}</span></span> <span class="token parameter">validateFn</span> 验证函数\n * <span class="token keyword">@returns</span> \n */</span>\n<span class="token keyword">const</span> <span class="token function-variable function">genValidator</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">validateFn</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 定义中间件函数</span>\n  <span class="token keyword">const</span> <span class="token function-variable function">validator</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> data <span class="token operator">=</span> ctx<span class="token punctuation">.</span>request<span class="token punctuation">.</span>body\n    <span class="token keyword">const</span> error <span class="token operator">=</span> <span class="token function">validateFn</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token comment">// 验证失败</span>\n      ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ErrorModel</span><span class="token punctuation">(</span>jsonSchemaFileInfo<span class="token punctuation">)</span>\n      <span class="token keyword">return</span>\n    <span class="token punctuation">}</span>\n    <span class="token comment">// 验证成功，继续</span>\n    <span class="token keyword">await</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n  <span class="token comment">// 返回中间件</span>\n  <span class="token keyword">return</span> validator\n<span class="token punctuation">}</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  genValidator\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><br><h3 id="_5-8-登录-api" tabindex="-1"><a class="header-anchor" href="#_5-8-登录-api" aria-hidden="true">#</a> 5.8 登录 API</h3><p><em>src/routes/api/user.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 登录</span>\nrouter<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/login&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> userName<span class="token punctuation">,</span> password <span class="token punctuation">}</span> <span class="token operator">=</span> ctx<span class="token punctuation">.</span>request<span class="token punctuation">.</span>body\n  ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">login</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> userName<span class="token punctuation">,</span> password<span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><em>src/controller/user.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * 登录\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Object<span class="token punctuation">}</span></span> <span class="token parameter">ctx</span> koa2 ctx\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">userName</span> 用户名\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">password</span> 密码\n */</span>\n<span class="token keyword">const</span> <span class="token function-variable function">login</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> userName<span class="token punctuation">,</span> password</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 获取用户信息</span>\n  <span class="token keyword">const</span> userInfo <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getUserInfo</span><span class="token punctuation">(</span>userName<span class="token punctuation">,</span> <span class="token function">doCrypto</span><span class="token punctuation">(</span>password<span class="token punctuation">)</span><span class="token punctuation">)</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>userInfo<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 登录失败</span>\n    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ErrorModel</span><span class="token punctuation">(</span>loginFailInfo<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n  <span class="token comment">// 登录成功</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>ctx<span class="token punctuation">.</span>session<span class="token punctuation">.</span>userInfo <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    ctx<span class="token punctuation">.</span>session<span class="token punctuation">.</span>userInfo <span class="token operator">=</span> userInfo\n  <span class="token punctuation">}</span>\n  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">SuccessModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p><em>src/routes/view/user.js</em>：</p><blockquote><p>前端判断是否登录：发送一个 get 请求应该即可</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * <span class="token keyword">@description</span> user view 路由\n * <span class="token keyword">@author</span> yuanke\n */</span>\n\n<span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;koa-router&#39;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n<span class="token doc-comment comment">/**\n * 获取登录信息\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Object<span class="token punctuation">}</span></span> <span class="token parameter">ctx</span> ctx\n */</span>\n<span class="token keyword">const</span> <span class="token function-variable function">getLoginInfo</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">ctx</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">let</span> data <span class="token operator">=</span> <span class="token punctuation">{</span>\n    isLogin<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 默认未登录</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">const</span> userInfo <span class="token operator">=</span> ctx<span class="token punctuation">.</span>session<span class="token punctuation">.</span>userInfo\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>userInfo<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    data <span class="token operator">=</span> <span class="token punctuation">{</span>\n      isLogin<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      userName<span class="token operator">:</span> userInfo<span class="token punctuation">.</span>userName\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">return</span> data\n<span class="token punctuation">}</span>\n\nrouter<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/login&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">await</span> ctx<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token string">&#39;login&#39;</span><span class="token punctuation">,</span> <span class="token function">getLoginInfo</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\nrouter<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/register&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">await</span> ctx<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token string">&#39;register&#39;</span><span class="token punctuation">,</span> <span class="token function">getLoginInfo</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> router\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><br><h3 id="_5-9-登录验证" tabindex="-1"><a class="header-anchor" href="#_5-9-登录验证" aria-hidden="true">#</a> 5.9 登录验证</h3><blockquote><p>浏览器控制台输入：<code>encodeURIComponent(&#39;/setting&#39;)</code>，就会得到：<code>%2Fsetting</code>。如果访问 <em>http://localhost:3000/login?url=%2Fsetting</em>，然后登录后会自动跳转到 <em>http://localhost:3000/setting</em></p></blockquote><p><em>src/middleware/loginChecks.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * <span class="token keyword">@description</span> 登录验证的中间件\n * <span class="token keyword">@author</span> yuanke\n */</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> loginCheckFailInfo <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;../model/ErrorInfo&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> ErrorModel <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;../model/ResModel&quot;</span><span class="token punctuation">)</span>\n\n<span class="token doc-comment comment">/**\n * API 登录验证\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Object<span class="token punctuation">}</span></span> <span class="token parameter">ctx</span> ctx\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Function<span class="token punctuation">}</span></span> <span class="token parameter">next</span> next\n */</span>\n<span class="token keyword">const</span> <span class="token function-variable function">loginCheck</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>ctx<span class="token punctuation">.</span>session<span class="token operator">?.</span>userInfo<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 已登录</span>\n    <span class="token keyword">await</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token keyword">return</span>\n  <span class="token punctuation">}</span>\n  <span class="token comment">// 未登录</span>\n  ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ErrorModel</span><span class="token punctuation">(</span>loginCheckFailInfo<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token doc-comment comment">/**\n * 页面登录验证\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Object<span class="token punctuation">}</span></span> <span class="token parameter">ctx</span> ctx\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Function<span class="token punctuation">}</span></span> <span class="token parameter">next</span> next\n */</span>\n<span class="token keyword">const</span> <span class="token function-variable function">loginRedirect</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>ctx<span class="token punctuation">.</span>session<span class="token operator">?.</span>userInfo<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 已登录</span>\n    <span class="token keyword">await</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token keyword">return</span>\n  <span class="token punctuation">}</span>\n  <span class="token comment">// 未登录</span>\n  <span class="token keyword">const</span> curUrl <span class="token operator">=</span> ctx<span class="token punctuation">.</span>url\n  ctx<span class="token punctuation">.</span><span class="token function">redirect</span><span class="token punctuation">(</span><span class="token string">&#39;/login?url=&#39;</span> <span class="token operator">+</span> <span class="token function">encodeURIComponent</span><span class="token punctuation">(</span>curUrl<span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  loginCheck<span class="token punctuation">,</span>\n  loginRedirect\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br></div></div><br><h3 id="_5-10-单元测试" tabindex="-1"><a class="header-anchor" href="#_5-10-单元测试" aria-hidden="true">#</a> 5.10 单元测试</h3><p><strong>测试模型</strong>：</p><p><em>test/user/model.test.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * <span class="token keyword">@description</span> user model test\n * <span class="token keyword">@author</span> yuanke\n */</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> User <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../../src/db/model/index&#39;</span><span class="token punctuation">)</span>\n\n<span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;User 模型的各个属性,符合预期&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token comment">// build 会构建一个内存的 User 实例，但不会提交到数据库中</span>\n  <span class="token keyword">const</span> user <span class="token operator">=</span> User<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    userName<span class="token operator">:</span> <span class="token string">&#39;zhangsan&#39;</span><span class="token punctuation">,</span>\n    password<span class="token operator">:</span> <span class="token string">&#39;p123123&#39;</span><span class="token punctuation">,</span>\n    nickName<span class="token operator">:</span> <span class="token string">&#39;张三&#39;</span><span class="token punctuation">,</span>\n    <span class="token comment">// gender: 1,</span>\n    picture<span class="token operator">:</span> <span class="token string">&#39;/xxx.png&#39;</span><span class="token punctuation">,</span>\n    city<span class="token operator">:</span> <span class="token string">&#39;北京&#39;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token comment">// 验证各个属性</span>\n  <span class="token function">expect</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span>userName<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token string">&#39;zhangsan&#39;</span><span class="token punctuation">)</span>\n  <span class="token function">expect</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span>password<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token string">&#39;p123123&#39;</span><span class="token punctuation">)</span>\n  <span class="token function">expect</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span>nickName<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token string">&#39;张三&#39;</span><span class="token punctuation">)</span>\n  <span class="token function">expect</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span>gender<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token comment">// 测试 gender 默认值</span>\n  <span class="token function">expect</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span>picture<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token string">&#39;/xxx.png&#39;</span><span class="token punctuation">)</span>\n  <span class="token function">expect</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span>city<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token string">&#39;北京&#39;</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><p><strong>测试删除当前用户</strong>：</p><p><em>src/routes/api/user.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 删除</span>\nrouter<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/delete&#39;</span><span class="token punctuation">,</span> loginCheck <span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>isTest<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 测试环境下，测试账号登录之后，删除自己</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> userName <span class="token punctuation">}</span> <span class="token operator">=</span> ctx<span class="token punctuation">.</span>session<span class="token punctuation">.</span>userInfo\n    ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">deleteCurUser</span><span class="token punctuation">(</span>userName<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p><em>src/controller/user.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * 删除当前用户\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">userName</span> 用户名\n */</span>\n<span class="token keyword">const</span> <span class="token function-variable function">deleteCurUser</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">userName</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">deleteUser</span><span class="token punctuation">(</span>userName<span class="token punctuation">)</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">SuccessModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ErrorModel</span><span class="token punctuation">(</span>deleteUserFailInfo<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p><em>src/service/user.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * 删除用户\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">userName</span> 用户名\n */</span>\n<span class="token keyword">const</span> <span class="token function-variable function">deleteUser</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">userName</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> User<span class="token punctuation">.</span><span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    where<span class="token operator">:</span> <span class="token punctuation">{</span>\n      userName\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token keyword">return</span> result <span class="token operator">&gt;</span> <span class="token number">0</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><br><h3 id="_5-11-单元测试-测试接口" tabindex="-1"><a class="header-anchor" href="#_5-11-单元测试-测试接口" aria-hidden="true">#</a> 5.11 单元测试 - 测试接口</h3><p><em>test/user/login.test.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * <span class="token keyword">@description</span> user api test\n * <span class="token keyword">@author</span> yuanke\n */</span>\n\n<span class="token keyword">const</span> server <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../server&#39;</span><span class="token punctuation">)</span>\n\n<span class="token comment">// 用户信息</span>\n<span class="token keyword">const</span> userName <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">u_</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span>\n<span class="token keyword">const</span> password <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">p_</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span>\n<span class="token keyword">const</span> testUser <span class="token operator">=</span> <span class="token punctuation">{</span>\n  userName<span class="token punctuation">,</span>\n  password<span class="token punctuation">,</span>\n  nickName<span class="token operator">:</span> userName<span class="token punctuation">,</span>\n  gender<span class="token operator">:</span> <span class="token number">1</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// 存储 cookie</span>\n<span class="token keyword">let</span> <span class="token constant">COOKIE</span> <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>\n\n<span class="token comment">// 注册</span>\n<span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;注册一个用户,应该成功&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> server\n    <span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/api/user/register&#39;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>testUser<span class="token punctuation">)</span>\n  <span class="token function">expect</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>body<span class="token punctuation">.</span>errno<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token comment">// 重复注册</span>\n<span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;重复注册用户,应该失败&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> server\n    <span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/api/user/register&#39;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>testUser<span class="token punctuation">)</span>\n  <span class="token function">expect</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>body<span class="token punctuation">.</span>errno<span class="token punctuation">)</span><span class="token punctuation">.</span>not<span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token comment">// 查询用户是否存在</span>\n<span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;查询注册的用户名,应该存在&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> server\n    <span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/api/user/isExist&#39;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">{</span> userName <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token function">expect</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>body<span class="token punctuation">.</span>errno<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token comment">// json schema 检测</span>\n<span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;json schema 检测,非法的格式,注册应该失败&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> server\n    <span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/api/user/register&#39;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      userName<span class="token operator">:</span> <span class="token string">&#39;123&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 用户名不是字母或下划线开头</span>\n      password<span class="token operator">:</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 最小长度不是 3</span>\n      <span class="token comment">// nickName: &#39;&#39;,</span>\n      gender<span class="token operator">:</span> <span class="token string">&#39;mail&#39;</span> <span class="token comment">// 不是数字</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token function">expect</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>body<span class="token punctuation">.</span>errno<span class="token punctuation">)</span><span class="token punctuation">.</span>not<span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token comment">// 登录</span>\n<span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;登录,应该成功&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> server\n    <span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/api/user/login&#39;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      userName<span class="token punctuation">,</span>\n      password\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token function">expect</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>body<span class="token punctuation">.</span>errno<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>\n\n    <span class="token comment">// 获取 cookie</span>\n    <span class="token constant">COOKIE</span> <span class="token operator">=</span> res<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">&#39;set-cookie&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;;&#39;</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token comment">// 删除，需要验证 loginCheck，可以通过设置 cookie 规避</span>\n<span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;删除用户,应该成功&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> server\n    <span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/api/user/delete&#39;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;Cookie&#39;</span><span class="token punctuation">,</span> <span class="token constant">COOKIE</span><span class="token punctuation">)</span>\n  <span class="token function">expect</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>body<span class="token punctuation">.</span>errno<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token comment">// 再次查询用户，应该不存在</span>\n<span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;删除之后,再次查询注册的用户名,应该不存在&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> server\n    <span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/api/user/isExist&#39;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">{</span> userName <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token function">expect</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>body<span class="token punctuation">.</span>errno<span class="token punctuation">)</span><span class="token punctuation">.</span>not<span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br></div></div><blockquote><ol><li><code>git switch master</code>：切换到 master 分支</li><li><code>git pull origin master</code>：将本地的 master 分支推送到 origin 主机的 master 分支</li><li><code>git merge feature-login</code>：将 feature-login 分支合并到版本库中的 master 分支中</li></ol></blockquote><br><h2 id="_6-fs-的异步操作" tabindex="-1"><a class="header-anchor" href="#_6-fs-的异步操作" aria-hidden="true">#</a> 6.fs 的异步操作</h2><h3 id="_6-1-stat-判断是否为文件-文件夹、access-判断文件-文件夹是否存在" tabindex="-1"><a class="header-anchor" href="#_6-1-stat-判断是否为文件-文件夹、access-判断文件-文件夹是否存在" aria-hidden="true">#</a> 6.1 stat - 判断是否为文件 &amp; 文件夹、access - 判断文件 &amp; 文件夹是否存在</h3><p><strong>判断是否为文件、文件夹</strong>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs/promises&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> fileName <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;data.txt&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> directoryName <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;test&#39;</span><span class="token punctuation">)</span>\n\n<span class="token comment">// 判断是否为文件或文件夹</span>\n<span class="token operator">!</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">try</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token keyword">await</span> fs<span class="token punctuation">.</span><span class="token function">stat</span><span class="token punctuation">(</span>fileName<span class="token punctuation">)</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token function">isFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// true</span>\n    <span class="token keyword">let</span> b <span class="token operator">=</span> <span class="token keyword">await</span> fs<span class="token punctuation">.</span><span class="token function">stat</span><span class="token punctuation">(</span>directoryName<span class="token punctuation">)</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">.</span><span class="token function">isDirectory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// true</span>\n  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ex<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\nfs<span class="token punctuation">.</span><span class="token function">stat</span><span class="token punctuation">(</span>fileName<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span><span class="token function">isFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// true</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">ex</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ex<span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><p><strong>判断文件、文件夹是否存在</strong>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs/promises&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> constants <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> filePath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;data.txt&#39;</span><span class="token punctuation">)</span>\n\n<span class="token operator">!</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">try</span> <span class="token punctuation">{</span>\n    <span class="token keyword">await</span> fs<span class="token punctuation">.</span><span class="token function">access</span><span class="token punctuation">(</span>filePath<span class="token punctuation">,</span> constants<span class="token punctuation">.</span><span class="token constant">F_OK</span><span class="token punctuation">)</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;exist&#39;</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ex<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><br><h3 id="_6-2-mkdir-创建文件夹、writefile-写入数据" tabindex="-1"><a class="header-anchor" href="#_6-2-mkdir-创建文件夹、writefile-写入数据" aria-hidden="true">#</a> 6.2 mkdir - 创建文件夹、writeFile -写入数据</h3><p><strong>创建文件夹</strong>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs/promises&#39;</span><span class="token punctuation">)</span>\n\n<span class="token operator">!</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">try</span> <span class="token punctuation">{</span>\n    <span class="token keyword">await</span> fs<span class="token punctuation">.</span><span class="token function">mkdir</span><span class="token punctuation">(</span><span class="token string">&#39;./css/scs/ssc&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n      recursive<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token comment">// 递归创建文件夹</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ex<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p><strong>写入数据</strong>：</p><blockquote><p>第三个参数是一个对象，key 值是 flag，可选键值：<code>a -&gt; 追加、w -&gt; 覆盖(默认)</code></p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs/promises&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> filePath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;data.txt&#39;</span><span class="token punctuation">)</span>\n\n<span class="token operator">!</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">try</span> <span class="token punctuation">{</span>\n    <span class="token keyword">await</span> fs<span class="token punctuation">.</span><span class="token function">writeFile</span><span class="token punctuation">(</span>filePath<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> - </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">12</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n    <span class="token comment">// 1658645342247 - 1658645342259</span>\n  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ex<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><br><h3 id="_6-3-appendfile-追加内容、readfile-读取内容" tabindex="-1"><a class="header-anchor" href="#_6-3-appendfile-追加内容、readfile-读取内容" aria-hidden="true">#</a> 6.3 appendFile - 追加内容、readFile - 读取内容</h3><p><strong>追加内容</strong>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs/promises&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> filePath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;data.txt&#39;</span><span class="token punctuation">)</span>\n\n<span class="token operator">!</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">try</span> <span class="token punctuation">{</span>\n    <span class="token keyword">await</span> fs<span class="token punctuation">.</span><span class="token function">appendFile</span><span class="token punctuation">(</span>filePath<span class="token punctuation">,</span> <span class="token string">&#39;nihaoya&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 1658645342247 - 1658645342259nihaoya</span>\n  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ex<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p><strong>读取内容</strong>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs/promises&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> filePath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;data.txt&#39;</span><span class="token punctuation">)</span>\n\n<span class="token operator">!</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">try</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> content <span class="token operator">=</span> <span class="token keyword">await</span> fs<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span>\n    <span class="token comment">// 将 buffer 类型数据转为 string</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>content<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 1658645342247 - 1658645342259nihaoya</span>\n  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ex<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><br><h3 id="_6-4-readdir-读取文件夹、rename-修改文件名、rm-删除文件夹-文件" tabindex="-1"><a class="header-anchor" href="#_6-4-readdir-读取文件夹、rename-修改文件名、rm-删除文件夹-文件" aria-hidden="true">#</a> 6.4 readDir - 读取文件夹、rename - 修改文件名、rm - 删除文件夹 &amp; 文件</h3><p><strong>读取文件夹</strong>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs/promises&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> directoryPath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;test&#39;</span><span class="token punctuation">)</span>\n\n<span class="token operator">!</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">try</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> dir <span class="token operator">=</span> <span class="token keyword">await</span> fs<span class="token punctuation">.</span><span class="token function">readdir</span><span class="token punctuation">(</span>directoryPath<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n      withFileTypes<span class="token operator">:</span> <span class="token boolean">false</span> <span class="token comment">// 指定是否将文件作为 fs.Dirent 对象返回</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>dir<span class="token punctuation">)</span> <span class="token comment">// [ &#39;aaa.js&#39; ]</span>\n  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ex<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p><strong>修改文件名</strong>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs/promises&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> directoryPath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;test&#39;</span><span class="token punctuation">)</span>\n\n<span class="token comment">// 修改文件夹和文件名都没问题</span>\n<span class="token operator">!</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">try</span> <span class="token punctuation">{</span>\n    <span class="token keyword">await</span> fs<span class="token punctuation">.</span><span class="token function">rename</span><span class="token punctuation">(</span>directoryPath<span class="token punctuation">,</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>directoryPath<span class="token punctuation">,</span> <span class="token string">&#39;../&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;woshidir&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ex<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p><strong>删除文件夹 &amp; 文件</strong>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs/promises&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> directoryPath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;woshidir&#39;</span><span class="token punctuation">)</span>\n\n<span class="token operator">!</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">try</span> <span class="token punctuation">{</span>\n    <span class="token keyword">await</span> fs<span class="token punctuation">.</span><span class="token function">rm</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>directoryPath<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/a.js</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n    <span class="token keyword">await</span> fs<span class="token punctuation">.</span><span class="token function">rm</span><span class="token punctuation">(</span>directoryPath<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n      recursive<span class="token operator">:</span> <span class="token boolean">true</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ex<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><br><h3 id="_6-5-open-的应用-文件复制" tabindex="-1"><a class="header-anchor" href="#_6-5-open-的应用-文件复制" aria-hidden="true">#</a> 6.5 open 的应用 - 文件复制</h3><p>The following flags are available wherever the <code>flag</code> option takes a string.</p><ul><li><p><code>&#39;a&#39;</code>: Open file for appending. The file is created if it does not exist.</p></li><li><p><code>&#39;ax&#39;</code>: Like <code>&#39;a&#39;</code> but fails if the path exists.</p></li><li><p><code>&#39;a+&#39;</code>: Open file for reading and appending. The file is created if it does not exist.</p></li><li><p><code>&#39;ax+&#39;</code>: Like <code>&#39;a+&#39;</code> but fails if the path exists.</p></li><li><p><code>&#39;as&#39;</code>: Open file for appending in synchronous mode. The file is created if it does not exist.</p></li><li><p><code>&#39;as+&#39;</code>: Open file for reading and appending in synchronous mode. The file is created if it does not exist.</p></li><li><p><code>&#39;r&#39;</code>: Open file for reading. An exception occurs if the file does not exist.</p></li><li><p><code>&#39;r+&#39;</code>: Open file for reading and writing. An exception occurs if the file does not exist.</p></li><li><p><code>&#39;rs+&#39;</code>: Open file for reading and writing in synchronous mode. Instructs the operating system to bypass the local file system cache.</p><p>This is primarily useful for opening files on NFS mounts as it allows skipping the potentially stale local cache. It has a very real impact on I/O performance so using this flag is not recommended unless it is needed.</p><p>This doesn&#39;t turn <code>fs.open()</code> or <code>fsPromises.open()</code> into a synchronous blocking call. If synchronous operation is desired, something like <code>fs.openSync()</code> should be used.</p></li><li><p><code>&#39;w&#39;</code>: Open file for writing. The file is created (if it does not exist) or truncated (if it exists).</p></li><li><p><code>&#39;wx&#39;</code>: Like <code>&#39;w&#39;</code> but fails if the path exists.</p></li><li><p><code>&#39;w+&#39;</code>: Open file for reading and writing. The file is created (if it does not exist) or truncated (if it exists).</p></li><li><p><code>&#39;wx+&#39;</code>: Like <code>&#39;w+&#39;</code> but fails if the path exists.</p></li></ul><blockquote><p>实现功能：将 <em>data.txt</em> 的内容复制到 <em>data1.txt</em></p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs/promises&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> fileName <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;data.txt&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> fileName1 <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;data1.txt&#39;</span><span class="token punctuation">)</span>\n\n<span class="token operator">!</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> fd <span class="token operator">=</span> <span class="token keyword">await</span> fs<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>fileName<span class="token punctuation">,</span> <span class="token string">&#39;r+&#39;</span><span class="token punctuation">)</span>\n  <span class="token keyword">const</span> fd1 <span class="token operator">=</span> <span class="token keyword">await</span> fs<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>fileName1<span class="token punctuation">,</span> <span class="token string">&#39;r+&#39;</span><span class="token punctuation">)</span>\n  <span class="token keyword">const</span> content <span class="token operator">=</span> <span class="token keyword">await</span> fd<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  fd1<span class="token punctuation">.</span><span class="token function">writeFile</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><br><h3 id="_6-6-流的入门" tabindex="-1"><a class="header-anchor" href="#_6-6-流的入门" aria-hidden="true">#</a> 6.6 流的入门</h3><p><strong>使用 <code>node test.js</code> 后，控制台输入啥就输出啥</strong>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> stdin<span class="token punctuation">,</span> stdout <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;node:process&#39;</span><span class="token punctuation">)</span>\n\nstdin<span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>stdout<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><strong>使用 <code>node test.js</code> 后，postman 里 post 啥返回啥</strong>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> http <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;http&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> server <span class="token operator">=</span> http<span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>req<span class="token punctuation">.</span>method <span class="token operator">===</span> <span class="token string">&#39;POST&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    req<span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\nserver<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">8008</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><br><h3 id="_6-7-流的应用" tabindex="-1"><a class="header-anchor" href="#_6-7-流的应用" aria-hidden="true">#</a> 6.7 流的应用</h3><p><strong>基本使用</strong>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> pipeline<span class="token punctuation">,</span> finished <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;stream/promises&#39;</span><span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> fileName1 <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;data1.txt&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> fileName2 <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;data2.txt&#39;</span><span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> readStream <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">createReadStream</span><span class="token punctuation">(</span>fileName1<span class="token punctuation">)</span>\n<span class="token keyword">const</span> writeStream <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">createWriteStream</span><span class="token punctuation">(</span>fileName2<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  flags<span class="token operator">:</span> <span class="token string">&#39;a&#39;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token operator">!</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 将 readStream 内容加入 writeStream 末尾</span>\n  <span class="token keyword">await</span> <span class="token function">pipeline</span><span class="token punctuation">(</span>readStream<span class="token punctuation">,</span> writeStream<span class="token punctuation">)</span>\n  <span class="token keyword">await</span> <span class="token function">finished</span><span class="token punctuation">(</span>readStream<span class="token punctuation">)</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;读写流操作完毕！&#39;</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p><strong>写日志</strong>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> fileName2 <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;data2.txt&#39;</span><span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> writeStream <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">createWriteStream</span><span class="token punctuation">(</span>fileName2<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  flags<span class="token operator">:</span> <span class="token string">&#39;a&#39;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">addLog</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">log</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">try</span> <span class="token punctuation">{</span>\n    writeStream<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>log<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ex<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token function">addLog</span><span class="token punctuation">(</span><span class="token string">&#39;haha&#39;</span><span class="token punctuation">)</span>\n<span class="token function">addLog</span><span class="token punctuation">(</span><span class="token string">&#39;hehe&#39;</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><br><h2 id="_7-页面、文件上传、修改密码、退出登录" tabindex="-1"><a class="header-anchor" href="#_7-页面、文件上传、修改密码、退出登录" aria-hidden="true">#</a> 7.页面、文件上传、修改密码、退出登录</h2><h3 id="_7-1-创建页面" tabindex="-1"><a class="header-anchor" href="#_7-1-创建页面" aria-hidden="true">#</a> 7.1 创建页面</h3><blockquote><p><em>src/routes/view/user.js</em> 里文件做了修改了，但是还在 master 分区，忘记切换到一个新的分区了。解决方法：1.先 <code>git stash</code> 保存 master 的工作状态；2.再新建并切换到新的分支：<code>git switch -c feature-user-setting</code>；3.最后 <code>git stash pop</code> 将工作状态还原到新的分支上</p></blockquote><p><em>src/routes/view/user.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>router<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/setting&#39;</span><span class="token punctuation">,</span> loginRedirect<span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">await</span> ctx<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token string">&#39;setting&#39;</span><span class="token punctuation">,</span> ctx<span class="token punctuation">.</span>session<span class="token punctuation">.</span>userInfo<span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><br><h3 id="_7-2-文件上传" tabindex="-1"><a class="header-anchor" href="#_7-2-文件上传" aria-hidden="true">#</a> 7.2 文件上传</h3><blockquote><p>安装：<code>npm i -S koa-body</code></p></blockquote><p><em>src/app.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> KoaStatic <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;koa-static&#39;</span><span class="token punctuation">)</span>\n\n<span class="token comment">// 只要访问 localhost:3000/stylesheets/style.css 就能访问该文件内容了</span>\napp<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token function">KoaStatic</span><span class="token punctuation">(</span>__dirname <span class="token operator">+</span> <span class="token string">&#39;/public&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\napp<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token function">KoaStatic</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;..&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;uploadFiles&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><em>src/routes/api/utils.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * <span class="token keyword">@description</span> utils api 路由\n * <span class="token keyword">@author</span> yuanke\n */</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> saveFile <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../../controller/utils&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> loginCheck <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../../middlewares/loginChecks&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> KoaBody <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;koa-body&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;koa-router&#39;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> koaBodySetting <span class="token operator">=</span> <span class="token punctuation">{</span>\n  multipart<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 支持多文件上传</span>\n  formidable<span class="token operator">:</span> <span class="token punctuation">{</span>\n    uploadDir<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;..&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;..&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// 设置文件上传目录</span>\n    keepExtensions<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token comment">// 保持文件的后缀名</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nrouter<span class="token punctuation">.</span><span class="token function">prefix</span><span class="token punctuation">(</span><span class="token string">&#39;/api/utils&#39;</span><span class="token punctuation">)</span>\n\n<span class="token comment">// 上传图片</span>\nrouter<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/upload&#39;</span><span class="token punctuation">,</span> loginCheck<span class="token punctuation">,</span> <span class="token function">KoaBody</span><span class="token punctuation">(</span>koaBodySetting<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> file <span class="token operator">=</span> ctx<span class="token punctuation">.</span>request<span class="token punctuation">.</span>files<span class="token punctuation">[</span><span class="token string">&#39;file&#39;</span><span class="token punctuation">]</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;----------------------&gt;&#39;</span><span class="token punctuation">,</span> file<span class="token punctuation">.</span>filepath<span class="token punctuation">,</span> file<span class="token punctuation">.</span>originalFilename<span class="token punctuation">,</span> file<span class="token punctuation">.</span>size<span class="token punctuation">,</span> file<span class="token punctuation">.</span>mimetype<span class="token punctuation">)</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> size<span class="token punctuation">,</span> filepath<span class="token punctuation">,</span> originalFilename<span class="token punctuation">,</span> mimetype <span class="token punctuation">}</span> <span class="token operator">=</span> file\n  ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">saveFile</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    name<span class="token operator">:</span> originalFilename<span class="token punctuation">,</span>\n    type<span class="token operator">:</span> mimetype<span class="token punctuation">,</span>\n    size<span class="token punctuation">,</span>\n    filePath<span class="token operator">:</span> filepath\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> router\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br></div></div><p><em>src/controller/utils.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * <span class="token keyword">@description</span> utils controller\n * <span class="token keyword">@author</span> yuanke\n */</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> uploadFileSizeFailInfo <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;../model/ErrorInfo&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> ErrorModel<span class="token punctuation">,</span> SuccessModel <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;../model/ResModel&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs/promises&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;path&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> pipeline <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;stream/promises&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> fsSync <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span>\n\n<span class="token comment">// 存储目录</span>\n<span class="token keyword">const</span> <span class="token constant">DIST_FOLDER_PATH</span> <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;..&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;..&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;uploadFiles&#39;</span><span class="token punctuation">)</span>\n<span class="token comment">// 文件最大体积 1M</span>\n<span class="token keyword">const</span> <span class="token constant">MAX_SIZE</span> <span class="token operator">=</span> <span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">1024</span>\n<span class="token comment">// 是否需要创建目录，项目启动时执行一次</span>\nfs<span class="token punctuation">.</span><span class="token function">access</span><span class="token punctuation">(</span><span class="token constant">DIST_FOLDER_PATH</span><span class="token punctuation">,</span> fsSync<span class="token punctuation">.</span>constants<span class="token punctuation">.</span><span class="token constant">F_OK</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  fs<span class="token punctuation">.</span><span class="token function">mkdir</span><span class="token punctuation">(</span><span class="token constant">DIST_FOLDER_PATH</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;新建保存图片的目录成功&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">e</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;e&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token doc-comment comment">/**\n * 保存文件\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">name</span> 文件名 \n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">type</span> 文件类型 \n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">size</span> 文件体积大小 \n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">filePath</span> 文件路径 \n */</span>\n<span class="token keyword">const</span> <span class="token function-variable function">saveFile</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> name<span class="token punctuation">,</span> type<span class="token punctuation">,</span> size<span class="token punctuation">,</span> filePath <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>size <span class="token operator">&gt;</span> <span class="token constant">MAX_SIZE</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">await</span> fs<span class="token punctuation">.</span><span class="token function">rm</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span>\n    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ErrorModel</span><span class="token punctuation">(</span>uploadFileSizeFailInfo<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n  <span class="token comment">// 移动文件</span>\n  <span class="token keyword">const</span> fileName <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;.&#39;</span> <span class="token operator">+</span> name <span class="token comment">// 防止重名</span>\n  <span class="token keyword">const</span> distFilePath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token constant">DIST_FOLDER_PATH</span><span class="token punctuation">,</span> fileName<span class="token punctuation">)</span> <span class="token comment">// 目的地</span>\n  <span class="token keyword">await</span> <span class="token function">pipeline</span><span class="token punctuation">(</span>fsSync<span class="token punctuation">.</span><span class="token function">ReadStream</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">,</span> fsSync<span class="token punctuation">.</span><span class="token function">WriteStream</span><span class="token punctuation">(</span>distFilePath<span class="token punctuation">)</span><span class="token punctuation">)</span>\n  <span class="token keyword">await</span> fs<span class="token punctuation">.</span><span class="token function">rm</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span>\n\n  <span class="token comment">// 返回信息 /2.png</span>\n  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">SuccessModel</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    url<span class="token operator">:</span> <span class="token string">&#39;/&#39;</span> <span class="token operator">+</span> fileName\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  saveFile\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br></div></div><hr><blockquote><p>使用原生 js 实现</p></blockquote><p><em>views/index.ejs</em>：</p><div class="language-ejs ext-ejs line-numbers-mode"><pre class="language-ejs"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>演示<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>pic<span class="token punctuation">&quot;</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://cn.vuejs.org/images/logo.svg<span class="token punctuation">&quot;</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>100px<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>inp<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>file<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n      document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.inp&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;change&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">let</span> file <span class="token operator">=</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>files\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>file<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token keyword">return</span>\n        <span class="token keyword">let</span> formData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n        formData<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&#39;file&#39;</span><span class="token punctuation">,</span> file<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n        <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&#39;/api/utils/upload&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n          method<span class="token operator">:</span> <span class="token string">&#39;post&#39;</span><span class="token punctuation">,</span>\n          body<span class="token operator">:</span> formData\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">response</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n          <span class="token keyword">if</span> <span class="token punctuation">(</span>response<span class="token punctuation">.</span>ok<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            response<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n              console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>\n              document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.pic&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>src <span class="token operator">=</span> res<span class="token punctuation">.</span>url\n            <span class="token punctuation">}</span><span class="token punctuation">)</span>\n          <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div><p><em>routes/index.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;koa-router&#39;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> KoaBody <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;koa-body&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs/promises&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> pipeline <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;stream/promises&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> fsSync <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> koaBodySetting <span class="token operator">=</span> <span class="token punctuation">{</span>\n  multipart<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  formidable<span class="token operator">:</span> <span class="token punctuation">{</span>\n    uploadDir<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;..&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    keepExtensions<span class="token operator">:</span> <span class="token boolean">true</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> <span class="token constant">TARGET_FOLDER</span> <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;..&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;uploadFiles&#39;</span><span class="token punctuation">)</span>\nfs<span class="token punctuation">.</span><span class="token function">access</span><span class="token punctuation">(</span><span class="token constant">TARGET_FOLDER</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  fs<span class="token punctuation">.</span><span class="token function">mkdir</span><span class="token punctuation">(</span><span class="token constant">TARGET_FOLDER</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;新建保存图片处成功&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">e</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token comment">// 将传来的图片进行一系列处理:剪切原图片至新建的文件夹,并重命名该图片,返回新图片的地址</span>\n<span class="token keyword">const</span> <span class="token function-variable function">saveFile</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> name<span class="token punctuation">,</span> type<span class="token punctuation">,</span> size<span class="token punctuation">,</span> filePath <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>size <span class="token operator">&gt;</span> <span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">1024</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    fs<span class="token punctuation">.</span><span class="token function">rm</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span>\n      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ErrorModel</span><span class="token punctuation">(</span><span class="token string">&#39;图片过大&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n      <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">e</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">const</span> fileName <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;.&#39;</span> <span class="token operator">+</span> name\n  <span class="token keyword">const</span> targetFilePath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token constant">TARGET_FOLDER</span><span class="token punctuation">,</span> fileName<span class="token punctuation">)</span>\n  <span class="token keyword">await</span> <span class="token function">pipeline</span><span class="token punctuation">(</span>fsSync<span class="token punctuation">.</span><span class="token function">createReadStream</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">,</span> fsSync<span class="token punctuation">.</span><span class="token function">createWriteStream</span><span class="token punctuation">(</span>targetFilePath<span class="token punctuation">)</span><span class="token punctuation">)</span>\n  <span class="token keyword">await</span> fs<span class="token punctuation">.</span><span class="token function">rm</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span>\n  <span class="token keyword">return</span> <span class="token punctuation">{</span>\n    errno<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n    url<span class="token operator">:</span> <span class="token string">&#39;/&#39;</span> <span class="token operator">+</span> fileName\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nrouter<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/api/utils/upload&#39;</span><span class="token punctuation">,</span> <span class="token function">KoaBody</span><span class="token punctuation">(</span>koaBodySetting<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> file <span class="token operator">=</span> ctx<span class="token punctuation">.</span>request<span class="token punctuation">.</span>files<span class="token punctuation">[</span><span class="token string">&#39;file&#39;</span><span class="token punctuation">]</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> size<span class="token punctuation">,</span> filepath<span class="token punctuation">,</span> originalFilename<span class="token punctuation">,</span> mimetype <span class="token punctuation">}</span> <span class="token operator">=</span> file\n  ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">saveFile</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    name<span class="token operator">:</span> originalFilename<span class="token punctuation">,</span>\n    type<span class="token operator">:</span> mimetype<span class="token punctuation">,</span>\n    size<span class="token punctuation">,</span>\n    filePath<span class="token operator">:</span> filepath\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> router\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br></div></div><p><em>app.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> KoaStatic <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;koa-static&#39;</span><span class="token punctuation">)</span>\n\napp<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token function">KoaStatic</span><span class="token punctuation">(</span>__dirname <span class="token operator">+</span> <span class="token string">&#39;/public&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\napp<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token function">KoaStatic</span><span class="token punctuation">(</span>__dirname <span class="token operator">+</span> <span class="token string">&#39;/uploadFiles&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><br><h3 id="_7-3-修改基本信息" tabindex="-1"><a class="header-anchor" href="#_7-3-修改基本信息" aria-hidden="true">#</a> 7.3 修改基本信息</h3><p><em>src/routes/api/user.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 修改个人信息</span>\nrouter<span class="token punctuation">.</span><span class="token function">patch</span><span class="token punctuation">(</span><span class="token string">&#39;/changeInfo&#39;</span><span class="token punctuation">,</span> loginCheck<span class="token punctuation">,</span> <span class="token function">genValidator</span><span class="token punctuation">(</span>userValidate<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> nickName<span class="token punctuation">,</span> city<span class="token punctuation">,</span> picture <span class="token punctuation">}</span> <span class="token operator">=</span> ctx<span class="token punctuation">.</span>request<span class="token punctuation">.</span>body\n  ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">changeInfo</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> <span class="token punctuation">{</span> nickName<span class="token punctuation">,</span> city<span class="token punctuation">,</span> picture <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><em>src/controller/user.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * 修改个人信息\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Object<span class="token punctuation">}</span></span> <span class="token parameter">ctx</span> ctx\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">nickName</span> 昵称\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">city</span> 城市\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">picture</span> 头像\n */</span>\n<span class="token keyword">const</span> <span class="token function-variable function">changeInfo</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> <span class="token punctuation">{</span> nickName<span class="token punctuation">,</span> city<span class="token punctuation">,</span> picture <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> userName <span class="token punctuation">}</span> <span class="token operator">=</span> ctx<span class="token punctuation">.</span>session<span class="token punctuation">.</span>userInfo\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>nickName<span class="token punctuation">)</span> nickName <span class="token operator">=</span> userName\n  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">updateUser</span><span class="token punctuation">(</span>\n    <span class="token punctuation">{</span>\n      newNickName<span class="token operator">:</span> nickName<span class="token punctuation">,</span>\n      newCity<span class="token operator">:</span> city<span class="token punctuation">,</span>\n      newPicture<span class="token operator">:</span> picture\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span> userName <span class="token punctuation">}</span>\n  <span class="token punctuation">)</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 执行成功</span>\n    Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>ctx<span class="token punctuation">.</span>session<span class="token punctuation">.</span>userInfo<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n      nickName<span class="token punctuation">,</span>\n      city<span class="token punctuation">,</span>\n      picture\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">SuccessModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ErrorModel</span><span class="token punctuation">(</span>changeInfoFailInfo<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><p><em>src/service/user.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * 更新用户信息\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>object<span class="token punctuation">}</span></span> <span class="token parameter">param0</span> 要修改的内容 newPassword, newNickName, newPicture, newCity\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>object<span class="token punctuation">}</span></span> <span class="token parameter">param1</span> 查询条件 userName, password\n */</span>\n<span class="token keyword">const</span> <span class="token function-variable function">updateUser</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>\n  <span class="token parameter"><span class="token punctuation">{</span> newPassword<span class="token punctuation">,</span> newNickName<span class="token punctuation">,</span> newPicture<span class="token punctuation">,</span> newCity <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span> userName<span class="token punctuation">,</span> password <span class="token punctuation">}</span></span>\n<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 拼接修改内容</span>\n  <span class="token keyword">const</span> updateData <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>newPassword<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    updateData<span class="token punctuation">.</span>password <span class="token operator">=</span> newPassword\n  <span class="token punctuation">}</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>newNickName<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    updateData<span class="token punctuation">.</span>nickName <span class="token operator">=</span> newNickName\n  <span class="token punctuation">}</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>newPicture<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    updateData<span class="token punctuation">.</span>picture <span class="token operator">=</span> newPicture\n  <span class="token punctuation">}</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>newCity<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    updateData<span class="token punctuation">.</span>city <span class="token operator">=</span> newCity\n  <span class="token punctuation">}</span>\n\n  <span class="token comment">// 拼接查询条件</span>\n  <span class="token keyword">const</span> whereData <span class="token operator">=</span> <span class="token punctuation">{</span>\n    userName\n  <span class="token punctuation">}</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>password<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    whereData<span class="token punctuation">.</span>password <span class="token operator">=</span> password\n  <span class="token punctuation">}</span>\n  <span class="token comment">// 执行修改</span>\n  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> User<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>updateData<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    where<span class="token operator">:</span> whereData\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token keyword">return</span> result<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token comment">// 修改的行数</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br></div></div><br><h3 id="_7-4-修改密码-逻辑同-7-3" tabindex="-1"><a class="header-anchor" href="#_7-4-修改密码-逻辑同-7-3" aria-hidden="true">#</a> 7.4 修改密码(逻辑同 7.3)</h3><p><em>src/routes/apiuser.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 修改密码</span>\nrouter<span class="token punctuation">.</span><span class="token function">patch</span><span class="token punctuation">(</span><span class="token string">&#39;/changePassword&#39;</span><span class="token punctuation">,</span> loginCheck<span class="token punctuation">,</span> <span class="token function">genValidator</span><span class="token punctuation">(</span>userValidate<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> password<span class="token punctuation">,</span> newPassword <span class="token punctuation">}</span> <span class="token operator">=</span> ctx<span class="token punctuation">.</span>request<span class="token punctuation">.</span>body\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> userName <span class="token punctuation">}</span> <span class="token operator">=</span> ctx<span class="token punctuation">.</span>session<span class="token punctuation">.</span>userInfo\n  ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">changePassword</span><span class="token punctuation">(</span>userName<span class="token punctuation">,</span> password<span class="token punctuation">,</span> newPassword<span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><em>src/controller/user.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * 修改密码\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">userName</span> 用户名\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">password</span> 当前密码\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">newPassword</span> 新密码\n */</span>\n<span class="token keyword">const</span> <span class="token function-variable function">changePassword</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">userName<span class="token punctuation">,</span> password<span class="token punctuation">,</span> newPassword</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">updateUser</span><span class="token punctuation">(</span>\n    <span class="token punctuation">{</span> newPassword<span class="token operator">:</span> <span class="token function">doCrypto</span><span class="token punctuation">(</span>newPassword<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      userName<span class="token punctuation">,</span>\n      password<span class="token operator">:</span> <span class="token function">doCrypto</span><span class="token punctuation">(</span>password<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">)</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 成功</span>\n    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">SuccessModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n  <span class="token comment">// 失败</span>\n  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ErrorModel</span><span class="token punctuation">(</span>changePasswordFailInfo<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><br><h3 id="_7-5-退出登录" tabindex="-1"><a class="header-anchor" href="#_7-5-退出登录" aria-hidden="true">#</a> 7.5 退出登录</h3><p><em>src/routes/api/user.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 退出登录</span>\nrouter<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/logout&#39;</span><span class="token punctuation">,</span> loginCheck<span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">logout</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><em>src/controller/user.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 退出登录</span>\nrouter<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/logout&#39;</span><span class="token punctuation">,</span> loginCheck<span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">logout</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><br><h3 id="_7-6-单元测试" tabindex="-1"><a class="header-anchor" href="#_7-6-单元测试" aria-hidden="true">#</a> 7.6 单元测试</h3><p><em>test/user/login.test.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 登录</span>\n<span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;登录,应该成功&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> server\n    <span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/api/user/login&#39;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      userName<span class="token punctuation">,</span>\n      password\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token function">expect</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>body<span class="token punctuation">.</span>errno<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>\n\n    <span class="token comment">// 获取 cookie</span>\n    <span class="token constant">COOKIE</span> <span class="token operator">=</span> res<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">&#39;set-cookie&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;;&#39;</span><span class="token punctuation">)</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>header<span class="token punctuation">[</span><span class="token string">&#39;set-cookie&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token comment">// 修改基本信息</span>\n<span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;修改基本信息，应该成功&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> server\n    <span class="token punctuation">.</span><span class="token function">patch</span><span class="token punctuation">(</span><span class="token string">&#39;/api/user/changeInfo&#39;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      nickName<span class="token operator">:</span> <span class="token string">&#39;测试昵称&#39;</span><span class="token punctuation">,</span>\n      city<span class="token operator">:</span> <span class="token string">&#39;测试城市&#39;</span><span class="token punctuation">,</span>\n      picture<span class="token operator">:</span> <span class="token string">&#39;/test.png&#39;</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;Cookie&#39;</span><span class="token punctuation">,</span> <span class="token constant">COOKIE</span><span class="token punctuation">)</span>\n  <span class="token function">expect</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>body<span class="token punctuation">.</span>errno<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token comment">// 修改密码</span>\n<span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;修改密码,应该成功&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> server\n    <span class="token punctuation">.</span><span class="token function">patch</span><span class="token punctuation">(</span><span class="token string">&#39;/api/user/changePassword&#39;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      password<span class="token punctuation">,</span>\n      newPassword<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">p_</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  \t<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;Cookie&#39;</span><span class="token punctuation">,</span> <span class="token constant">COOKIE</span><span class="token punctuation">)</span>\n  <span class="token function">expect</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>body<span class="token punctuation">.</span>errno<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token comment">// 删除，需要验证 loginCheck，可以通过设置 cookie 规避</span>\n<span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;删除用户,应该成功&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> server\n    <span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/api/user/delete&#39;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;Cookie&#39;</span><span class="token punctuation">,</span> <span class="token constant">COOKIE</span><span class="token punctuation">)</span>\n  <span class="token function">expect</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>body<span class="token punctuation">.</span>errno<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token comment">// 退出</span>\n<span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;退出登录应该成功&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> server\n    <span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/api/user/logout&#39;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;Cookie&#39;</span><span class="token punctuation">,</span> <span class="token constant">COOKIE</span><span class="token punctuation">)</span>\n  <span class="token function">expect</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>body<span class="token punctuation">.</span>errno<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br></div></div><br><h2 id="_8-微博内容开始" tabindex="-1"><a class="header-anchor" href="#_8-微博内容开始" aria-hidden="true">#</a> 8.微博内容开始</h2><h3 id="_8-1-创建数据模型" tabindex="-1"><a class="header-anchor" href="#_8-1-创建数据模型" aria-hidden="true">#</a> 8.1 创建数据模型</h3><p><em>src/db/model/Blog.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * <span class="token keyword">@description</span> 微博数据模型\n * <span class="token keyword">@author</span> yuanke\n */</span>\n\n<span class="token keyword">const</span> seq <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../seq&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token constant">STRING</span><span class="token punctuation">,</span> <span class="token constant">INTEGER</span><span class="token punctuation">,</span> <span class="token constant">TEXT</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../types&#39;</span><span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> Blog <span class="token operator">=</span> seq<span class="token punctuation">.</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token string">&#39;blog&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  userId<span class="token operator">:</span> <span class="token punctuation">{</span>\n    type<span class="token operator">:</span> <span class="token constant">INTEGER</span><span class="token punctuation">,</span>\n    allowNull<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n    comment<span class="token operator">:</span> <span class="token string">&#39;用户 id&#39;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  content<span class="token operator">:</span> <span class="token punctuation">{</span>\n    type<span class="token operator">:</span> <span class="token constant">TEXT</span><span class="token punctuation">,</span>\n    allowNull<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n    comment<span class="token operator">:</span> <span class="token string">&#39;微博内容&#39;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  image<span class="token operator">:</span> <span class="token punctuation">{</span>\n    type<span class="token operator">:</span> <span class="token constant">STRING</span><span class="token punctuation">,</span>\n    allowNull<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    comment<span class="token operator">:</span> <span class="token string">&#39;图片地址&#39;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> Blog\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><p><em>src/db/model/index.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * <span class="token keyword">@description</span> 数据模型入口文件\n * <span class="token keyword">@author</span> yuanke\n */</span>\n\n<span class="token keyword">const</span> User <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./User&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> Blog <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./Blog&#39;</span><span class="token punctuation">)</span>\n\n<span class="token comment">// 多对一的关系，查询微博时顺带查出用户来</span>\nBlog<span class="token punctuation">.</span><span class="token function">belongsTo</span><span class="token punctuation">(</span>User<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  foreignKey<span class="token operator">:</span> <span class="token string">&#39;userId&#39;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token comment">// // 一对多的关系，查询用户时顺带查出微博来</span>\n<span class="token comment">// User.hasMany(Blog, {</span>\n<span class="token comment">//   foreignKey: &#39;userId&#39;</span>\n<span class="token comment">// })</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  User<span class="token punctuation">,</span>\n  Blog\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><br><h3 id="_8-2-创建微博-api" tabindex="-1"><a class="header-anchor" href="#_8-2-创建微博-api" aria-hidden="true">#</a> 8.2 创建微博 API</h3><p><em>src/views/widgets/input.ejs</em>：</p><div class="language-ejs ext-ejs line-numbers-mode"><pre class="language-ejs"><code><span class="token comment">&lt;!-- 微博输入框 --&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>margin-bottom-10 padding-bottom-10 border-bottom<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-control<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text-content<span class="token punctuation">&quot;</span></span> <span class="token attr-name">rows</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>textarea</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>margin-top-10<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn btn-primary<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn-submit<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>发表<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n    <span class="token entity named-entity" title=" ">&amp;nbsp;</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn-add-img<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>fa fa-picture-o<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">&gt;</span></span>\n      插入一张图片\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>file<span class="token punctuation">&quot;</span></span> <span class="token attr-name">accept</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>image/*<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>file-picture<span class="token punctuation">&quot;</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hidden<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>input-img-url<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token entity named-entity" title=" ">&amp;nbsp;</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>span-img-name<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n  <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">var</span> $spanImgName <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#span-img-name&#39;</span><span class="token punctuation">)</span>\n    <span class="token keyword">var</span> $inputImgUrl <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#input-img-url&#39;</span><span class="token punctuation">)</span>\n    <span class="token keyword">var</span> $textContent <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#text-content&#39;</span><span class="token punctuation">)</span>\n    <span class="token keyword">var</span> $filePicture <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#file-picture&#39;</span><span class="token punctuation">)</span>\n\n    <span class="token comment">// 上传图片</span>\n    $filePicture<span class="token punctuation">.</span><span class="token function">change</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">var</span> file <span class="token operator">=</span> $filePicture<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>files<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>\n      $spanImgName<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>name<span class="token punctuation">)</span>\n      ajax<span class="token punctuation">.</span><span class="token function">upload</span><span class="token punctuation">(</span><span class="token string">&#39;/api/utils/upload&#39;</span><span class="token punctuation">,</span> file<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          <span class="token function">alert</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>\n          <span class="token keyword">return</span>\n        <span class="token punctuation">}</span>\n        <span class="token comment">// 成功</span>\n        $inputImgUrl<span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>url<span class="token punctuation">)</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n    <span class="token comment">// 插入图片</span>\n    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#btn-add-img&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      e<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n      <span class="token comment">//  开始选择图片</span>\n      $filePicture<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n    <span class="token comment">// 发布微博</span>\n    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#btn-submit&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">var</span> content <span class="token operator">=</span> $textContent<span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n      <span class="token keyword">var</span> imgUrl <span class="token operator">=</span> $inputImgUrl<span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">&#39;&#39;</span>\n\n      <span class="token comment">// 验证</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>content<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;请输入微博内容&#39;</span><span class="token punctuation">)</span>\n        <span class="token keyword">return</span>\n      <span class="token punctuation">}</span>\n\n      <span class="token comment">// 发布</span>\n      ajax<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/api/blog/create&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        content<span class="token operator">:</span> content<span class="token punctuation">,</span>\n        image<span class="token operator">:</span> imgUrl\n      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          <span class="token comment">// 失败</span>\n          <span class="token function">alert</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>\n          <span class="token keyword">return</span>\n        <span class="token punctuation">}</span>\n        <span class="token comment">// 成功</span>\n        $filePicture<span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>\n        $spanImgName<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>\n        $textContent<span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>\n        $inputImgUrl<span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>\n\n        <span class="token comment">// 刷新页面</span>\n        location<span class="token punctuation">.</span>href <span class="token operator">=</span> location<span class="token punctuation">.</span>pathname\n      <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n    <span class="token comment">// // @ 功能</span>\n    <span class="token comment">// $textContent.atwho({</span>\n    <span class="token comment">//   at: &#39;@&#39;,</span>\n    <span class="token comment">//   data: &#39;/api/user/getAtList&#39;</span>\n    <span class="token comment">//   // data: [&#39;Peter&#39;, &#39;Tom&#39;, &#39;Anne&#39;]</span>\n    <span class="token comment">// })</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br></div></div><p><em>src/routes/api/blog-home.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * <span class="token keyword">@description</span> 首页 API 路由\n * <span class="token keyword">@author</span> yuanke\n */</span>\n\n<span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;koa-router&#39;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> create <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../../controller/blog-home&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> loginCheck <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../../middlewares/loginChecks&#39;</span><span class="token punctuation">)</span>\n\nrouter<span class="token punctuation">.</span><span class="token function">prefix</span><span class="token punctuation">(</span><span class="token string">&#39;/api/blog&#39;</span><span class="token punctuation">)</span>\n\n<span class="token comment">// 创建微博</span>\nrouter<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/create&#39;</span><span class="token punctuation">,</span> loginCheck<span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> content<span class="token punctuation">,</span> image <span class="token punctuation">}</span> <span class="token operator">=</span> ctx<span class="token punctuation">.</span>request<span class="token punctuation">.</span>body\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> id<span class="token operator">:</span> userId <span class="token punctuation">}</span> <span class="token operator">=</span> ctx<span class="token punctuation">.</span>session<span class="token punctuation">.</span>userInfo\n  ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span> userId<span class="token punctuation">,</span> content<span class="token punctuation">,</span> image <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> router\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p><em>src/controller/blog-home.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * <span class="token keyword">@description</span> 首页 controller\n * <span class="token keyword">@author</span> yuanke\n */</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> createBlogFailInfo <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../model/ErrorInfo&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> SuccessModel<span class="token punctuation">,</span> ErrorModel <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../model/ResModel&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> createBlog <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../service/blog&#39;</span><span class="token punctuation">)</span>\n\n<span class="token doc-comment comment">/**\n * 创建微博\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Object<span class="token punctuation">}</span></span> <span class="token parameter">param0</span> 创建微博所需的数据 <span class="token punctuation">{</span> userId, content, image <span class="token punctuation">}</span>\n */</span>\n<span class="token keyword">const</span> <span class="token function-variable function">create</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> userId<span class="token punctuation">,</span> content<span class="token punctuation">,</span> image <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">try</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 创建微博</span>\n    <span class="token keyword">const</span> blog <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">createBlog</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      userId<span class="token punctuation">,</span>\n      content<span class="token punctuation">,</span>\n      image\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">SuccessModel</span><span class="token punctuation">(</span>blog<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>ex<span class="token punctuation">.</span>message<span class="token punctuation">,</span> ex<span class="token punctuation">.</span>stack<span class="token punctuation">)</span>\n    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ErrorModel</span><span class="token punctuation">(</span>createBlogFailInfo<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  create\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><p><em>src/service/blog.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * <span class="token keyword">@description</span> 微博 service\n * <span class="token keyword">@author</span> yuanke\n */</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> Blog <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../db/model/index&#39;</span><span class="token punctuation">)</span>\n\n<span class="token doc-comment comment">/**\n * 创建微博\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Object<span class="token punctuation">}</span></span> <span class="token parameter">param0</span> 创建微博的数据 <span class="token punctuation">{</span> userId, content, image <span class="token punctuation">}</span>\n */</span>\n<span class="token keyword">const</span> <span class="token function-variable function">createBlog</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> userId<span class="token punctuation">,</span> content<span class="token punctuation">,</span> image <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> Blog<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    userId<span class="token punctuation">,</span>\n    content<span class="token punctuation">,</span>\n    image\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token keyword">return</span> result<span class="token punctuation">.</span><span class="token function">toJSON</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  createBlog\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><br><h3 id="_8-3-xss-过滤和格式校验" tabindex="-1"><a class="header-anchor" href="#_8-3-xss-过滤和格式校验" aria-hidden="true">#</a> 8.3 xss 过滤和格式校验</h3><blockquote><p>安装：<code>npm i xss -S</code>，在 controller 层引用 xss 后，用 <code>xss(content)</code> 包裹 content 就可以防止 xss 攻击了</p></blockquote><p><strong>格式校验</strong>：</p><p><em>src/validator/blog.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * <span class="token keyword">@description</span> 微博数据格式校验\n * <span class="token keyword">@author</span> yuanke\n */</span>\n\n<span class="token keyword">const</span> validate <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./_validate&#39;</span><span class="token punctuation">)</span>\n\n<span class="token comment">// 校验规则</span>\n<span class="token keyword">const</span> <span class="token constant">SCHEMA</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  type<span class="token operator">:</span> <span class="token string">&#39;object&#39;</span><span class="token punctuation">,</span>\n  properties<span class="token operator">:</span> <span class="token punctuation">{</span>\n    content<span class="token operator">:</span> <span class="token punctuation">{</span>\n      type<span class="token operator">:</span> <span class="token string">&#39;string&#39;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    image<span class="token operator">:</span> <span class="token punctuation">{</span>\n      type<span class="token operator">:</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">,</span>\n      maxLength<span class="token operator">:</span> <span class="token number">255</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token doc-comment comment">/**\n * 校验微博数据格式\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Object<span class="token punctuation">}</span></span> <span class="token parameter">data</span> 微博数据\n * <span class="token keyword">@returns</span> \n */</span>\n<span class="token keyword">const</span> <span class="token function-variable function">blogValidate</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">data <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token function">validate</span><span class="token punctuation">(</span><span class="token constant">SCHEMA</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> blogValidate\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><br><h3 id="_8-4-单元测试" tabindex="-1"><a class="header-anchor" href="#_8-4-单元测试" aria-hidden="true">#</a> 8.4 单元测试</h3><p><em>test/testUserInfo.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * <span class="token keyword">@description</span> 用户单元测试的用户信息\n * <span class="token keyword">@author</span> yuanke\n */</span>\n\n<span class="token doc-comment comment">/**\n * [特别提醒] cookie 是用户的敏感信息，此处只能是 **测试** 用户的 cookie\n * 每次测试用户重新登录，都需要更新这里的 cookie\n */</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token constant">COOKIE</span><span class="token operator">:</span> <span class="token string">&#39;weibo.sid=kFi4GdKLCbskaUZOqDHtKWqJx9RVsGxt; weibo.sid.sig=YhhPOrRV1UH0jsR4o-QVFF2SkhU&#39;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p><em>test/blog/model.test.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * <span class="token keyword">@description</span> 微博数据模型单元测试\n * <span class="token keyword">@author</span> yuanke\n */</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> Blog <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../../src/db/model/index&#39;</span><span class="token punctuation">)</span>\n\n<span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;微博数据模型各个属性符合预期&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> blog <span class="token operator">=</span> Blog<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    userId<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n    content<span class="token operator">:</span> <span class="token string">&#39;微博内容&#39;</span><span class="token punctuation">,</span>\n    image<span class="token operator">:</span> <span class="token string">&#39;/test.png&#39;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token function">expect</span><span class="token punctuation">(</span>blog<span class="token punctuation">.</span>userId<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>\n  <span class="token function">expect</span><span class="token punctuation">(</span>blog<span class="token punctuation">.</span>content<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token string">&#39;微博内容&#39;</span><span class="token punctuation">)</span>\n  <span class="token function">expect</span><span class="token punctuation">(</span>blog<span class="token punctuation">.</span>image<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token string">&#39;/test.png&#39;</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p><em>test/blog/home.test.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * <span class="token keyword">@description</span> 首页 test\n * <span class="token keyword">@author</span> yuanke\n */</span>\n\n<span class="token keyword">const</span> server <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../server&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token constant">COOKIE</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../testUserInfo&#39;</span><span class="token punctuation">)</span>\n\n<span class="token comment">// 存储微博 id</span>\n<span class="token keyword">let</span> <span class="token constant">BLOG_ID</span>\n\n<span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;创建一条微博应该成功&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 定义测试内容</span>\n  <span class="token keyword">const</span> content <span class="token operator">=</span> <span class="token string">&#39;单元测试自动创建的微博_&#39;</span> <span class="token operator">+</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token keyword">const</span> image <span class="token operator">=</span> <span class="token string">&#39;/xxx.png&#39;</span>\n  <span class="token comment">// 开始测试</span>\n  <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> server\n    <span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/api/blog/create&#39;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      content<span class="token punctuation">,</span>\n      image\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;Cookie&#39;</span><span class="token punctuation">,</span> <span class="token constant">COOKIE</span><span class="token punctuation">)</span>\n  <span class="token function">expect</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>body<span class="token punctuation">.</span>errno<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>\n  <span class="token function">expect</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>body<span class="token punctuation">.</span>data<span class="token punctuation">.</span>content<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span>\n  <span class="token function">expect</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>body<span class="token punctuation">.</span>data<span class="token punctuation">.</span>image<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span>image<span class="token punctuation">)</span>\n\n  <span class="token comment">// 记录微博 id</span>\n  <span class="token constant">BLOG_ID</span> <span class="token operator">=</span> res<span class="token punctuation">.</span>body<span class="token punctuation">.</span>data<span class="token punctuation">.</span>id\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><br><h2 id="_9-微博内容深入" tabindex="-1"><a class="header-anchor" href="#_9-微博内容深入" aria-hidden="true">#</a> 9.微博内容深入</h2><h3 id="_9-1-开始和创建页面" tabindex="-1"><a class="header-anchor" href="#_9-1-开始和创建页面" aria-hidden="true">#</a> 9.1 开始和创建页面</h3><p><em>src/routes/view/blog.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 个人主页</span>\nrouter<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/profile&#39;</span><span class="token punctuation">,</span> loginRedirect<span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> userName <span class="token punctuation">}</span> <span class="token operator">=</span> ctx<span class="token punctuation">.</span>session<span class="token punctuation">.</span>userInfo\n  ctx<span class="token punctuation">.</span><span class="token function">redirect</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">/profile/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>userName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\nrouter<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/profile/:userName&#39;</span><span class="token punctuation">,</span> loginRedirect<span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> userName<span class="token operator">:</span> curUserName <span class="token punctuation">}</span> <span class="token operator">=</span> ctx<span class="token punctuation">.</span>params\n  <span class="token comment">// 获取微博第一页数据</span>\n  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getProfileBlogList</span><span class="token punctuation">(</span>curUserName<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> isEmpty<span class="token punctuation">,</span> blogList<span class="token punctuation">,</span> pageSize<span class="token punctuation">,</span> pageIndex<span class="token punctuation">,</span> count <span class="token punctuation">}</span> <span class="token operator">=</span> result<span class="token punctuation">.</span>data\n\n  <span class="token keyword">await</span> ctx<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token string">&#39;profile&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    blogData<span class="token operator">:</span> <span class="token punctuation">{</span>\n      isEmpty<span class="token punctuation">,</span>\n      blogList<span class="token punctuation">,</span>\n      pageSize<span class="token punctuation">,</span>\n      pageIndex<span class="token punctuation">,</span>\n      count\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><p><em>src/controller/blog-profile.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * <span class="token keyword">@description</span> 个人主页 controller\n * <span class="token keyword">@author</span> yuanke\n */</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> getBlogListByUser <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;../service/blog&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token constant">PAGE_SIZE</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../conf/constant&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> SuccessModel <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;../model/ResModel&quot;</span><span class="token punctuation">)</span>\n\n<span class="token doc-comment comment">/**\n * 获取个人主页微博列表\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">userName</span> 用户名\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">pageIndex</span> 当前页面\n */</span>\n<span class="token keyword">const</span> <span class="token function-variable function">getProfileBlogList</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">userName<span class="token punctuation">,</span> pageIndex <span class="token operator">=</span> <span class="token number">0</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getBlogListByUser</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    userName<span class="token punctuation">,</span>\n    pageIndex<span class="token punctuation">,</span>\n    pageSize<span class="token operator">:</span> <span class="token constant">PAGE_SIZE</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token keyword">const</span> blogList <span class="token operator">=</span> result<span class="token punctuation">.</span>blogList\n\n  <span class="token comment">// 拼接返回数据</span>\n  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">SuccessModel</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    isEmpty<span class="token operator">:</span> blogList<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">,</span>\n    blogList<span class="token punctuation">,</span>\n    pageSize<span class="token operator">:</span> <span class="token constant">PAGE_SIZE</span><span class="token punctuation">,</span>\n    pageIndex<span class="token punctuation">,</span>\n    count<span class="token operator">:</span> result<span class="token punctuation">.</span>count\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  getProfileBlogList\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br></div></div><p><em>src/service/blog.js</em>：连表查询</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * 根据用户获取微博列表\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Object<span class="token punctuation">}</span></span> <span class="token parameter">param0</span> <span class="token punctuation">{</span> userName, pageIndex = 0, pageSize = 10 <span class="token punctuation">}</span>\n */</span>\n<span class="token keyword">const</span> <span class="token function-variable function">getBlogListByUser</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> userName<span class="token punctuation">,</span> pageIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> pageSize <span class="token operator">=</span> <span class="token number">10</span> <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 拼接查询条件</span>\n  <span class="token keyword">const</span> userWhereOpts <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>userName<span class="token punctuation">)</span> userWhereOpts<span class="token punctuation">.</span>userName <span class="token operator">=</span> userName\n  <span class="token comment">// 执行查询</span>\n  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> Blog<span class="token punctuation">.</span><span class="token function">findAndCountAll</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    limit<span class="token operator">:</span> pageSize<span class="token punctuation">,</span> <span class="token comment">// 每页多少条</span>\n    offset<span class="token operator">:</span> pageSize <span class="token operator">*</span> pageIndex<span class="token punctuation">,</span> <span class="token comment">// 跳过多少条</span>\n    order<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">[</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;desc&#39;</span><span class="token punctuation">]</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    include<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        model<span class="token operator">:</span> User<span class="token punctuation">,</span>\n        attributes<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;userName&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;nickName&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;picture&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        where<span class="token operator">:</span> userWhereOpts\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token comment">// result.count 总数，跟分页无关</span>\n  <span class="token comment">// result.rows 查询结果，数组</span>\n  <span class="token keyword">let</span> blogList <span class="token operator">=</span> result<span class="token punctuation">.</span>rows<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">row</span> <span class="token operator">=&gt;</span> row<span class="token punctuation">.</span><span class="token function">toJSON</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n  blogList <span class="token operator">=</span> blogList<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">blogItem</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> user <span class="token operator">=</span> blogItem<span class="token punctuation">.</span>user\n    blogItem<span class="token punctuation">.</span>user <span class="token operator">=</span> <span class="token function">formatUser</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span>\n    <span class="token keyword">return</span> blogItem\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token keyword">return</span> <span class="token punctuation">{</span>\n    count<span class="token operator">:</span> result<span class="token punctuation">.</span>count<span class="token punctuation">,</span>\n    blogList\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br></div></div><br><h3 id="_9-2-创建路由-格式化时间" tabindex="-1"><a class="header-anchor" href="#_9-2-创建路由-格式化时间" aria-hidden="true">#</a> 9.2 创建路由 - 格式化时间</h3><blockquote><p>安装：<code>npm i -S date-fns</code></p></blockquote><p><em>src/utils/dt.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * <span class="token keyword">@description</span> 时间相关的工具函数\n * <span class="token keyword">@author</span> yuanke\n */</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> format <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;date-fns&#39;</span><span class="token punctuation">)</span>\n\n<span class="token doc-comment comment">/**\n * 格式化时间，如 09.05 23:02\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">str</span> 时间字符串\n */</span>\n<span class="token keyword">const</span> <span class="token function-variable function">timeFormat</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;MM.dd HH:mm&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n  <span class="token keyword">return</span> <span class="token function">format</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;MM.dd HH:mm&#39;</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  timeFormat\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p><em>src/service/_format.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * 格式化数据的时间\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Object<span class="token punctuation">}</span></span> <span class="token parameter">obj</span> 数据\n */</span>\n<span class="token keyword">const</span> <span class="token function-variable function">_formatDBTime</span> <span class="token operator">=</span> <span class="token parameter">obj</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  obj<span class="token punctuation">.</span>createdAtFormat <span class="token operator">=</span> <span class="token function">timeFormat</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>createdAt<span class="token punctuation">)</span>\n  obj<span class="token punctuation">.</span>updatedAtFormat <span class="token operator">=</span> <span class="token function">timeFormat</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>updatedAt<span class="token punctuation">)</span>\n  <span class="token keyword">return</span> obj\n<span class="token punctuation">}</span>\n\n<span class="token doc-comment comment">/**\n * 格式化微博信息\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Array<span class="token operator">|</span>Object<span class="token punctuation">}</span></span> <span class="token parameter">list</span> 微博列表或者单个微博对象\n */</span>\n<span class="token keyword">const</span> <span class="token function-variable function">formatBlog</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">list</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>list <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span> list\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>list <span class="token keyword">instanceof</span> <span class="token class-name">Array</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 数组</span>\n    <span class="token keyword">return</span> list<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>_formatDBTime<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n  <span class="token comment">// 对象</span>\n  <span class="token keyword">return</span> <span class="token function">_formatDBTime</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><p><em>src/service/blog.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * 根据用户获取微博列表\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Object<span class="token punctuation">}</span></span> <span class="token parameter">param0</span> <span class="token punctuation">{</span> userName, pageIndex = 0, pageSize = 10 <span class="token punctuation">}</span>\n */</span>\n<span class="token keyword">const</span> <span class="token function-variable function">getBlogListByUser</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> userName<span class="token punctuation">,</span> pageIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> pageSize <span class="token operator">=</span> <span class="token number">10</span> <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 拼接查询条件</span>\n  <span class="token keyword">const</span> userWhereOpts <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>userName<span class="token punctuation">)</span> userWhereOpts<span class="token punctuation">.</span>userName <span class="token operator">=</span> userName\n  <span class="token comment">// 执行查询</span>\n  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> Blog<span class="token punctuation">.</span><span class="token function">findAndCountAll</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    limit<span class="token operator">:</span> pageSize<span class="token punctuation">,</span> <span class="token comment">// 每页多少条</span>\n    offset<span class="token operator">:</span> pageSize <span class="token operator">*</span> pageIndex<span class="token punctuation">,</span> <span class="token comment">// 跳过多少条</span>\n    order<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">[</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;desc&#39;</span><span class="token punctuation">]</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    include<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        model<span class="token operator">:</span> User<span class="token punctuation">,</span>\n        attributes<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;userName&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;nickName&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;picture&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        where<span class="token operator">:</span> userWhereOpts\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token comment">// result.count 总数，跟分页无关</span>\n  <span class="token comment">// result.rows 查询结果，数组</span>\n  <span class="token keyword">let</span> blogList <span class="token operator">=</span> result<span class="token punctuation">.</span>rows<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">row</span> <span class="token operator">=&gt;</span> row<span class="token punctuation">.</span><span class="token function">toJSON</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n\n  <span class="token comment">// 格式化</span>\n  blogList <span class="token operator">=</span> <span class="token function">formatBlog</span><span class="token punctuation">(</span>blogList<span class="token punctuation">)</span>\n  blogList <span class="token operator">=</span> blogList<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">blogItem</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> user <span class="token operator">=</span> blogItem<span class="token punctuation">.</span>user\n    blogItem<span class="token punctuation">.</span>user <span class="token operator">=</span> <span class="token function">formatUser</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span>\n    <span class="token keyword">return</span> blogItem\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token keyword">return</span> <span class="token punctuation">{</span>\n    count<span class="token operator">:</span> result<span class="token punctuation">.</span>count<span class="token punctuation">,</span>\n    blogList\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br></div></div><br><h3 id="_9-3-后端渲染-加载更多-页面" tabindex="-1"><a class="header-anchor" href="#_9-3-后端渲染-加载更多-页面" aria-hidden="true">#</a> 9.3 后端渲染&quot;加载更多&quot;页面</h3><blockquote><p>安装：<code>npm i -S ejs</code></p></blockquote><p><em>src/views/widgets/blog-list.ejs</em>：</p><blockquote><p>后端渲染的页面，会传到前端去的</p></blockquote><div class="language-ejs ext-ejs line-numbers-mode"><pre class="language-ejs"><code><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> blogList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">blog</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> </span><span class="token delimiter punctuation">%&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item-wrapper<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>user-picture<span class="token punctuation">&quot;</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript"> blog<span class="token punctuation">.</span>user<span class="token punctuation">.</span>picture</span><span class="token delimiter punctuation">%&gt;</span></span><span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>content clear-fix<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n      <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">if</span> <span class="token punctuation">(</span>blog<span class="token punctuation">.</span>image<span class="token punctuation">)</span> <span class="token punctuation">{</span> </span><span class="token delimiter punctuation">%&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript"> blog<span class="token punctuation">.</span>image</span><span class="token delimiter punctuation">%&gt;</span></span><span class="token punctuation">&quot;</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>_blank<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>blog-img<span class="token punctuation">&quot;</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript"> blog<span class="token punctuation">.</span>image</span><span class="token delimiter punctuation">%&gt;</span></span><span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>\n      <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">}</span> </span><span class="token delimiter punctuation">%&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/profile/<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript"> blog<span class="token punctuation">.</span>user<span class="token punctuation">.</span>userName</span><span class="token delimiter punctuation">%&gt;</span></span><span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n        <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript"> blog<span class="token punctuation">.</span>user<span class="token punctuation">.</span>nickName</span><span class="token delimiter punctuation">%&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>:\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> blog<span class="token punctuation">.</span>content</span><span class="token delimiter punctuation">%&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>info<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript"> blog<span class="token punctuation">.</span>createdAtFormat</span><span class="token delimiter punctuation">%&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>\n      <span class="token entity named-entity" title=" ">&amp;nbsp;</span>\n      <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">if</span> <span class="token punctuation">(</span>locals<span class="token punctuation">.</span>canReply<span class="token punctuation">)</span> <span class="token punctuation">{</span> </span><span class="token delimiter punctuation">%&gt;</span></span>\n      <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token comment"># 可以回复 </span><span class="token delimiter punctuation">%&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>blog-list-reply<span class="token punctuation">&quot;</span></span>\n         <span class="token attr-name">data-content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript"> blog<span class="token punctuation">.</span>content</span><span class="token delimiter punctuation">%&gt;</span></span><span class="token punctuation">&quot;</span></span>\n         <span class="token attr-name">data-userName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript"> blog<span class="token punctuation">.</span>user<span class="token punctuation">.</span>userName</span><span class="token delimiter punctuation">%&gt;</span></span><span class="token punctuation">&quot;</span></span>\n         <span class="token attr-name">data-nickName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript"> blog<span class="token punctuation">.</span>user<span class="token punctuation">.</span>nickName</span><span class="token delimiter punctuation">%&gt;</span></span><span class="token punctuation">&quot;</span></span>\n         <span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>fa fa-mail-reply<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">&gt;</span></span> 回复\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>\n      <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">}</span> </span><span class="token delimiter punctuation">%&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">}</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n  <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 设置焦点</span>\n    <span class="token keyword">function</span> <span class="token function">setCursor</span><span class="token punctuation">(</span><span class="token parameter">el<span class="token punctuation">,</span> st<span class="token punctuation">,</span> end</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>el<span class="token punctuation">.</span>setSelectionRange<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        el<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n        el<span class="token punctuation">.</span><span class="token function">setSelectionRange</span><span class="token punctuation">(</span>st<span class="token punctuation">,</span> end<span class="token punctuation">)</span>\n      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>el<span class="token punctuation">.</span>createTextRange<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">var</span> range <span class="token operator">=</span> el<span class="token punctuation">.</span><span class="token function">createTextRange</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n        range<span class="token punctuation">.</span><span class="token function">collapse</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>\n        range<span class="token punctuation">.</span><span class="token function">moveEnd</span><span class="token punctuation">(</span><span class="token string">&#39;character&#39;</span><span class="token punctuation">,</span>end<span class="token punctuation">)</span>\n        range<span class="token punctuation">.</span><span class="token function">moveStart</span><span class="token punctuation">(</span><span class="token string">&#39;character&#39;</span><span class="token punctuation">,</span>st<span class="token punctuation">)</span>\n        range<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token comment">// 回复</span>\n    <span class="token keyword">var</span> $textContent <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#text-content&#39;</span><span class="token punctuation">)</span>\n    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;.blog-list-reply&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      e<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n      <span class="token keyword">var</span> $target <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">)</span>\n\n      <span class="token comment">// 获取内容和用户</span>\n      <span class="token keyword">var</span> content <span class="token operator">=</span> $target<span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&#39;data-content&#39;</span><span class="token punctuation">)</span>\n      <span class="token keyword">var</span> userName <span class="token operator">=</span> $target<span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&#39;data-userName&#39;</span><span class="token punctuation">)</span>\n      <span class="token keyword">var</span> nickName <span class="token operator">=</span> $target<span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&#39;data-nickName&#39;</span><span class="token punctuation">)</span>\n\n      <span class="token comment">// 设置内容并获取焦点</span>\n      $textContent<span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token string">&#39; // @&#39;</span> <span class="token operator">+</span> nickName <span class="token operator">+</span> <span class="token string">&#39; - &#39;</span> <span class="token operator">+</span> userName <span class="token operator">+</span> <span class="token string">&#39; : &#39;</span> <span class="token operator">+</span> content<span class="token punctuation">)</span>\n      <span class="token function">setCursor</span><span class="token punctuation">(</span>$textContent<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br></div></div><p><em>src/routes/api/blog-profile.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 加载更多</span>\nrouter<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/loadMore/:userName/:pageIndex&#39;</span><span class="token punctuation">,</span> loginCheck<span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">let</span> <span class="token punctuation">{</span> userName<span class="token punctuation">,</span> pageIndex <span class="token punctuation">}</span> <span class="token operator">=</span> ctx<span class="token punctuation">.</span>params\n  pageIndex <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>pageIndex<span class="token punctuation">)</span>\n  <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getProfileBlogList</span><span class="token punctuation">(</span>userName<span class="token punctuation">,</span> pageIndex<span class="token punctuation">)</span>\n  <span class="token comment">// 渲染为 html 字符串</span>\n  result<span class="token punctuation">.</span>data<span class="token punctuation">.</span>blogListTpl <span class="token operator">=</span> <span class="token function">getBlogListStr</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>data<span class="token punctuation">.</span>blogList<span class="token punctuation">)</span>\n  ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> result\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><em>src/utils/blog.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * <span class="token keyword">@description</span> 微博数据相关的工具方法\n * <span class="token keyword">@author</span> yuanke\n */</span>\n\n<span class="token keyword">const</span> ejs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;ejs&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>\n\n<span class="token comment">// 获取 blog-ejs 的文件内容</span>\n<span class="token keyword">const</span> <span class="token constant">BLOG_LIST_TPL</span> <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span>\n  path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;..&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;views&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;widgets&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;blog-list.ejs&#39;</span><span class="token punctuation">)</span>\n<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n<span class="token doc-comment comment">/**\n * 根据 blogList 渲染出 html 字符串\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Array<span class="token punctuation">}</span></span> <span class="token parameter">blogList</span> 微博列表\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Boolean<span class="token punctuation">}</span></span> <span class="token parameter">canReply</span> 是否可以回复\n */</span>\n<span class="token keyword">const</span> <span class="token function-variable function">getBlogListStr</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">blogList <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> canReply <span class="token operator">=</span> <span class="token boolean">false</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> ejs<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token constant">BLOG_LIST_TPL</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    blogList<span class="token punctuation">,</span>\n    canReply\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  getBlogListStr\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><br><h3 id="_9-4-单元测试" tabindex="-1"><a class="header-anchor" href="#_9-4-单元测试" aria-hidden="true">#</a> 9.4 单元测试</h3><p><em>test/blog/profile.test.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * <span class="token keyword">@description</span> 个人主页 test\n * <span class="token keyword">@author</span> yuanke\n */</span>\n\n<span class="token keyword">const</span> server <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../server&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token constant">USER_NAME</span><span class="token punctuation">,</span> <span class="token constant">COOKIE</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../testUserInfo&#39;</span><span class="token punctuation">)</span>\n<span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;个人主页,加载第一页数据,应该成功&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> server\n    <span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">/api/profile/loadMore/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token constant">USER_NAME</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/0</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;Cookie&#39;</span><span class="token punctuation">,</span> <span class="token constant">COOKIE</span><span class="token punctuation">)</span>\n\n  <span class="token function">expect</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>body<span class="token punctuation">.</span>errno<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>\n\n  <span class="token keyword">const</span> data <span class="token operator">=</span> res<span class="token punctuation">.</span>body<span class="token punctuation">.</span>data\n  <span class="token function">expect</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveProperty</span><span class="token punctuation">(</span><span class="token string">&#39;isEmpty&#39;</span><span class="token punctuation">)</span>\n  <span class="token function">expect</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveProperty</span><span class="token punctuation">(</span><span class="token string">&#39;blogList&#39;</span><span class="token punctuation">)</span>\n  <span class="token function">expect</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveProperty</span><span class="token punctuation">(</span><span class="token string">&#39;pageSize&#39;</span><span class="token punctuation">)</span>\n  <span class="token function">expect</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveProperty</span><span class="token punctuation">(</span><span class="token string">&#39;pageIndex&#39;</span><span class="token punctuation">)</span>\n  <span class="token function">expect</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveProperty</span><span class="token punctuation">(</span><span class="token string">&#39;count&#39;</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><br><h2 id="_10-微博广场页" tabindex="-1"><a class="header-anchor" href="#_10-微博广场页" aria-hidden="true">#</a> 10.微博广场页</h2><h3 id="_10-1-redis-基本设置" tabindex="-1"><a class="header-anchor" href="#_10-1-redis-基本设置" aria-hidden="true">#</a> 10.1 redis - 基本设置</h3><p><em>src/routes/api/blog-square.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * <span class="token keyword">@description</span> 广场页 API 路由\n * <span class="token keyword">@author</span> yuanke\n */</span>\n\n<span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;koa-router&#39;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> loginCheck <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../../middlewares/loginChecks&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> getProfileBlogList<span class="token punctuation">,</span> getSquareBlogList <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../../controller/blog-square&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> getBlogListStr <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../../utils/blog&#39;</span><span class="token punctuation">)</span>\n\nrouter<span class="token punctuation">.</span><span class="token function">prefix</span><span class="token punctuation">(</span><span class="token string">&#39;/api/square&#39;</span><span class="token punctuation">)</span>\n\n<span class="token comment">// 加载更多</span>\nrouter<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/loadMore/:pageIndex&#39;</span><span class="token punctuation">,</span> loginCheck<span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">let</span> <span class="token punctuation">{</span> pageIndex <span class="token punctuation">}</span> <span class="token operator">=</span> ctx<span class="token punctuation">.</span>params\n  pageIndex <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>pageIndex<span class="token punctuation">)</span>\n  <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getSquareBlogList</span><span class="token punctuation">(</span>pageIndex<span class="token punctuation">)</span>\n  <span class="token comment">// 渲染为 html 字符串</span>\n  result<span class="token punctuation">.</span>data<span class="token punctuation">.</span>blogListTpl <span class="token operator">=</span> <span class="token function">getBlogListStr</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>data<span class="token punctuation">.</span>blogList<span class="token punctuation">)</span>\n  ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> result\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> router\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><p><em>src/controller/blog-square.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * <span class="token keyword">@description</span> 广场页 controller\n * <span class="token keyword">@author</span> yuanke\n */</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token constant">PAGE_SIZE</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../conf/constant&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> SuccessModel <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../model/ResModel&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> getSquareCacheList <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../cache/blog&#39;</span><span class="token punctuation">)</span>\n\n<span class="token doc-comment comment">/**\n * 获取广场的微博列表\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">pageIndex</span> pageIndex\n */</span>\n<span class="token keyword">const</span> <span class="token function-variable function">getSquareBlogList</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">pageIndex <span class="token operator">=</span> <span class="token number">0</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getSquareCacheList</span><span class="token punctuation">(</span>pageIndex<span class="token punctuation">,</span> <span class="token constant">PAGE_SIZE</span><span class="token punctuation">)</span>\n  <span class="token keyword">const</span> blogList <span class="token operator">=</span> result<span class="token punctuation">.</span>blogList\n  \n  <span class="token comment">// 拼接返回数据</span>\n  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">SuccessModel</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    isEmpty<span class="token operator">:</span> blogList<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">,</span>\n    blogList<span class="token punctuation">,</span>\n    pageSize<span class="token operator">:</span> <span class="token constant">PAGE_SIZE</span><span class="token punctuation">,</span>\n    pageIndex<span class="token punctuation">,</span>\n    count<span class="token operator">:</span> result<span class="token punctuation">.</span>count\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  getSquareBlogList\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><p><em>src/cache/blog.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * <span class="token keyword">@description</span> 微博缓存层\n * <span class="token keyword">@author</span> yuanke\n */</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> set<span class="token punctuation">,</span> get <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./_redis&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> getBlogListByUser <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../service/blog&#39;</span><span class="token punctuation">)</span>\n\n<span class="token comment">// redis key 前缀</span>\n<span class="token keyword">const</span> <span class="token constant">KEY_PREFIX</span> <span class="token operator">=</span> <span class="token string">&#39;weibo:square:&#39;</span>\n\n<span class="token doc-comment comment">/**\n * 获取广场列表的缓存\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">pageIndex</span> pageIndex\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">pageSize</span> pageSize\n */</span>\n<span class="token keyword">const</span> <span class="token function-variable function">getSquareCacheList</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">pageIndex<span class="token punctuation">,</span> pageSize</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> key <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token constant">KEY_PREFIX</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>pageIndex<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">_</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>pageSize<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span>\n\n  <span class="token comment">// 尝试获取缓存</span>\n  <span class="token keyword">const</span> cacheResult <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>cacheResult <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 获取缓存成功</span>\n    <span class="token keyword">return</span> cacheResult\n  <span class="token punctuation">}</span>\n  <span class="token comment">// 没有缓存,则读取数据库</span>\n  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getBlogListByUser</span><span class="token punctuation">(</span><span class="token punctuation">{</span> pageIndex<span class="token punctuation">,</span> pageSize <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n  <span class="token comment">// 设置缓存,过期时间 1min</span>\n  <span class="token function">set</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> result<span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">)</span>\n  <span class="token keyword">return</span> result\n<span class="token punctuation">}</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  getSquareCacheList\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br></div></div><br><h3 id="_10-2-单元测试" tabindex="-1"><a class="header-anchor" href="#_10-2-单元测试" aria-hidden="true">#</a> 10.2 单元测试</h3><p><em>test/blog/square.test.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * <span class="token keyword">@description</span> 广场 square\n * <span class="token keyword">@author</span> yuanke\n */</span>\n\n<span class="token keyword">const</span> server <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../server&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token constant">COOKIE</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../testUserInfo&#39;</span><span class="token punctuation">)</span>\n\n<span class="token comment">// 加载第一页数据</span>\n<span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;广场,加载第一页数据&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> server\n    <span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/api/square/loadMore/0&#39;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;Cookie&#39;</span><span class="token punctuation">,</span> <span class="token constant">COOKIE</span><span class="token punctuation">)</span>\n  <span class="token function">expect</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>body<span class="token punctuation">.</span>errno<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>\n  <span class="token keyword">const</span> data <span class="token operator">=</span> res<span class="token punctuation">.</span>body<span class="token punctuation">.</span>data\n  <span class="token function">expect</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveProperty</span><span class="token punctuation">(</span><span class="token string">&#39;isEmpty&#39;</span><span class="token punctuation">)</span>\n  <span class="token function">expect</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveProperty</span><span class="token punctuation">(</span><span class="token string">&#39;blogList&#39;</span><span class="token punctuation">)</span>\n  <span class="token function">expect</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveProperty</span><span class="token punctuation">(</span><span class="token string">&#39;pageSize&#39;</span><span class="token punctuation">)</span>\n  <span class="token function">expect</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveProperty</span><span class="token punctuation">(</span><span class="token string">&#39;pageIndex&#39;</span><span class="token punctuation">)</span>\n  <span class="token function">expect</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveProperty</span><span class="token punctuation">(</span><span class="token string">&#39;count&#39;</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><br><h2 id="_11-关注" tabindex="-1"><a class="header-anchor" href="#_11-关注" aria-hidden="true">#</a> 11.关注</h2><h3 id="_11-1-开始与数据建模" tabindex="-1"><a class="header-anchor" href="#_11-1-开始与数据建模" aria-hidden="true">#</a> 11.1 开始与数据建模</h3><p><em>src/db/model/UserRelation.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * <span class="token keyword">@description</span> 用户关注关系\n * <span class="token keyword">@author</span> yuanke\n */</span>\n\n<span class="token keyword">const</span> seq <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../seq&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token constant">INTEGER</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../types&#39;</span><span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> UserRelation <span class="token operator">=</span> seq<span class="token punctuation">.</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token string">&#39;userRelation&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  userId<span class="token operator">:</span> <span class="token punctuation">{</span>\n    type<span class="token operator">:</span> <span class="token constant">INTEGER</span><span class="token punctuation">,</span>\n    allowNull<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n    comment<span class="token operator">:</span> <span class="token string">&#39;用户 id&#39;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  followerId<span class="token operator">:</span> <span class="token punctuation">{</span>\n    type<span class="token operator">:</span> <span class="token constant">INTEGER</span><span class="token punctuation">,</span>\n    allowNull<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n    comment<span class="token operator">:</span> <span class="token string">&#39;被关注用户的 id&#39;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> UserRelation\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><p><em>src/db/model/index.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * <span class="token keyword">@description</span> 数据模型入口文件\n * <span class="token keyword">@author</span> yuanke\n */</span>\n\n<span class="token keyword">const</span> User <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./User&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> Blog <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./Blog&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> UserRelation <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./UserRelation&#39;</span><span class="token punctuation">)</span>\n\n<span class="token comment">// 多对一的关系，查询微博时顺带查出用户来</span>\nBlog<span class="token punctuation">.</span><span class="token function">belongsTo</span><span class="token punctuation">(</span>User<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  foreignKey<span class="token operator">:</span> <span class="token string">&#39;userId&#39;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token comment">// // 一对多的关系，查询用户时顺带查出微博来</span>\n<span class="token comment">// User.hasMany(Blog, {</span>\n<span class="token comment">//   foreignKey: &#39;userId&#39;</span>\n<span class="token comment">// })</span>\n\nUserRelation<span class="token punctuation">.</span><span class="token function">belongsTo</span><span class="token punctuation">(</span>User<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  foreignKey<span class="token operator">:</span> <span class="token string">&#39;followedId&#39;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\nUser<span class="token punctuation">.</span><span class="token function">hasMany</span><span class="token punctuation">(</span>UserRelation<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  foreignKey<span class="token operator">:</span> <span class="token string">&#39;userId&#39;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  User<span class="token punctuation">,</span>\n  Blog<span class="token punctuation">,</span>\n  UserRelation\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><br><h3 id="_11-2-开发粉丝列表" tabindex="-1"><a class="header-anchor" href="#_11-2-开发粉丝列表" aria-hidden="true">#</a> 11.2 开发粉丝列表</h3><p><em>src/views/widgets/fans.ejs</em>：</p><div class="language-ejs ext-ejs line-numbers-mode"><pre class="language-ejs"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>user-list right-item<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>title bold<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>fa fa-users<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">&gt;</span></span>\n    粉丝（<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript"> count</span><span class="token delimiter punctuation">%&gt;</span></span>）\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>user-list clear-fix<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> userList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">user</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> </span><span class="token delimiter punctuation">%&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/profile/<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript"> user<span class="token punctuation">.</span>userName</span><span class="token delimiter punctuation">%&gt;</span></span><span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>user-item float-left<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript"> user<span class="token punctuation">.</span>picture</span><span class="token delimiter punctuation">%&gt;</span></span><span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript"> user<span class="token punctuation">.</span>nickName</span><span class="token delimiter punctuation">%&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>\n    <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">}</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p><em>src/routes/view/blog.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 主页微博</span>\nrouter<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/profile/:userName&#39;</span><span class="token punctuation">,</span> loginRedirect<span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 已登录用户的信息</span>\n  <span class="token keyword">const</span> myUserInfo <span class="token operator">=</span> ctx<span class="token punctuation">.</span>session<span class="token punctuation">.</span>userInfo\n  <span class="token keyword">const</span> myUserName <span class="token operator">=</span> myUserInfo<span class="token punctuation">.</span>userName\n\n  <span class="token keyword">let</span> curUserInfo\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> userName<span class="token operator">:</span> curUserName <span class="token punctuation">}</span> <span class="token operator">=</span> ctx<span class="token punctuation">.</span>params\n  <span class="token keyword">const</span> isMe <span class="token operator">=</span> myUserName <span class="token operator">===</span> curUserName\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>isMe<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 用户信息从 session 里面取</span>\n    curUserInfo <span class="token operator">=</span> myUserInfo\n  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> existResult <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">isExist</span><span class="token punctuation">(</span>curUserName<span class="token punctuation">)</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>existResult<span class="token punctuation">.</span>errno <span class="token operator">!==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span>\n    <span class="token punctuation">}</span>\n    <span class="token comment">// 用户信息从数据库里取</span>\n    curUserInfo <span class="token operator">=</span> existResult<span class="token punctuation">.</span>data\n  <span class="token punctuation">}</span>\n\n  <span class="token comment">// 获取微博第一页数据</span>\n  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getProfileBlogList</span><span class="token punctuation">(</span>curUserName<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> isEmpty<span class="token punctuation">,</span> blogList<span class="token punctuation">,</span> pageSize<span class="token punctuation">,</span> pageIndex<span class="token punctuation">,</span> count <span class="token punctuation">}</span> <span class="token operator">=</span> result<span class="token punctuation">.</span>data\n  \n  <span class="token comment">// 获取粉丝</span>\n  <span class="token keyword">const</span> fansResult <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getFans</span><span class="token punctuation">(</span>curUserInfo<span class="token punctuation">.</span>id<span class="token punctuation">)</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> fansCount<span class="token punctuation">,</span> fansList <span class="token punctuation">}</span> <span class="token operator">=</span> fansResult<span class="token punctuation">.</span>data\n\n  <span class="token keyword">await</span> ctx<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token string">&#39;profile&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    blogData<span class="token operator">:</span> <span class="token punctuation">{</span>\n      isEmpty<span class="token punctuation">,</span>\n      blogList<span class="token punctuation">,</span>\n      pageSize<span class="token punctuation">,</span>\n      pageIndex<span class="token punctuation">,</span>\n      count\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    userData<span class="token operator">:</span> <span class="token punctuation">{</span>\n      userInfo<span class="token operator">:</span> curUserInfo<span class="token punctuation">,</span>\n      isMe<span class="token punctuation">,</span>\n      fansData<span class="token operator">:</span> <span class="token punctuation">{</span>\n        count<span class="token operator">:</span> fansCount<span class="token punctuation">,</span>\n        list<span class="token operator">:</span> fansList\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br></div></div><p><em>src/controller/user-relation.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * <span class="token keyword">@description</span> 用户关系 controller\n * <span class="token keyword">@author</span> yuanke\n */</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> SuccessModel <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../model/ResModel&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> getUsersByFollower <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../service/user-relation&#39;</span><span class="token punctuation">)</span>\n\n<span class="token doc-comment comment">/**\n * 根据 userid 获取粉丝列表\n * <span class="token keyword">@params</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> userId 用户 id\n */</span>\n<span class="token keyword">const</span> <span class="token function-variable function">getFans</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">userId</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> count<span class="token punctuation">,</span> userList <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getUsersByFollower</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span>\n  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">SuccessModel</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    fansCount<span class="token operator">:</span> count<span class="token punctuation">,</span>\n    fansList<span class="token operator">:</span> userList\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  getFans\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><p><em>src/service/user-relation.js</em>：</p><blockquote><p>外键是粉丝 id。在 User 表中通过查主播 id 查出 UserRelation 表中的粉丝 id 及其相关 user 表中的信息</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * <span class="token keyword">@description</span> 用户关系 service\n * <span class="token keyword">@author</span> yuanke\n */</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> User<span class="token punctuation">,</span> UserRelation <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../db/model/index&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> formatUser <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./_format&#39;</span><span class="token punctuation">)</span>\n\n<span class="token doc-comment comment">/**\n * 获取关注该用户的用户列表，即该用户的粉丝\n * <span class="token keyword">@params</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> followerId 被关注人的 id\n */</span>\n<span class="token keyword">const</span> <span class="token function-variable function">getUsersByFollower</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">followerId</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> User<span class="token punctuation">.</span><span class="token function">findAndCountAll</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    attributes<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;userName&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;nickName&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;picture&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    order<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">[</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;desc&#39;</span><span class="token punctuation">]</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    include<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        model<span class="token operator">:</span> UserRelation<span class="token punctuation">,</span>\n        where<span class="token operator">:</span> <span class="token punctuation">{</span>\n          followerId\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token comment">// result.count 总数</span>\n  <span class="token comment">// result.rows 查询结果，数组</span>\n  <span class="token keyword">let</span> userList <span class="token operator">=</span> result<span class="token punctuation">.</span>rows<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">row</span> <span class="token operator">=&gt;</span> row<span class="token punctuation">.</span><span class="token function">toJSON</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n  <span class="token comment">// 格式化，加上默认图片</span>\n  userList <span class="token operator">=</span> <span class="token function">formatUser</span><span class="token punctuation">(</span>userList<span class="token punctuation">)</span>\n\n  <span class="token keyword">return</span> <span class="token punctuation">{</span>\n    count<span class="token operator">:</span> result<span class="token punctuation">.</span>count<span class="token punctuation">,</span>\n    userList\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  getUsersByFollower\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br></div></div><br><h3 id="_11-3-开发关注接口-判断开发状态" tabindex="-1"><a class="header-anchor" href="#_11-3-开发关注接口-判断开发状态" aria-hidden="true">#</a> 11.3 开发关注接口 - 判断开发状态</h3><p><em>src/routes/views/blog.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 我是否关注了此人？</span>\n  <span class="token keyword">const</span> amIFollowed <span class="token operator">=</span> fansList<span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> item<span class="token punctuation">.</span>userName <span class="token operator">===</span> myUserName\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><blockquote><p>然后再把 <code>amIFollowed</code> 放到 <code>userData</code> 里</p></blockquote><br><h3 id="_11-4-关注开发接口-完成" tabindex="-1"><a class="header-anchor" href="#_11-4-关注开发接口-完成" aria-hidden="true">#</a> 11.4 关注开发接口 - 完成</h3><p><em>src/routes/api/blog-profile.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 关注</span>\nrouter<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/follow&#39;</span><span class="token punctuation">,</span> loginCheck<span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> id<span class="token operator">:</span> myUserId <span class="token punctuation">}</span> <span class="token operator">=</span> ctx<span class="token punctuation">.</span>session<span class="token punctuation">.</span>userInfo\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> userId<span class="token operator">:</span> curUserId <span class="token punctuation">}</span> <span class="token operator">=</span> ctx<span class="token punctuation">.</span>request<span class="token punctuation">.</span>body\n  ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">follow</span><span class="token punctuation">(</span>myUserId<span class="token punctuation">,</span> curUserId<span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><em>src/controller/user-relation.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * 关注\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">myUserId</span> 当前登录的用户 id\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">curUserId</span> 要被关注的用户 id\n */</span>\n<span class="token keyword">const</span> <span class="token function-variable function">follow</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">myUserId<span class="token punctuation">,</span> curUserId</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">try</span> <span class="token punctuation">{</span>\n    <span class="token keyword">await</span> <span class="token function">addFollower</span><span class="token punctuation">(</span>myUserId<span class="token punctuation">,</span> curUserId<span class="token punctuation">)</span>\n    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">SuccessModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ErrorModel</span><span class="token punctuation">(</span>addFollowerFailInfo<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p><em>src/service/user-relation.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * 关注\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">myUserId</span> 当前登录的用户 id\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">curUserId</span> 要被关注的用户 id\n */</span>\n<span class="token keyword">const</span> <span class="token function-variable function">follow</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">myUserId<span class="token punctuation">,</span> curUserId</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">try</span> <span class="token punctuation">{</span>\n    <span class="token keyword">await</span> <span class="token function">addFollower</span><span class="token punctuation">(</span>myUserId<span class="token punctuation">,</span> curUserId<span class="token punctuation">)</span>\n    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">SuccessModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ErrorModel</span><span class="token punctuation">(</span>addFollowerFailInfo<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><blockquote><p>unFollow 的逻辑一致</p></blockquote><br><h3 id="_11-5-开发关注人列表" tabindex="-1"><a class="header-anchor" href="#_11-5-开发关注人列表" aria-hidden="true">#</a> 11.5 开发关注人列表</h3><p><em>src/routes/view/blog.js</em>：</p><blockquote><p>在 <code>/profile/:userName</code> 路由的处理函数下写的</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 获取关注人列表</span>\n<span class="token keyword">const</span> followersResult <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getFollowers</span><span class="token punctuation">(</span>curUserInfo<span class="token punctuation">.</span>id<span class="token punctuation">)</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> count<span class="token operator">:</span> followersCount<span class="token punctuation">,</span> followersList <span class="token punctuation">}</span> <span class="token operator">=</span> followersResult<span class="token punctuation">.</span>data\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><em>src/controller/user-relation.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * 获取关注人列表\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">userId</span> userId\n */</span>\n<span class="token keyword">const</span> <span class="token function-variable function">getFollowers</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">userId</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> count<span class="token punctuation">,</span> userList <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getFollowersByUser</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span>\n  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">SuccessModel</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    count<span class="token punctuation">,</span>\n    followersList<span class="token operator">:</span> userList\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p><em>src/service/user-relation.js</em>：</p><blockquote><p>外键为主播 id。在 userRelation 表中通过粉丝 id 查询主播 id，连带着主播 id 名下的 user 表中的内容</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * 获取关注人列表\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">userId</span> userId\n */</span>\n<span class="token keyword">const</span> <span class="token function-variable function">getFollowersByUser</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">userId</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> UserRelation<span class="token punctuation">.</span><span class="token function">findAndCountAll</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    order<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">[</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;desc&#39;</span><span class="token punctuation">]</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    include<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        model<span class="token operator">:</span> User<span class="token punctuation">,</span>\n        attributes<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;userName&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;nickName&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;picture&#39;</span><span class="token punctuation">]</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    where<span class="token operator">:</span> <span class="token punctuation">{</span>\n      userId\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token comment">// result.count 总数</span>\n  <span class="token comment">// result.rows 查询结果，数组</span>\n  <span class="token keyword">let</span> userList <span class="token operator">=</span> result<span class="token punctuation">.</span>rows<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">row</span> <span class="token operator">=&gt;</span> row<span class="token punctuation">.</span><span class="token function">toJSON</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n  userList <span class="token operator">=</span> userList<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> user <span class="token operator">=</span> item<span class="token punctuation">.</span>user\n    user <span class="token operator">=</span> <span class="token function">formatUser</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span>\n    <span class="token keyword">return</span> user\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n  <span class="token keyword">return</span> <span class="token punctuation">{</span>\n    count<span class="token operator">:</span> result<span class="token punctuation">.</span>count<span class="token punctuation">,</span>\n    userList\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><br><h3 id="_11-6-单元测试" tabindex="-1"><a class="header-anchor" href="#_11-6-单元测试" aria-hidden="true">#</a> 11.6 单元测试</h3><p><em>test/user/relation.test.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * <span class="token keyword">@description</span> 用户关系 单元测试\n * <span class="token keyword">@author</span> yuanke\n */</span>\n\n<span class="token keyword">const</span> server <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../server&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> getFans<span class="token punctuation">,</span> getFollowers <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../../src/controller/user-relation&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span>\n  <span class="token constant">Z_ID</span><span class="token punctuation">,</span>\n  <span class="token constant">Z_COOKIE</span><span class="token punctuation">,</span>\n  <span class="token constant">Z_USER_NAME</span><span class="token punctuation">,</span>\n  <span class="token constant">L_ID</span><span class="token punctuation">,</span>\n  <span class="token constant">L_USER_NAME</span>\n<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../testUserInfo&#39;</span><span class="token punctuation">)</span>\n\n<span class="token comment">// 先让张三关注李四(为了避免现在张三关注了李四) </span>\n<span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;无论如何,先取消关注&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> server\n    <span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/api/profile/unFollow&#39;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">{</span> userId<span class="token operator">:</span> <span class="token constant">L_ID</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;Cookie&#39;</span><span class="token punctuation">,</span> <span class="token constant">Z_COOKIE</span><span class="token punctuation">)</span>\n  <span class="token function">expect</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token comment">// 添加关注</span>\n<span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;张三关注李四,应该成功&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> server\n    <span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/api/profile/follow&#39;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">{</span> userId<span class="token operator">:</span> <span class="token constant">L_ID</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;Cookie&#39;</span><span class="token punctuation">,</span> <span class="token constant">Z_COOKIE</span><span class="token punctuation">)</span>\n  <span class="token function">expect</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>body<span class="token punctuation">.</span>errno<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token comment">// 获取粉丝</span>\n<span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;获取李四的粉丝,应该有张三&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getFans</span><span class="token punctuation">(</span><span class="token constant">L_ID</span><span class="token punctuation">)</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> fansCount<span class="token punctuation">,</span> fansList <span class="token punctuation">}</span> <span class="token operator">=</span> res<span class="token punctuation">.</span>data\n  <span class="token keyword">const</span> hasUserName <span class="token operator">=</span> fansList<span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span><span class="token parameter">fanInfo</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> fanInfo<span class="token punctuation">.</span>userName <span class="token operator">===</span> <span class="token constant">Z_USER_NAME</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token function">expect</span><span class="token punctuation">(</span>fansCount <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>\n  <span class="token function">expect</span><span class="token punctuation">(</span>hasUserName<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token comment">// 获取关注人</span>\n<span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;获取张三的关注人,应该有李四&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getFollowers</span><span class="token punctuation">(</span><span class="token constant">Z_ID</span><span class="token punctuation">)</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> count<span class="token punctuation">,</span> followersList <span class="token punctuation">}</span> <span class="token operator">=</span> result<span class="token punctuation">.</span>data\n  <span class="token keyword">const</span> hasUserName <span class="token operator">=</span> followersList<span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span><span class="token parameter">followerInfo</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> followerInfo<span class="token punctuation">.</span>userName <span class="token operator">===</span> <span class="token constant">L_USER_NAME</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token function">expect</span><span class="token punctuation">(</span>count <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>\n  <span class="token function">expect</span><span class="token punctuation">(</span>hasUserName<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token comment">// 取消关注</span>\n<span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;张三取消关注李四,应该成功&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> server\n    <span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/api/profile/unFollow&#39;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">{</span> userId<span class="token operator">:</span> <span class="token constant">L_ID</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;Cookie&#39;</span><span class="token punctuation">,</span> <span class="token constant">Z_COOKIE</span><span class="token punctuation">)</span>\n  <span class="token function">expect</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>body<span class="token punctuation">.</span>errno<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br></div></div><br><h2 id="_12-首页" tabindex="-1"><a class="header-anchor" href="#_12-首页" aria-hidden="true">#</a> 12.首页</h2><h3 id="_12-1-数据建模" tabindex="-1"><a class="header-anchor" href="#_12-1-数据建模" aria-hidden="true">#</a> 12.1 数据建模</h3><p><em>src/db/model/index.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 将 blogs 表的 userId 与 userRelations 表的 followerId 关联起来</span>\n<span class="token comment">// 这样就可以通过 userRelations 的 userid 查询到 followerId 对应的 blogs 表中的数据了</span>\n<span class="token comment">// 数据库看不到这个外键映射,但是实际上已经成功了</span>\nBlog<span class="token punctuation">.</span><span class="token function">belongsTo</span><span class="token punctuation">(</span>UserRelation<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  foreignKey<span class="token operator">:</span> <span class="token string">&#39;userId&#39;</span><span class="token punctuation">,</span>\n  targetKey<span class="token operator">:</span> <span class="token string">&#39;followerId&#39;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><br><h3 id="_12-2-自己关注自己" tabindex="-1"><a class="header-anchor" href="#_12-2-自己关注自己" aria-hidden="true">#</a> 12.2 &quot;自己关注自己&quot;</h3><p><em>src/service/user.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * 创建用户\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">userName</span> 用户名\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">password</span> 密码\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">gender</span> 性别\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">nickName</span> 昵称\n */</span>\n<span class="token keyword">const</span> <span class="token function-variable function">createUser</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> userName<span class="token punctuation">,</span> password<span class="token punctuation">,</span> gender <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">,</span> nickName <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> User<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    userName<span class="token punctuation">,</span>\n    password<span class="token punctuation">,</span>\n    nickName<span class="token operator">:</span> nickName <span class="token operator">?</span> nickName <span class="token operator">:</span> userName<span class="token punctuation">,</span>\n    gender\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token keyword">const</span> data <span class="token operator">=</span> result<span class="token punctuation">.</span><span class="token function">toJSON</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n  <span class="token comment">// 自己关注自己(为了方便首页获取数据)</span>\n  <span class="token function">addFollower</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>id<span class="token punctuation">,</span> data<span class="token punctuation">.</span>id<span class="token punctuation">)</span>\n\n  <span class="token keyword">return</span> data\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p><em>src/service/user-relation.js</em>：</p><blockquote><p>清除自己关注自己的影响</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> Op <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;sequelize&#39;</span><span class="token punctuation">)</span>\n\n<span class="token doc-comment comment">/**\n * 获取关注该用户的用户列表，即该用户的粉丝\n * <span class="token keyword">@params</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> followerId 被关注人的 id\n */</span>\n<span class="token keyword">const</span> <span class="token function-variable function">getUsersByFollower</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">followerId</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> User<span class="token punctuation">.</span><span class="token function">findAndCountAll</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    attributes<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;userName&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;nickName&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;picture&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    order<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">[</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;desc&#39;</span><span class="token punctuation">]</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    include<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        model<span class="token operator">:</span> UserRelation<span class="token punctuation">,</span>\n        where<span class="token operator">:</span> <span class="token punctuation">{</span>\n          followerId<span class="token punctuation">,</span>\n          userId<span class="token operator">:</span> <span class="token punctuation">{</span>\n            <span class="token comment">// Op:option  ne:not equal</span>\n            <span class="token punctuation">[</span>Op<span class="token punctuation">.</span>ne<span class="token punctuation">]</span><span class="token operator">:</span> followerId\n          <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token comment">// ...</span>\n  <span class="token comment">// ...</span>\n  <span class="token doc-comment comment">/**\n * 获取关注人列表\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">userId</span> userId\n */</span>\n<span class="token keyword">const</span> <span class="token function-variable function">getFollowersByUser</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">userId</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> UserRelation<span class="token punctuation">.</span><span class="token function">findAndCountAll</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    order<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">[</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;desc&#39;</span><span class="token punctuation">]</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    include<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        model<span class="token operator">:</span> User<span class="token punctuation">,</span>\n        attributes<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;userName&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;nickName&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;picture&#39;</span><span class="token punctuation">]</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    where<span class="token operator">:</span> <span class="token punctuation">{</span>\n      userId<span class="token punctuation">,</span>\n      followerId<span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token punctuation">[</span>Op<span class="token punctuation">.</span>ne<span class="token punctuation">]</span><span class="token operator">:</span> userId\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token comment">// ...</span>\n  <span class="token comment">// ...</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br></div></div><br><h3 id="_12-3-主页渲染-三表查询" tabindex="-1"><a class="header-anchor" href="#_12-3-主页渲染-三表查询" aria-hidden="true">#</a> 12.3 主页渲染 - 三表查询</h3><p><em>src/routes/view/blog.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 首页</span>\nrouter<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span> loginRedirect<span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> userInfo <span class="token operator">=</span> ctx<span class="token punctuation">.</span>session<span class="token punctuation">.</span>userInfo\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> id<span class="token operator">:</span> userId <span class="token punctuation">}</span> <span class="token operator">=</span> userInfo\n\n  <span class="token comment">// 获取第一页数据</span>\n  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getHomeBlogList</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> isEmpty<span class="token punctuation">,</span> blogList<span class="token punctuation">,</span> pageSize<span class="token punctuation">,</span> pageIndex<span class="token punctuation">,</span> count <span class="token punctuation">}</span> <span class="token operator">=</span> result<span class="token punctuation">.</span>data\n\n  <span class="token comment">// 获取粉丝</span>\n  <span class="token keyword">const</span> fansResult <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getFans</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> fansCount<span class="token punctuation">,</span> fansList <span class="token punctuation">}</span> <span class="token operator">=</span> fansResult<span class="token punctuation">.</span>data\n\n  <span class="token comment">// 获取关注人列表</span>\n  <span class="token keyword">const</span> followersResult <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getFollowers</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> count<span class="token operator">:</span> followersCount<span class="token punctuation">,</span> followersList <span class="token punctuation">}</span> <span class="token operator">=</span> followersResult<span class="token punctuation">.</span>data\n\n  <span class="token keyword">await</span> ctx<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token string">&#39;index&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    userData<span class="token operator">:</span> <span class="token punctuation">{</span>\n      userInfo<span class="token punctuation">,</span>\n      fansData<span class="token operator">:</span> <span class="token punctuation">{</span>\n        count<span class="token operator">:</span> fansCount<span class="token punctuation">,</span>\n        list<span class="token operator">:</span> fansList\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      followersData<span class="token operator">:</span> <span class="token punctuation">{</span>\n        count<span class="token operator">:</span> followersCount<span class="token punctuation">,</span>\n        list<span class="token operator">:</span> followersList\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    blogData<span class="token operator">:</span> <span class="token punctuation">{</span> isEmpty<span class="token punctuation">,</span> blogList<span class="token punctuation">,</span> pageSize<span class="token punctuation">,</span> pageIndex<span class="token punctuation">,</span> count <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div><p><em>src/controller/blog-home.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * 获取首页微博列表\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">userId</span> userId\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">pageIndex</span> page index\n */</span>\n<span class="token keyword">const</span> <span class="token function-variable function">getHomeBlogList</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">userId<span class="token punctuation">,</span> pageIndex <span class="token operator">=</span> <span class="token number">0</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getFollowersBlogList</span><span class="token punctuation">(</span><span class="token punctuation">{</span> userId<span class="token punctuation">,</span> pageIndex<span class="token punctuation">,</span> pageSize<span class="token operator">:</span> <span class="token constant">PAGE_SIZE</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> count<span class="token punctuation">,</span> blogList <span class="token punctuation">}</span> <span class="token operator">=</span> result\n  <span class="token comment">// 返回数据</span>\n  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">SuccessModel</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    isEmpty<span class="token operator">:</span> blogList<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">,</span>\n    blogList<span class="token punctuation">,</span>\n    pageSize<span class="token operator">:</span> <span class="token constant">PAGE_SIZE</span><span class="token punctuation">,</span>\n    pageIndex<span class="token punctuation">,</span>\n    count\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p><em>src/service/blog.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * 获取关注者的微博列表(首页)\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Object<span class="token punctuation">}</span></span> <span class="token parameter">param0</span> 查询条件 <span class="token punctuation">{</span> userId, pageIndex = 0, pageSize = 10 <span class="token punctuation">}</span>\n */</span>\n<span class="token keyword">const</span> <span class="token function-variable function">getFollowersBlogList</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> userId<span class="token punctuation">,</span> pageIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> pageSize <span class="token operator">=</span> <span class="token number">10</span> <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> Blog<span class="token punctuation">.</span><span class="token function">findAndCountAll</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    limit<span class="token operator">:</span> pageSize<span class="token punctuation">,</span> <span class="token comment">// 每页多少条</span>\n    offset<span class="token operator">:</span> pageSize <span class="token operator">*</span> pageIndex<span class="token punctuation">,</span> <span class="token comment">// 跳过多少条</span>\n    order<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">[</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;desc&#39;</span><span class="token punctuation">]</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    include<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        model<span class="token operator">:</span> User<span class="token punctuation">,</span>\n        attributes<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;userName&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;nickName&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;picture&#39;</span><span class="token punctuation">]</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        model<span class="token operator">:</span> UserRelation<span class="token punctuation">,</span>\n        attributes<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;userId&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;followerId&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        where<span class="token operator">:</span> <span class="token punctuation">{</span> userId <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n  <span class="token comment">// 格式化数据</span>\n  <span class="token keyword">let</span> blogList <span class="token operator">=</span> result<span class="token punctuation">.</span>rows<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">row</span> <span class="token operator">=&gt;</span> row<span class="token punctuation">.</span><span class="token function">toJSON</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n  blogList <span class="token operator">=</span> <span class="token function">formatBlog</span><span class="token punctuation">(</span>blogList<span class="token punctuation">)</span>\n  blogList <span class="token operator">=</span> blogList<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">blogItem</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    blogItem<span class="token punctuation">.</span>user <span class="token operator">=</span> <span class="token function">formatUser</span><span class="token punctuation">(</span>blogItem<span class="token punctuation">.</span>user<span class="token punctuation">)</span>\n    <span class="token keyword">return</span> blogItem\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n  <span class="token keyword">return</span> <span class="token punctuation">{</span>\n    count<span class="token operator">:</span> result<span class="token punctuation">.</span>count<span class="token punctuation">,</span>\n    blogList\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br></div></div><br><h3 id="_12-4-加载更多" tabindex="-1"><a class="header-anchor" href="#_12-4-加载更多" aria-hidden="true">#</a> 12.4 加载更多</h3><p><em>src/routes/api/blog-home.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 加载更多</span>\nrouter<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/loadMore/:pageIndex&#39;</span><span class="token punctuation">,</span> loginCheck<span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">let</span> <span class="token punctuation">{</span> pageIndex <span class="token punctuation">}</span> <span class="token operator">=</span> ctx<span class="token punctuation">.</span>params\n  pageIndex <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>pageIndex<span class="token punctuation">)</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> id<span class="token operator">:</span> userId <span class="token punctuation">}</span> <span class="token operator">=</span> ctx<span class="token punctuation">.</span>session<span class="token punctuation">.</span>userInfo\n  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getHomeBlogList</span><span class="token punctuation">(</span>userId<span class="token punctuation">,</span> pageIndex<span class="token punctuation">)</span>\n  <span class="token comment">// 渲染为 html 字符串</span>\n  result<span class="token punctuation">.</span>data<span class="token punctuation">.</span>blogListTpl <span class="token operator">=</span> <span class="token function">getBlogListStr</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>data<span class="token punctuation">.</span>blogList<span class="token punctuation">)</span>\n  ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> result\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><br><h3 id="_12-5-单元测试" tabindex="-1"><a class="header-anchor" href="#_12-5-单元测试" aria-hidden="true">#</a> 12.5 单元测试</h3><p><em>test/blog/home.test.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 加载第一页数据</span>\n<span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;首页,加载第一页数据&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> server\n    <span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/api/blog/loadMore/0&#39;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;Cookie&#39;</span><span class="token punctuation">,</span> <span class="token constant">Z_COOKIE</span><span class="token punctuation">)</span>\n  <span class="token function">expect</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>body<span class="token punctuation">.</span>errno<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>\n  <span class="token keyword">const</span> data <span class="token operator">=</span> res<span class="token punctuation">.</span>body<span class="token punctuation">.</span>data\n  <span class="token function">expect</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveProperty</span><span class="token punctuation">(</span><span class="token string">&#39;isEmpty&#39;</span><span class="token punctuation">)</span>\n  <span class="token function">expect</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveProperty</span><span class="token punctuation">(</span><span class="token string">&#39;blogList&#39;</span><span class="token punctuation">)</span>\n  <span class="token function">expect</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveProperty</span><span class="token punctuation">(</span><span class="token string">&#39;pageSize&#39;</span><span class="token punctuation">)</span>\n  <span class="token function">expect</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveProperty</span><span class="token punctuation">(</span><span class="token string">&#39;pageIndex&#39;</span><span class="token punctuation">)</span>\n  <span class="token function">expect</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveProperty</span><span class="token punctuation">(</span><span class="token string">&#39;count&#39;</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><br><h2 id="_13-回复-功能" tabindex="-1"><a class="header-anchor" href="#_13-回复-功能" aria-hidden="true">#</a> 13.回复 &amp; @功能</h2><h3 id="_13-1-开始和显示" tabindex="-1"><a class="header-anchor" href="#_13-1-开始和显示" aria-hidden="true">#</a> 13.1 开始和显示 @</h3><p><em>src/routes/api/user.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 获取 at 列表,即关注人列表</span>\nrouter<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/getAtList&#39;</span><span class="token punctuation">,</span> loginCheck<span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> id<span class="token operator">:</span> userId <span class="token punctuation">}</span> <span class="token operator">=</span> ctx<span class="token punctuation">.</span>session<span class="token punctuation">.</span>userInfo\n  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getFollowers</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> followersList <span class="token punctuation">}</span> <span class="token operator">=</span> result<span class="token punctuation">.</span>data\n  <span class="token keyword">const</span> list <span class="token operator">=</span> followersList<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">user</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>user<span class="token punctuation">.</span>nickName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> - </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>user<span class="token punctuation">.</span>userName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token comment">// 格式如：[&#39;张三 - zhangsan&#39;, &#39;李四 - lisi&#39;, &#39;昵称 - userName&#39;]</span>\n  ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> list\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><br><h3 id="_13-2-at-用户转为链接格式" tabindex="-1"><a class="header-anchor" href="#_13-2-at-用户转为链接格式" aria-hidden="true">#</a> 13.2 at 用户转为链接格式</h3><p><em>src/service/_format.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * 格式化微博内容\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Object<span class="token punctuation">}</span></span> <span class="token parameter">obj</span> 微博数据对象\n */</span>\n<span class="token keyword">const</span> <span class="token function-variable function">_formatContent</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  obj<span class="token punctuation">.</span>contentFormat <span class="token operator">=</span> obj<span class="token punctuation">.</span>content\n\n  <span class="token comment">// 格式化 @: &#39;哈喽 @张三 - zhangsan 你好&#39;</span>\n  <span class="token comment">// &#39;哈喽 &lt;a href=&quot;/profile/zhangsan&quot;&gt;张三&lt;/a&gt; 你好&#39;</span>\n  obj<span class="token punctuation">.</span>contentFormat <span class="token operator">=</span> obj<span class="token punctuation">.</span>contentFormat<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>\n    <span class="token constant">REG_FOR_AT_WHO</span><span class="token punctuation">,</span>\n    <span class="token punctuation">(</span><span class="token parameter">matchStr<span class="token punctuation">,</span> nickName<span class="token punctuation">,</span> userName</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;a href=&quot;/profile/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>userName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;&gt;@</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>nickName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;/a&gt;</span><span class="token template-punctuation string">`</span></span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">)</span>\n\n  <span class="token keyword">return</span> obj\n<span class="token punctuation">}</span>\n\n<span class="token doc-comment comment">/**\n * 格式化微博信息\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Array<span class="token operator">|</span>Object<span class="token punctuation">}</span></span> <span class="token parameter">list</span> 微博列表或者单个微博对象\n */</span>\n<span class="token keyword">const</span> <span class="token function-variable function">formatBlog</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">list</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>list <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span> list\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>list <span class="token keyword">instanceof</span> <span class="token class-name">Array</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 数组</span>\n    <span class="token keyword">return</span> list<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>_formatDBTime<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>_formatContent<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n  <span class="token comment">// 对象</span>\n  <span class="token keyword">let</span> result <span class="token operator">=</span> list\n  result <span class="token operator">=</span>  <span class="token function">_formatDBTime</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>\n  result <span class="token operator">=</span> <span class="token function">_formatContent</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>\n  <span class="token keyword">return</span> result\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br></div></div><br><h3 id="_13-3-实现回复功能" tabindex="-1"><a class="header-anchor" href="#_13-3-实现回复功能" aria-hidden="true">#</a> 13.3 实现回复功能</h3><p><em>src/views/widgets/blog-list.ejs</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 设置焦点</span>\n  <span class="token keyword">function</span> <span class="token function">setCursor</span><span class="token punctuation">(</span><span class="token parameter">el<span class="token punctuation">,</span> st<span class="token punctuation">,</span> end</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>el<span class="token punctuation">.</span>setSelectionRange<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      el<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n      el<span class="token punctuation">.</span><span class="token function">setSelectionRange</span><span class="token punctuation">(</span>st<span class="token punctuation">,</span> end<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>el<span class="token punctuation">.</span>createTextRange<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">var</span> range <span class="token operator">=</span> el<span class="token punctuation">.</span><span class="token function">createTextRange</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n      range<span class="token punctuation">.</span><span class="token function">collapse</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>\n      range<span class="token punctuation">.</span><span class="token function">moveEnd</span><span class="token punctuation">(</span><span class="token string">&#39;character&#39;</span><span class="token punctuation">,</span>end<span class="token punctuation">)</span>\n      range<span class="token punctuation">.</span><span class="token function">moveStart</span><span class="token punctuation">(</span><span class="token string">&#39;character&#39;</span><span class="token punctuation">,</span>st<span class="token punctuation">)</span>\n      range<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token comment">// 回复</span>\n  <span class="token keyword">var</span> $textContent <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#text-content&#39;</span><span class="token punctuation">)</span>\n  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;.blog-list-reply&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    e<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token keyword">var</span> $target <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">)</span>\n\n    <span class="token comment">// 获取内容和用户</span>\n    <span class="token keyword">var</span> content <span class="token operator">=</span> $target<span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&#39;data-content&#39;</span><span class="token punctuation">)</span>\n    <span class="token keyword">var</span> userName <span class="token operator">=</span> $target<span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&#39;data-userName&#39;</span><span class="token punctuation">)</span>\n    <span class="token keyword">var</span> nickName <span class="token operator">=</span> $target<span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&#39;data-nickName&#39;</span><span class="token punctuation">)</span>\n\n    <span class="token comment">// 设置内容并获取焦点</span>\n    $textContent<span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token string">&#39; // @&#39;</span> <span class="token operator">+</span> nickName <span class="token operator">+</span> <span class="token string">&#39; - &#39;</span> <span class="token operator">+</span> userName <span class="token operator">+</span> <span class="token string">&#39; : &#39;</span> <span class="token operator">+</span> content<span class="token punctuation">)</span>\n    <span class="token function">setCursor</span><span class="token punctuation">(</span>$textContent<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><br><h3 id="_13-4-单元测试" tabindex="-1"><a class="header-anchor" href="#_13-4-单元测试" aria-hidden="true">#</a> 13.4 单元测试</h3><p><em>test/user/relation.test.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 获取 at 列表</span>\n<span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;获取张三的 at 列表,应该有李四&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> server\n    <span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/api/user/getAtList&#39;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;Cookie&#39;</span><span class="token punctuation">,</span> <span class="token constant">Z_COOKIE</span><span class="token punctuation">)</span>\n  <span class="token keyword">const</span> atList <span class="token operator">=</span> res<span class="token punctuation">.</span>body\n  <span class="token keyword">const</span> hasUserName <span class="token operator">=</span> atList<span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token comment">// &#39;昵称 - userName&#39;</span>\n    <span class="token keyword">return</span> item<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">- </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token constant">L_USER_NAME</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token function">expect</span><span class="token punctuation">(</span>hasUserName<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><br><h2 id="_14-at-提到自己和已读等" tabindex="-1"><a class="header-anchor" href="#_14-at-提到自己和已读等" aria-hidden="true">#</a> 14.at 提到自己和已读等</h2><h3 id="_14-1-数据建模" tabindex="-1"><a class="header-anchor" href="#_14-1-数据建模" aria-hidden="true">#</a> 14.1 数据建模</h3><p><em>src/db/model/AtRelation.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * <span class="token keyword">@description</span> 微博 @ 用户的关系,数据模型\n * <span class="token keyword">@author</span> yuanke\n */</span>\n\n<span class="token keyword">const</span> seq <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../seq&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token constant">INTEGER</span><span class="token punctuation">,</span> <span class="token constant">BOOLEAN</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../types&#39;</span><span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> AtRelation <span class="token operator">=</span> seq<span class="token punctuation">.</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token string">&#39;atRelation&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  userId<span class="token operator">:</span> <span class="token punctuation">{</span>\n    type<span class="token operator">:</span> <span class="token constant">INTEGER</span><span class="token punctuation">,</span>\n    allowNull<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n    comment<span class="token operator">:</span> <span class="token string">&#39;用户 id&#39;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  blogId<span class="token operator">:</span> <span class="token punctuation">{</span>\n    type<span class="token operator">:</span> <span class="token constant">INTEGER</span><span class="token punctuation">,</span>\n    allowNull<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n    comment<span class="token operator">:</span> <span class="token string">&#39;微博 id&#39;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  isRead<span class="token operator">:</span> <span class="token punctuation">{</span>\n    type<span class="token operator">:</span> <span class="token constant">BOOLEAN</span><span class="token punctuation">,</span>\n    allowNull<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n    defaultValue<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 默认未读</span>\n    comment<span class="token operator">:</span> <span class="token string">&#39;是否已读&#39;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> AtRelation\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><p><em>src/db/model/index.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Blog<span class="token punctuation">.</span><span class="token function">hasMany</span><span class="token punctuation">(</span>AtRelation<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  foreignKey<span class="token operator">:</span> <span class="token string">&#39;blogId&#39;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><br><h3 id="_14-2-分析-at-关系并存储" tabindex="-1"><a class="header-anchor" href="#_14-2-分析-at-关系并存储" aria-hidden="true">#</a> 14.2 分析 at 关系并存储</h3><p><em>src/controller/blog-home.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * 创建微博\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Object<span class="token punctuation">}</span></span> <span class="token parameter">param0</span> 创建微博所需的数据 <span class="token punctuation">{</span> userId, content, image <span class="token punctuation">}</span>\n */</span>\n<span class="token keyword">const</span> <span class="token function-variable function">create</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> userId<span class="token punctuation">,</span> content<span class="token punctuation">,</span> image <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 分析并收集 content 中的 @ 用户</span>\n  <span class="token comment">// content 格式如 &#39;哈喽 @李四 - lisi 你好 @王五 - wangwu&#39;</span>\n  <span class="token keyword">const</span> atUserNameList <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>\n  content <span class="token operator">=</span> content<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>\n    <span class="token constant">REG_FOR_AT_WHO</span><span class="token punctuation">,</span>\n    <span class="token punctuation">(</span><span class="token parameter">matchStr<span class="token punctuation">,</span> nickName<span class="token punctuation">,</span> userName</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      <span class="token comment">// 目的不是 replace 而是获取 userName</span>\n      atUserNameList<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>userName<span class="token punctuation">)</span>\n      <span class="token keyword">return</span> matchStr <span class="token comment">// 替换不生效,预期</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">)</span>\n\n  <span class="token comment">// 根据 @ 用户名查询用户信息</span>\n  <span class="token keyword">const</span> atUserList <span class="token operator">=</span> <span class="token keyword">await</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>\n    atUserNameList<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">userName</span> <span class="token operator">=&gt;</span> <span class="token function">getUserInfo</span><span class="token punctuation">(</span>userName<span class="token punctuation">)</span><span class="token punctuation">)</span>\n  <span class="token punctuation">)</span>\n  <span class="token comment">// 根据用户信息,获取用户 id</span>\n  <span class="token keyword">const</span> atUserIdList <span class="token operator">=</span> atUserList<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">user</span> <span class="token operator">=&gt;</span> user<span class="token punctuation">.</span>id<span class="token punctuation">)</span>\n\n  <span class="token keyword">try</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 创建微博</span>\n    <span class="token keyword">const</span> blog <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">createBlog</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      userId<span class="token punctuation">,</span>\n      content<span class="token operator">:</span> <span class="token function">xss</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">,</span>\n      image\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n    <span class="token comment">// 创建 @ 关系</span>\n    <span class="token comment">// blog.id</span>\n    <span class="token keyword">await</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>atUserIdList<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">userId</span> <span class="token operator">=&gt;</span> <span class="token function">createAtRelation</span><span class="token punctuation">(</span>blog<span class="token punctuation">.</span>id<span class="token punctuation">,</span> userId<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n\n    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">SuccessModel</span><span class="token punctuation">(</span>blog<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>ex<span class="token punctuation">.</span>message<span class="token punctuation">,</span> ex<span class="token punctuation">.</span>stack<span class="token punctuation">)</span>\n    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ErrorModel</span><span class="token punctuation">(</span>createBlogFailInfo<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br></div></div><p><em>src/service/at-relation.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * <span class="token keyword">@description</span> 微博 @ 用户关系 service\n * <span class="token keyword">@author</span> yuanke\n */</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> AtRelation <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../db/model/index&#39;</span><span class="token punctuation">)</span>\n\n<span class="token doc-comment comment">/**\n * 创建微博 @ 用户的关系\n * <span class="token keyword">@params</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> blogId 微博 id\n * <span class="token keyword">@params</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> userId 用户 id\n */</span>\n<span class="token keyword">const</span> <span class="token function-variable function">createAtRelation</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">blogId<span class="token punctuation">,</span> userId</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> AtRelation<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    blogId<span class="token punctuation">,</span>\n    userId\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token keyword">return</span> result<span class="token punctuation">.</span><span class="token function">toJSON</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  createAtRelation\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><br><h3 id="_14-3-显示-at-数量" tabindex="-1"><a class="header-anchor" href="#_14-3-显示-at-数量" aria-hidden="true">#</a> 14.3 显示 at 数量</h3><blockquote><p>route 层和 controller 层就不写了</p></blockquote><p><em>src/service/at-relation.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * 获取 @ 用户的微博数量(未读的)\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">userId</span> userId\n */</span>\n<span class="token keyword">const</span> <span class="token function-variable function">getAtRelationCount</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">userId</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> AtRelation<span class="token punctuation">.</span><span class="token function">findAndCountAll</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    where<span class="token operator">:</span> <span class="token punctuation">{</span>\n      userId<span class="token punctuation">,</span>\n      isRead<span class="token operator">:</span> <span class="token boolean">false</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token keyword">return</span> result<span class="token punctuation">.</span>count\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><br><h3 id="_14-4-开发-at-页面" tabindex="-1"><a class="header-anchor" href="#_14-4-开发-at-页面" aria-hidden="true">#</a> 14.4 开发 at 页面</h3><p><em>src/service/at-relation.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * 获取 @ 用户的微博列表 <span class="token punctuation">{</span> userId, pageIndex, pageSize = 10 <span class="token punctuation">}</span>\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Object<span class="token punctuation">}</span></span> <span class="token parameter">param0</span> 查询条件\n */</span>\n<span class="token keyword">const</span> <span class="token function-variable function">getAtUserBlogList</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> userId<span class="token punctuation">,</span> pageIndex<span class="token punctuation">,</span> pageSize <span class="token operator">=</span> <span class="token number">10</span> <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> Blog<span class="token punctuation">.</span><span class="token function">findAndCountAll</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    limit<span class="token operator">:</span> pageSize<span class="token punctuation">,</span>\n    offset<span class="token operator">:</span> pageSize <span class="token operator">*</span> pageIndex<span class="token punctuation">,</span>\n    order<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">[</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;desc&#39;</span><span class="token punctuation">]</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    include<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token comment">// @ 关系</span>\n      <span class="token punctuation">{</span>\n        model<span class="token operator">:</span> AtRelation<span class="token punctuation">,</span>\n        attributes<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;userId&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;blogId&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        where<span class="token operator">:</span> <span class="token punctuation">{</span> userId <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token comment">// User</span>\n      <span class="token punctuation">{</span>\n        model<span class="token operator">:</span> User<span class="token punctuation">,</span>\n        attributes<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;userName&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;nickName&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;picture&#39;</span><span class="token punctuation">]</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n  <span class="token comment">// 格式化</span>\n  <span class="token keyword">let</span> blogList <span class="token operator">=</span> result<span class="token punctuation">.</span>rows<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">row</span> <span class="token operator">=&gt;</span> row<span class="token punctuation">.</span><span class="token function">toJSON</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n  blogList <span class="token operator">=</span> <span class="token function">formatBlog</span><span class="token punctuation">(</span>blogList<span class="token punctuation">)</span>\n  blogList <span class="token operator">=</span> blogList<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">blogItem</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    blogItem<span class="token punctuation">.</span>user <span class="token operator">=</span> <span class="token function">formatUser</span><span class="token punctuation">(</span>blogItem<span class="token punctuation">.</span>user<span class="token punctuation">)</span>\n    <span class="token keyword">return</span> blogItem\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token keyword">return</span> <span class="token punctuation">{</span>\n    count<span class="token operator">:</span> result<span class="token punctuation">.</span>count<span class="token punctuation">,</span>\n    blogList\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br></div></div><br><h3 id="_14-5-标记为已读" tabindex="-1"><a class="header-anchor" href="#_14-5-标记为已读" aria-hidden="true">#</a> 14.5 标记为已读</h3><p><em>src/routes/view/blog.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// atMe 路由</span>\nrouter<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/at-me&#39;</span><span class="token punctuation">,</span> loginRedirect<span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> id<span class="token operator">:</span> userId <span class="token punctuation">}</span> <span class="token operator">=</span> ctx<span class="token punctuation">.</span>session<span class="token punctuation">.</span>userInfo\n\n  <span class="token comment">// 获取 @ 数量</span>\n  <span class="token keyword">const</span> atCountResult <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getAtMeCount</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> count<span class="token operator">:</span> atCount <span class="token punctuation">}</span> <span class="token operator">=</span> atCountResult<span class="token punctuation">.</span>data\n\n  <span class="token comment">// 获取第一页列表</span>\n  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getAtMeBlogList</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> isEmpty<span class="token punctuation">,</span> blogList<span class="token punctuation">,</span> pageSize<span class="token punctuation">,</span> pageIndex<span class="token punctuation">,</span> count <span class="token punctuation">}</span> <span class="token operator">=</span> result<span class="token punctuation">.</span>data\n\n  <span class="token comment">// 渲染页面</span>\n  <span class="token keyword">await</span> ctx<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token string">&#39;atMe&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    atCount<span class="token punctuation">,</span>\n    blogData<span class="token operator">:</span> <span class="token punctuation">{</span> isEmpty<span class="token punctuation">,</span> blogList<span class="token punctuation">,</span> pageSize<span class="token punctuation">,</span> pageIndex<span class="token punctuation">,</span> count <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n  <span class="token comment">// 标记为已读</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>atCount <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">await</span> <span class="token function">markAsRead</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><p><em>src/controller/blog-at.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * 标记为已读\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">userId</span> userId\n */</span>\n<span class="token keyword">const</span> <span class="token function-variable function">markAsRead</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">userId</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">try</span> <span class="token punctuation">{</span>\n    <span class="token keyword">await</span> <span class="token function">updateAtRelation</span><span class="token punctuation">(</span>\n      <span class="token punctuation">{</span> newIsRead<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span> userId<span class="token punctuation">,</span> isRead<span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span>\n    <span class="token punctuation">)</span>\n  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>ex<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token comment">// 不需要返回 SuccessfulModel 和 ErrorModel</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p><em>src/service/at-relation.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * 更新 AtRelation\n * <span class="token keyword">@params</span> <span class="token class-name"><span class="token punctuation">{</span>Object<span class="token punctuation">}</span></span> params0 更新内容\n * <span class="token keyword">@params</span> <span class="token class-name"><span class="token punctuation">{</span>Object<span class="token punctuation">}</span></span> params1 查询条件\n */</span>\n<span class="token keyword">const</span> updateAtRelation <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>\n  <span class="token punctuation">{</span> newIsRead <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">// 要更新的内容</span>\n  <span class="token punctuation">{</span> userId<span class="token punctuation">,</span> isRead <span class="token punctuation">}</span> <span class="token comment">// 条件</span>\n<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 拼接更新内容</span>\n  <span class="token keyword">const</span> updateData <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>newIsRead<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    updateData<span class="token punctuation">.</span>isRead <span class="token operator">=</span> newIsRead\n  <span class="token punctuation">}</span>\n  <span class="token comment">// 拼接查询条件</span>\n  <span class="token keyword">const</span> whereData <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>userId<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    whereData<span class="token punctuation">.</span>userId <span class="token operator">=</span> userId\n  <span class="token punctuation">}</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>isRead<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    whereData<span class="token punctuation">.</span>isRead <span class="token operator">=</span> isRead\n  <span class="token punctuation">}</span>\n  <span class="token comment">// 执行更新</span>\n  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> AtRelation<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>updateData<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    where<span class="token operator">:</span> whereData\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token keyword">return</span> result<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&gt;</span> <span class="token number">0</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><br><h3 id="_14-6-单元测试" tabindex="-1"><a class="header-anchor" href="#_14-6-单元测试" aria-hidden="true">#</a> 14.6 单元测试</h3><p><em>test/blog/at.test.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * <span class="token keyword">@description</span> 微博 @ 关系 test\n * <span class="token keyword">@author</span> yuanke\n */</span>\n\n<span class="token keyword">const</span> server <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../server&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span>\n  <span class="token constant">Z_COOKIE</span><span class="token punctuation">,</span>\n  <span class="token constant">L_COOKIE</span><span class="token punctuation">,</span>\n  <span class="token constant">L_USER_NAME</span>\n<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../testUserInfo&#39;</span><span class="token punctuation">)</span>\n\n<span class="token keyword">let</span> <span class="token constant">BLOG_ID</span>\n\n<span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;张三创建一条微博,@李四,应该成功&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> content <span class="token operator">=</span> <span class="token string">&#39;单元测试自动创建的微博 @李四 - &#39;</span> <span class="token operator">+</span> <span class="token constant">L_USER_NAME</span>\n  <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> server\n    <span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/api/blog/create&#39;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      content\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;Cookie&#39;</span><span class="token punctuation">,</span> <span class="token constant">Z_COOKIE</span><span class="token punctuation">)</span>\n  <span class="token function">expect</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>body<span class="token punctuation">.</span>errno<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>\n\n  <span class="token comment">// 记录微博 id</span>\n  <span class="token constant">BLOG_ID</span> <span class="token operator">=</span> res<span class="token punctuation">.</span>body<span class="token punctuation">.</span>data<span class="token punctuation">.</span>id\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;获取李四的 @ 列表(第一页),应该有刚刚创建的微博&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> server\n    <span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/api/atMe/loadMore/0&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 列表是倒序排列的</span>\n    <span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;Cookie&#39;</span><span class="token punctuation">,</span> <span class="token constant">L_COOKIE</span><span class="token punctuation">)</span>\n  <span class="token function">expect</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>body<span class="token punctuation">.</span>errno<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>\n  <span class="token keyword">const</span> data <span class="token operator">=</span> res<span class="token punctuation">.</span>body<span class="token punctuation">.</span>data\n  <span class="token keyword">const</span> blogList <span class="token operator">=</span> data<span class="token punctuation">.</span>blogList\n  <span class="token keyword">const</span> isHaveCurBlog <span class="token operator">=</span> blogList<span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span><span class="token parameter">blog</span> <span class="token operator">=&gt;</span> blog<span class="token punctuation">.</span>id <span class="token operator">===</span> <span class="token constant">BLOG_ID</span><span class="token punctuation">)</span>\n  <span class="token function">expect</span><span class="token punctuation">(</span>isHaveCurBlog<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br></div></div><br><h2 id="_15-上线" tabindex="-1"><a class="header-anchor" href="#_15-上线" aria-hidden="true">#</a> 15.上线</h2><h3 id="_15-1-pm2-常用命令" tabindex="-1"><a class="header-anchor" href="#_15-1-pm2-常用命令" aria-hidden="true">#</a> 15.1 pm2 常用命令</h3><p><strong>常用命令</strong>：</p><ul><li><p><code>pm2 start xxx</code>：启动 pm2 服务</p></li><li><p><code>pm2 list</code>：查看 pm2 进程列表</p></li><li><p><code>pm2 restart &lt;AppName&gt;/&lt;id&gt;</code>：手动重启</p></li><li><p><code>pm2 stop &lt;AppName&gt;/&lt;id&gt;、pm2 delete &lt;AppName&gt;/&lt;id&gt;</code>：第一个是停止服务，第二个是删除服务</p></li><li><p><code>pm2 info &lt;AppName&gt;/&lt;id&gt;</code>：查看进程基本信息</p></li><li><p><code>pm2 log &lt;AppName&gt;/&lt;id&gt;</code>：查看日志打印</p></li><li><p><code>pm2 monit &lt;AppName&gt;/&lt;id&gt;</code>：监控进程内存、CPU 信息</p></li></ul><br><h3 id="_15-2-pm2-配置项" tabindex="-1"><a class="header-anchor" href="#_15-2-pm2-配置项" aria-hidden="true">#</a> 15.2 pm2 配置项</h3><blockquote><ul><li>配置服务信息</li><li>配置进程数量</li><li>配置日志目录</li></ul></blockquote><p><em>package.json</em>:</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token property">&quot;prd&quot;</span><span class="token operator">:</span> <span class="token string">&quot;cross-env NODE_ENV=production pm2 start pm2.conf.json&quot;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><em>pm2.conf.json</em>：</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;apps&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;weibo&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;script&quot;</span><span class="token operator">:</span> <span class="token string">&quot;bin/www&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;watch&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;ignore_watch&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token string">&quot;node_modules&quot;</span><span class="token punctuation">,</span>\n      <span class="token string">&quot;logs&quot;</span><span class="token punctuation">,</span>\n      <span class="token string">&quot;uploadFiles&quot;</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;instances&quot;</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;error_file&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./logs/err.log&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;out_file&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./logs/out.log&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;log_date_format&quot;</span><span class="token operator">:</span> <span class="token string">&quot;YYYY-MM-DD HH:mm:ss&quot;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><br><h3 id="_15-3-多进程" tabindex="-1"><a class="header-anchor" href="#_15-3-多进程" aria-hidden="true">#</a> 15.3 多进程</h3><p><strong>为什么使用多进程</strong>：</p><ul><li><p>操作系统会限制一个进程的内存</p></li><li><p>内存：无法充分利用机器全部内存</p></li><li><p>CPU：无法充分利用多核 CPU 的优势</p></li></ul><hr><p><em>pm2.conf.json</em>：</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token property">&quot;instances&quot;</span><span class="token operator">:</span> <span class="token number">6</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><br><h3 id="_15-4-nginx" tabindex="-1"><a class="header-anchor" href="#_15-4-nginx" aria-hidden="true">#</a> 15.4 nginx</h3><p><strong>简介</strong>：</p><ul><li>高性能的 web 服务器，开源免费</li><li>一般用于做静态服务、负载均衡（本课没用到）</li><li>反向代理（本课用到） <ul><li>在 <em>http://localhost:8000/api/blog/list</em> 拥有博客数据，在 <em>http://localhost:8001/</em> 拥有博客首页的数据，若要整合二者到 <em>http://localhost:8080/</em> 端口，就需要进行反向代理</li></ul></li></ul><p><strong>nginx 命令</strong>：</p><blockquote><p>未配置 path，故在 nginx 文件夹中使用以下命令</p></blockquote><ol><li>测试配置文件格式是否正确：<code>./nginx -t</code></li><li>启动 nginx：<code>start ./nginx</code></li><li>重启：<code>./nginx -s reload</code></li><li>停止：<code>./nginx -s stop</code></li></ol><hr><p><em>nginx.conf</em>：</p><div class="language-conf ext-conf line-numbers-mode"><pre class="language-conf"><code># 分配 cpu 内核\nworker_processes 2;\n\nhttp {\n    include       mime.types;\n    default_type  application/octet-stream;\n    sendfile        on;\n    keepalive_timeout  65;\n    server {\n        listen       8080;\n        server_name  localhost;\n        \n        # 写了这里\n        location / {\n            proxy_pass http://localhost:8001;\n        }\n        location /api/ {\n            proxy_pass http://localhost:8000;\n            proxy_set_header Host $host;\n        }\n\n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html {\n            root   html;\n        }\n    }\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><p><strong>总结</strong>：当设置好代理之后，在请求接口时不需要 <code>baseUrl</code> 只需要写类似于 <code>/api/blog/list</code>，就可以反向代理。请求接口有 <code>/api/</code> 时，都会去 <code>http://localhost:8000/api/</code> 中去寻找内容；请求接口为 <code>/</code> 时，就回去 <code>http://localhost:8001</code> 去寻找内容</p><hr><p>在 <em>http {}</em> 中，有 <code>log_format</code> 和 <code>access_log</code> 选项，前者和后者都是注释状态的，可以将它们解开。其中，<code>access_log</code> 的内容可以写上自定义的路径，例如 <em>koa2-weibo-code/logs/access.log</em></p>',489),y={},v=(0,a(3744).Z)(y,[["render",function(n,s){const a=(0,p.up)("OutboundLink");return(0,p.wg)(),(0,p.iD)(p.HY,null,[t,(0,p._)("ol",null,[e,o,c,(0,p._)("li",null,[l,(0,p._)("a",u,[r,(0,p.Wm)(a)]),i,k]),b]),m,(0,p._)("blockquote",null,[(0,p._)("p",null,[d,(0,p._)("a",g,[f,(0,p.Wm)(a)])])]),w],64)}]])},3744:(n,s)=>{s.Z=(n,s)=>{for(const[a,p]of s)n[a]=p;return n}}}]);