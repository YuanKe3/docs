"use strict";(self.webpackChunknotebook=self.webpackChunknotebook||[]).push([[860],{8426:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-62483f05",path:"/webpack.html",title:"",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"0.webpack5 学习",slug:"_0-webpack5-学习",children:[{level:3,title:"0.1 webpack 配置文件",slug:"_0-1-webpack-配置文件",children:[]},{level:3,title:"0.2 修改 webpack.config.js 名称",slug:"_0-2-修改-webpack-config-js-名称",children:[]},{level:3,title:"0.3 loader 知识补充",slug:"_0-3-loader-知识补充",children:[]},{level:3,title:"4.20 总结",slug:"_4-20-总结",children:[]},{level:3,title:"0.5 importLoaders 属性 - 3.3 的一些内容补充",slug:"_0-5-importloaders-属性-3-3-的一些内容补充",children:[]}]},{level:2,title:"1.webpack 简介",slug:"_1-webpack-简介",children:[{level:3,title:"1.1 webpack 是什么",slug:"_1-1-webpack-是什么",children:[]},{level:3,title:"1.2 五个核心概念",slug:"_1-2-五个核心概念",children:[]}]},{level:2,title:"2.webpack 基础",slug:"_2-webpack-基础",children:[{level:3,title:"2.1 基本框架",slug:"_2-1-基本框架",children:[]},{level:3,title:"2.2 打包样式资源 - css-loader",slug:"_2-2-打包样式资源-css-loader",children:[]},{level:3,title:"2.3 打包 html 资源到 build",slug:"_2-3-打包-html-资源到-build",children:[]},{level:3,title:"2.4 打包图片资源",slug:"_2-4-打包图片资源",children:[]},{level:3,title:"2.5 output 的 clean 属性",slug:"_2-5-output-的-clean-属性",children:[]},{level:3,title:"2.6 打包其他资源（字体图标）",slug:"_2-6-打包其他资源-字体图标",children:[]},{level:3,title:"2.7 处理其他资源",slug:"_2-7-处理其他资源",children:[]},{level:3,title:"2.8 js 语法检查 eslint",slug:"_2-8-js-语法检查-eslint",children:[]},{level:3,title:"2.9 js 兼容性处理 babel",slug:"_2-9-js-兼容性处理-babel",children:[]},{level:3,title:"2.10 devServer",slug:"_2-10-devserver",children:[]},{level:3,title:"2.11 总结前面",slug:"_2-11-总结前面",children:[]}]},{level:2,title:"3.生产环境",slug:"_3-生产环境",children:[{level:3,title:"3.1 改造开发模式和生产模式",slug:"_3-1-改造开发模式和生产模式",children:[]},{level:3,title:"3.2 提取 css 成单独文件",slug:"_3-2-提取-css-成单独文件",children:[]},{level:3,title:"3.3 css 兼容性处理",slug:"_3-3-css-兼容性处理",children:[]},{level:3,title:"3.4 压缩 css",slug:"_3-4-压缩-css",children:[]},{level:3,title:"3.5 总结前面",slug:"_3-5-总结前面",children:[]}]},{level:2,title:"4.webpack 高级",slug:"_4-webpack-高级",children:[{level:3,title:"4.1 封装样式 loader 函数",slug:"_4-1-封装样式-loader-函数",children:[]},{level:3,title:"4.2 source map",slug:"_4-2-source-map",children:[]},{level:3,title:"4.3 提升打包构建速度 - HMR",slug:"_4-3-提升打包构建速度-hmr",children:[]},{level:3,title:"4.4 OneOf",slug:"_4-4-oneof",children:[]},{level:3,title:"4.5 include/Exclude",slug:"_4-5-include-exclude",children:[]},{level:3,title:"4.6 cache",slug:"_4-6-cache",children:[]},{level:3,title:"4.7 多进程 thread",slug:"_4-7-多进程-thread",children:[]},{level:3,title:"4.8 tree-shaking",slug:"_4-8-tree-shaking",children:[]},{level:3,title:"4.9 减少 babel 生成文件的体积",slug:"_4-9-减少-babel-生成文件的体积",children:[]},{level:3,title:"4.10 image Minimizer",slug:"_4-10-image-minimizer",children:[]},{level:3,title:"4.11 代码分割 code split",slug:"_4-11-代码分割-code-split",children:[]},{level:3,title:"4.12 多入口文件提取公共模块",slug:"_4-12-多入口文件提取公共模块",children:[]},{level:3,title:"4.13 按需加载、动态导入",slug:"_4-13-按需加载、动态导入",children:[]},{level:3,title:"4.14 给模块命名",slug:"_4-14-给模块命名",children:[]},{level:3,title:"4.15 统一命名",slug:"_4-15-统一命名",children:[]},{level:3,title:"4.16 preload / prefetch",slug:"_4-16-preload-prefetch",children:[]},{level:3,title:"4.17 网络缓存 contenthash",slug:"_4-17-网络缓存-contenthash",children:[]},{level:3,title:"4.18 js 兼容性问题 Core.js",slug:"_4-18-js-兼容性问题-core-js",children:[]},{level:3,title:"4.19 PWA",slug:"_4-19-pwa",children:[]}]},{level:2,title:"5.其他内容",slug:"_5-其他内容",children:[{level:3,title:"5.1 output 中的 publicPath 和 devServer 中的 publicPath",slug:"_5-1-output-中的-publicpath-和-devserver-中的-publicpath",children:[]},{level:3,title:"5.3 proxy 代理设置",slug:"_5-3-proxy-代理设置",children:[]},{level:3,title:"5.4 resolve 解析规则",slug:"_5-4-resolve-解析规则",children:[]},{level:3,title:"5.6 ts-loader 编译 TS",slug:"_5-6-ts-loader-编译-ts",children:[]}]},{level:2,title:"6.ReactCli 项目",slug:"_6-reactcli-项目",children:[{level:3,title:"6.1 使用 history 导致的刷新后路由丢失问题",slug:"_6-1-使用-history-导致的刷新后路由丢失问题",children:[]},{level:3,title:"6.2 复制 public 目录下的 favicon.ico 到 dist 目录",slug:"_6-2-复制-public-目录下的-favicon-ico-到-dist-目录",children:[]},{level:3,title:"6.3 合并之后的配置",slug:"_6-3-合并之后的配置",children:[]}]},{level:2,title:"7.Vue 项目",slug:"_7-vue-项目",children:[{level:3,title:"7.1 完整配置",slug:"_7-1-完整配置",children:[]}]},{level:2,title:"8.Loader",slug:"_8-loader",children:[{level:3,title:"8.1 loader 介绍",slug:"_8-1-loader-介绍",children:[]},{level:3,title:"8.2 开发一个 loader",slug:"_8-2-开发一个-loader",children:[]},{level:3,title:"8.3 同步 loader",slug:"_8-3-同步-loader",children:[]},{level:3,title:"8.4 异步 loader",slug:"_8-4-异步-loader",children:[]},{level:3,title:"8.5 raw loader 实现返回 buffer 数据",slug:"_8-5-raw-loader-实现返回-buffer-数据",children:[]},{level:3,title:"8.6 pitch loader 优先执行",slug:"_8-6-pitch-loader-优先执行",children:[]},{level:3,title:"8.7 loader API",slug:"_8-7-loader-api",children:[]},{level:3,title:"8.8 自定义 clean-log-loader",slug:"_8-8-自定义-clean-log-loader",children:[]},{level:3,title:"8.9 自定义 banner-loader",slug:"_8-9-自定义-banner-loader",children:[]},{level:3,title:"8.10 babel-loader",slug:"_8-10-babel-loader",children:[]},{level:3,title:"8.11 原理 - 自定义 file-loader",slug:"_8-11-原理-自定义-file-loader",children:[]},{level:3,title:"8.12 原理 - 自定义 style-loader",slug:"_8-12-原理-自定义-style-loader",children:[]}]},{level:2,title:"9.Plugins",slug:"_9-plugins",children:[{level:3,title:"9.1 plugin 介绍",slug:"_9-1-plugin-介绍",children:[]},{level:3,title:"9.2 第一个 plugin",slug:"_9-2-第一个-plugin",children:[]},{level:3,title:"9.3 注册 hooks",slug:"_9-3-注册-hooks",children:[]},{level:3,title:"9.4 查看 compiler 和 compilation 对象",slug:"_9-4-查看-compiler-和-compilation-对象",children:[]},{level:3,title:"9.5 自定义 BannerWebpackPlugin",slug:"_9-5-自定义-bannerwebpackplugin",children:[]},{level:3,title:"9.6 自定义 CleanWebpackPlugin",slug:"_9-6-自定义-cleanwebpackplugin",children:[]},{level:3,title:"9.7 自定义 AnalyzeWebpackPlugin",slug:"_9-7-自定义-analyzewebpackplugin",children:[]}]}],filePathRelative:"webpack.md",git:{updatedTime:null,contributors:[]}}},8900:(n,s,a)=>{a.r(s),a.d(s,{default:()=>z});var p=a(6252);const e=(0,p.uE)('<h2 id="_0-webpack5-学习" tabindex="-1"><a class="header-anchor" href="#_0-webpack5-学习" aria-hidden="true">#</a> 0.webpack5 学习</h2><h3 id="_0-1-webpack-配置文件" tabindex="-1"><a class="header-anchor" href="#_0-1-webpack-配置文件" aria-hidden="true">#</a> 0.1 webpack 配置文件</h3><ol><li>更改入口文件并构建：<code>webpack --entry ./src/main.js</code></li><li>更改出口文件并构建：<code>webpack --entry ./src/main.js --output-path ./build</code></li><li>通过设置 <em>package.json</em> 使之支持 <code>npm run build</code> 命令：</li></ol><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n  <span class="token property">&quot;test&quot;</span><span class="token operator">:</span> <span class="token string">&quot;echo \\&quot;Error: no test specified\\&quot; &amp;&amp; exit 1&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;build&quot;</span><span class="token operator">:</span> <span class="token string">&quot;webpack --entry ./src/main.js --output-path ./build&quot;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><br><h3 id="_0-2-修改-webpack-config-js-名称" tabindex="-1"><a class="header-anchor" href="#_0-2-修改-webpack-config-js-名称" aria-hidden="true">#</a> 0.2 修改 <em>webpack.config.js</em> 名称</h3><p>设置 <em>package.json</em>：</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token property">&quot;build&quot;</span><span class="token operator">:</span> <span class="token string">&quot;webpack --config lg.webpack.js&quot;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><br><h3 id="_0-3-loader-知识补充" tabindex="-1"><a class="header-anchor" href="#_0-3-loader-知识补充" aria-hidden="true">#</a> 0.3 loader 知识补充</h3><ol><li>webpack5 loader 分为行内 loader 和 配置里的 loader。如果不用类似上面的配置 loader，而是用行内 loader，写法如下：</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token string">&#39;css-loader!../css/login.css&#39;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ol start="2"><li>loader 在配置里的两种简写：</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> resolve <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  entry<span class="token operator">:</span> <span class="token string">&#39;./src/index.js&#39;</span><span class="token punctuation">,</span>\n  output<span class="token operator">:</span> <span class="token punctuation">{</span>\n    filename<span class="token operator">:</span> <span class="token string">&#39;main.js&#39;</span><span class="token punctuation">,</span>\n    path<span class="token operator">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;dist&#39;</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token comment">// {</span>\n      <span class="token comment">//   test: /\\.css$/,</span>\n      <span class="token comment">//   use: [</span>\n      <span class="token comment">//     {</span>\n      <span class="token comment">//       loader: &#39;css-loader&#39;</span>\n      <span class="token comment">//     }</span>\n      <span class="token comment">//   ]</span>\n      <span class="token comment">// }</span>\n\n      <span class="token comment">// 简写一</span>\n      <span class="token comment">// {</span>\n      <span class="token comment">//   test: /\\.css$/,</span>\n      <span class="token comment">//   loader: &#39;css-loader&#39;</span>\n      <span class="token comment">// }</span>\n\n      <span class="token comment">// 简写三</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.css$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n        use<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;css-loader&#39;</span><span class="token punctuation">]</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><br><h3 id="_4-20-总结" tabindex="-1"><a class="header-anchor" href="#_4-20-总结" aria-hidden="true">#</a> 4.20 总结</h3><ol><li>提升了开发体验 <ul><li>使用 <code>source-map</code> 让开发或上线时代码报错更加准确的错误提示</li></ul></li><li>提升了 webpack 打包构建速度 <ul><li>使用 <code>HotModuleReplacement</code> 让开发时只重新编译打包更新变化了的代码，不变的代码使用缓存，从而更新速度更快</li><li>使用 <code>OneOf</code> 让资源文件一旦被某个 loader 处理了，就不会继续遍历了，打包速度更快</li><li>使用 <code>Include/Exclude</code> 排除或只检测某些文件，处理的文件更少，速度更快</li><li>使用 <code>Cache</code> 对 eslint 和 babel 处理的结果进行缓存，让第二次打包速度更快</li><li>使用 <code>Thread</code> 多线程处理 <code>eslint</code> 和 <code>babel</code> 任务，速度更快(代码较多时开启才显著)</li></ul></li><li>减少代码体积 <ul><li>使用 <code>Tree shaking</code> 剔除了没有使用的多余代码，让代码积极更小</li><li>使用 <code>@babel/plugin-transform-runtime</code> 插件对 babel 进行处理，让辅助代码从中引入 ，而不是每个文件都生成辅助代码，从而体积更小</li><li>使用 <code>image Minimizer</code> 对项目中的图片进行压缩，体积更小，请求速度更快(对静态图片才需要进行压缩)</li></ul></li><li>优化代码运行性能 <ul><li>使用 <code>Code split</code> 对代码进行分割成多个 js 文件，从而使单个文件体积更小，并行加载 js 速度更快，并通过 import 动态导入语法进行按需加载，从而达到需要使用时才加载该资源，不用时不加载资源</li><li><code>Preload/Prefetch</code> 对代码进行提前加载，等未来需要使用时就能直接使用，从而用户体验更好</li><li>使用 <code>Network cache</code> 能对输出资源文件进行更好的命名，将来好做缓存 ，从而用户体验更好</li><li>使用 <code>core-js</code> 对 js 进行兼容性处理，让我们代码能运行在低版本浏览器</li><li>使用 <code>pwa</code> 能让代码离线也能访问，从而提升用户体验</li></ul></li></ol><br><h3 id="_0-5-importloaders-属性-3-3-的一些内容补充" tabindex="-1"><a class="header-anchor" href="#_0-5-importloaders-属性-3-3-的一些内容补充" aria-hidden="true">#</a> 0.5 importLoaders 属性 - 3.3 的一些内容补充</h3><blockquote><p>当 css 文件中引入了另一个 css 文件时，被引入的文件并不会进行代码兼容化处理。这时候就要设置 importLoaders</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> resolve <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  entry<span class="token operator">:</span> <span class="token string">&#39;./src/index.js&#39;</span><span class="token punctuation">,</span>\n  output<span class="token operator">:</span> <span class="token punctuation">{</span>\n    filename<span class="token operator">:</span> <span class="token string">&#39;main.js&#39;</span><span class="token punctuation">,</span>\n    path<span class="token operator">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;dist&#39;</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.css$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n        use<span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token string">&#39;style-loader&#39;</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token operator">:</span> <span class="token string">&#39;css-loader&#39;</span><span class="token punctuation">,</span>\n            options<span class="token operator">:</span> <span class="token punctuation">{</span>\n              <span class="token doc-comment comment">/**\n               * postcss-loader 将处理好的 css 给 css-loader 后，\n               * css-loader 发现其提交的 css 有引入另一个 css，\n               * 这时候会往前一步，即 importLoaders: 1\n               */</span>\n              importLoaders<span class="token operator">:</span> <span class="token number">1</span>\n            <span class="token punctuation">}</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token string">&#39;postcss-loader&#39;</span> <span class="token comment">// 会自动找 postcss.config.js 配置文件</span>\n        <span class="token punctuation">]</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.less$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n        use<span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token string">&#39;style-loader&#39;</span><span class="token punctuation">,</span>\n          <span class="token string">&#39;css-loader&#39;</span><span class="token punctuation">,</span>\n          <span class="token string">&#39;postcss-loader&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 会自动找 postcss.config.js 配置文件</span>\n          <span class="token string">&#39;less-loader&#39;</span>\n        <span class="token punctuation">]</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br></div></div><br><h2 id="_1-webpack-简介" tabindex="-1"><a class="header-anchor" href="#_1-webpack-简介" aria-hidden="true">#</a> 1.webpack 简介</h2><h3 id="_1-1-webpack-是什么" tabindex="-1"><a class="header-anchor" href="#_1-1-webpack-是什么" aria-hidden="true">#</a> 1.1 webpack 是什么</h3><ol><li>webpack 是一种<strong>前端静态资源打包工具</strong>，一个静态模块打包器（module bundler）。在 webpack 看来，前端的所有资源文件（js/json/css/img/less/...）都会作为模块处理，它将根据模块的依赖关系进行静态分析，打包生成对应的静态资源（bundle）</li><li>当使用 <code>import $ from jquery</code> 这个 es6 语法或者 less 语法时，浏览器都不能识别，需要一个构建工具将这些语法编译成浏览器能识别的代码。（就是将前端的一些编译小工具整合起来）</li><li>资源文件需要构建工具处理，先用打包起点（入口文件）开始打包，把每个依赖关系记录好形成依赖关系树状图，将类似 less、jQ 等形成 chunk（代码块），再进行一系列操作（类似将 less 编译成 css，es6 变成 es5 等）形成 bundle（静态资源）</li></ol><p><strong>webpack 本身功能</strong>：</p><ul><li>开发模式：仅能编译 JS 中的 ES MODULE 语法</li><li>生产模式：能编译 JS 中的 ES MODULE 语法，还能压缩代码</li></ul><p><strong>开发模式介绍</strong>：</p><ol><li>编译代码，让代码运行更加健壮</li><li>代码质量检测，树立代码规范</li></ol><br><h3 id="_1-2-五个核心概念" tabindex="-1"><a class="header-anchor" href="#_1-2-五个核心概念" aria-hidden="true">#</a> 1.2 五个核心概念</h3><ol><li>Entry：指示哪个文件为入口开始打包，分析构建内部依赖图</li><li>Output：指示打包后的资源 bundles 输出到哪里去，以及如何命名</li><li>Loader：Loader 让 webpack 能够去处理那些非 JavaScript 文件（webpack 自身只理解 JavaScript 和 JSON）</li><li>Plugins：插件可以用于执行范围更广的任务，插件的范围包括，从打包优化和压缩，一直到重新定义环境的变量</li><li>Mode：模式指示 webpack 使用相应模式的配置：</li></ol><table><thead><tr><th>选项</th><th>描述</th><th>特点</th></tr></thead><tbody><tr><td>development</td><td>会将 process.env.NODE_ENV 的值设为 development，启用 NamedChunksPlugin 和 NamedModulesPlugin</td><td>能让代码本地调试的环境</td></tr><tr><td>production</td><td>会将 process.enc.NODE_ENV 的值设为 production，启用 FlagDependencyUsagePlugin、FlagincludedChunksPlugin、ModuleConcatenationPlugin、NoEmitOnErrorsPlugin、OccurrenceOrderPlugin、SideEffectsFlagPlugin 和 UglifyJsPlugin</td><td>能让代码优化上线运行的环境</td></tr></tbody></table><br><h2 id="_2-webpack-基础" tabindex="-1"><a class="header-anchor" href="#_2-webpack-基础" aria-hidden="true">#</a> 2.webpack 基础</h2><h3 id="_2-1-基本框架" tabindex="-1"><a class="header-anchor" href="#_2-1-基本框架" aria-hidden="true">#</a> 2.1 基本框架</h3><ol><li><code>npm init -y</code>：初始化项目</li><li><code>npm i webpack webpack-cli -g</code>：全局安装以便快捷使用指令，否则每次都要写 <code>npx</code></li><li><code>npm i webpack webpack-cli -D</code>：安装开发依赖</li><li>新建 <em>src</em> 目录：源代码目录</li><li>新建 <em>build</em> 目录：通过打包处理后输出的目录</li><li>在 <em>src</em> 目录新建 <em>index.js</em> 作为入口文件</li><li><em>index.js</em> 代码如下：</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">/*\n  1.运行指令：\n    开发环境：webpack --entry ./src/index.js -o ./build --output-filename built.js --mode=development\n    翻译：webpack 会以 ./src/index.js 为入口文件开始打包，打包后输出到 ./build/main.js，整体打包环境是开发环境\n    生产环境：webpack --entry ./src/index.js -o ./build --output-filename built.js --mode=production\n  2.结论：\n    一、webpack 能处理 js 和 json 资源，不能处理 css/img 等其他资源\n    二、生产环境比开发环境多一个压缩 js 代码\n    三、生产环境和开发环境将 ES6 模块化编译成浏览器能识别的模块化\n*/</span>\n<span class="token keyword">import</span> data <span class="token keyword">from</span> <span class="token string">&#39;./data.json&#39;</span>\n<span class="token comment">// import &#39;./index.css&#39;</span>\n\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>\n\n<span class="token keyword">function</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> x <span class="token operator">+</span> y\n<span class="token punctuation">}</span>\n\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><ol start="8"><li>使用 <code>npx webpack ./src/main.js --mode=development</code> 就能进行打包了</li></ol><br><h3 id="_2-2-打包样式资源-css-loader" tabindex="-1"><a class="header-anchor" href="#_2-2-打包样式资源-css-loader" aria-hidden="true">#</a> 2.2 打包样式资源 - css-loader</h3><blockquote><p>在入口（<em>src</em> 下的 <em>index.js</em>）中引入同级目录下的 <em>index.css</em>：<code>import &#39;./index.css&#39;</code> 会报错，这时候需要打包 css 样式资源！</p></blockquote><ol><li>在 <em>src</em> 目录同级创建 <em>webpack.config.js</em>，作用是：当运行 webpack 指令时，会加载里面的配置</li><li>最基本的配置 <em>webpack.config.js</em>：（直接使用 <code>npx webpack</code> 就能执行最基本的 webpack 打包）</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>\n\n<span class="token doc-comment comment">/**\n * <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;webpack&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Configuration<span class="token punctuation">}</span></span>\n */</span>\n<span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 入口。entry 要用相对路径</span>\n  entry<span class="token operator">:</span> <span class="token string">&#39;./src/main.js&#39;</span><span class="token punctuation">,</span>\n  <span class="token comment">// 输出</span>\n  output<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token comment">// path 要使用绝对路径</span>\n    path<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;dist&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token comment">// 入口文件打包输出的文件名，如果为 js/main.js 则 main.js 输出到 dist 目录下的 js 目录下的 main.js 里</span>\n    filename<span class="token operator">:</span> <span class="token string">&#39;main.js&#39;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token comment">// 加载器</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token comment">// loader 的配置</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token comment">// plugin 的配置</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  mode<span class="token operator">:</span> <span class="token string">&#39;development&#39;</span>\n<span class="token punctuation">}</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> config\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><ol start="3"><li>打包样式资源：<code>npm i css-loader style-loader -D</code></li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// resolve 用来拼接绝对路径的方法</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> resolve <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">// webpack 配置</span>\n  <span class="token comment">// 入口起点</span>\n  entry<span class="token operator">:</span> <span class="token string">&#39;./src/index.js&#39;</span><span class="token punctuation">,</span>\n  <span class="token comment">// 输出</span>\n  output<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 输出文件名</span>\n    filename<span class="token operator">:</span> <span class="token string">&#39;built.js&#39;</span><span class="token punctuation">,</span>\n    <span class="token comment">// 输出路径</span>\n    <span class="token comment">// __dirname nodejs 的变量，代表当前文件的目录绝对路径</span>\n    path<span class="token operator">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;build&#39;</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token comment">// loader 的配置</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token comment">// 详细 loader 配置</span>\n      <span class="token punctuation">{</span>\n        <span class="token comment">// 匹配哪些文件</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.css$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n        <span class="token comment">// 使用哪些 loader 进行处理</span>\n        use<span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token comment">// use 数组中 loader 执行书序：从右到左，从下到上，依次执行</span>\n          <span class="token comment">// 创建 style 标签，将 js 中的 css 样式资源插入进去，添加到 head 中生效</span>\n          <span class="token string">&#39;style-loader&#39;</span><span class="token punctuation">,</span>\n          <span class="token comment">// 将 css 文件变成 commonjs 模块加载到 js 中，里面内容是样式字符串</span>\n          <span class="token string">&#39;css-loader&#39;</span>\n        <span class="token punctuation">]</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token comment">// plugins 的配置</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token comment">// 模式</span>\n  mode<span class="token operator">:</span> <span class="token string">&#39;development&#39;</span>\n  <span class="token comment">// mode: &#39;production&#39;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br></div></div><ol start="4"><li>在 <em>build</em> 目录下创建 <em>index.html</em> 进行测试样式是否生效：</li></ol><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>X-UA-Compatible<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>IE=edge<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>viewport<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>width=device-width, initial-scale=1.0<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>webpack<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>./built.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><ol start="5"><li>打开网页，发现样式生效，打包成功！</li></ol><hr><p>当需要编译 less 文件时，就可以借鉴上面的经验：</p><ol><li>创建 <em>index.less</em> 写入样式，并引入到 <em>index.js</em> 入口文件中</li><li>新建一个 loader：</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>module<span class="token operator">:</span> <span class="token punctuation">{</span>\n  rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token comment">// 详细 loader 配置</span>\n    <span class="token comment">// 不同文件必须配置不同 loader 处理</span>\n    <span class="token punctuation">{</span>\n      <span class="token comment">// 匹配哪些文件</span>\n      test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.css$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n      <span class="token comment">// 使用哪些 loader 进行处理</span>\n      use<span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token comment">// use 数组中 loader 执行书序：从右到左，从下到上，依次执行</span>\n        <span class="token comment">// 创建 style 标签，将 js 中的 css 样式资源插入进去，添加到 head 中生效</span>\n        <span class="token string">&#39;style-loader&#39;</span><span class="token punctuation">,</span>\n        <span class="token comment">// 将 css 文件变成 commonjs 模块加载到 js 中，里面内容是样式字符串</span>\n        <span class="token string">&#39;css-loader&#39;</span>\n      <span class="token punctuation">]</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.less$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n      use<span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token string">&#39;style-loader&#39;</span><span class="token punctuation">,</span>\n        <span class="token string">&#39;css-loader&#39;</span><span class="token punctuation">,</span>\n        <span class="token comment">// 将 less 文件编译成 css 文件</span>\n        <span class="token string">&#39;less-loader&#39;</span><span class="token punctuation">,</span>\n      <span class="token punctuation">]</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><ol start="3"><li>下载：<code>npm i less-loader less -D</code>（如果安装了 <em>less</em>，就可以在控制台输入：<code>npx less less文件 目录/目标.css</code> 来输出 css 文件）</li><li>在 <em>build</em> 文件夹下的 <em>index.html</em> 中引入：</li></ol><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>X-UA-Compatible<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>IE=edge<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>viewport<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>width=device-width, initial-scale=1.0<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>webpack<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>title<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>hello less<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>./built.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><ol start="5"><li>less 文件也成功编译！</li><li>sass 文件同理，只是 <code>test: /\\.s[ac]ss$/</code> 就行</li></ol><br><h3 id="_2-3-打包-html-资源到-build" tabindex="-1"><a class="header-anchor" href="#_2-3-打包-html-资源到-build" aria-hidden="true">#</a> 2.3 打包 html 资源到 build</h3><blockquote><p>public 目录下有 <em>index.html</em>，直接 <code>webpack</code> 发现打包不到 <em>build</em> 目录，引入下文。注意：index.html 不要引入任何文件！</p></blockquote><ol><li>下载插件：<code>npm i html-webpack-plugin -D</code></li><li>在 <em>webpack.config.js</em> 中配置：</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;html-webpack-plugin&#39;</span><span class="token punctuation">)</span>\n\nplugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n  <span class="token comment">// plugin 的配置</span>\n  <span class="token keyword">new</span> <span class="token class-name">ESLintPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token comment">// 检测哪些文件</span>\n    context<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;src&#39;</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token comment">// 模板，以 public/index.html 文件为模板创建新的 html 文件</span>\n    <span class="token comment">// 特点：1.结构与原来一致；2.自动引入打包输出的资源</span>\n    template<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;public/index.html&#39;</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><ol start="3"><li>使用 <code>webpack</code> 命令打包，会发现 <em>build</em> 文件夹中多出一个 html 文件，成功！</li></ol><br><h3 id="_2-4-打包图片资源" tabindex="-1"><a class="header-anchor" href="#_2-4-打包图片资源" aria-hidden="true">#</a> 2.4 打包图片资源</h3>',64),t=(0,p.Uk)("官方文档："),o={href:"https://webpack.docschina.org/guides/asset-modules/#general-asset-type",target:"_blank",rel:"noopener noreferrer"},c=(0,p.Uk)("资源模块 | webpack 中文文档 (docschina.org)"),l=(0,p.uE)('<ol><li>webpack5 废弃了 webpack4 中利用 <code>url-loader</code> 和 <code>file-loader</code> 打包静态资源的方案，而采用 asset-module（资源模块）来打包图片资源</li><li>可以使用 <code>module.generator</code> 在一个地方配置所有生成器的选项</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>module<span class="token operator">:</span> <span class="token punctuation">{</span>\n  rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.less$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n      use<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;style-loader&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;css-loader&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;less-loader&#39;</span><span class="token punctuation">]</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.(jpg|png|gif|svg|jpe?g)</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span>\n      type<span class="token operator">:</span> <span class="token string">&#39;asset&#39;</span><span class="token punctuation">,</span>\n      <span class="token comment">// 解析</span>\n      parser<span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 转 base64 的条件</span>\n        dataUrlCondition<span class="token operator">:</span> <span class="token punctuation">{</span>\n          maxSize<span class="token operator">:</span> <span class="token number">8</span> <span class="token operator">*</span> <span class="token number">1024</span> <span class="token comment">// 25kb</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      generator<span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 局部指定静态资源输出位置(可以类比一下 output.filename，因为 output.filename 是将输出的 js 目录进行修改)</span>\n        <span class="token comment">// 与 output.assetModuleFilename 是相同的，这个写法引入时也会添加好这个路径</span>\n        <span class="token comment">// [hash:10]：取图片的 hash 的前 10 位</span>\n        <span class="token comment">// [ext] 取文件原来拓展名</span>\n        <span class="token comment">// [query] 请求时所携带的参数</span>\n        filename<span class="token operator">:</span> <span class="token string">&#39;img/[hash:10][ext][query]&#39;</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><ol start="3"><li>问题：处理不了 html 中 img 图片，解决方法：增加一个 <code>html-loader</code>：<code>npm i html-loader -D</code></li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">{</span>\n  test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.html$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n  <span class="token comment">// 处理 html 文件的 img 图片（负责引入 img，从而能被 asset 进行处理）</span>\n  loader<span class="token operator">:</span> <span class="token string">&#39;html-loader&#39;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><br><h3 id="_2-5-output-的-clean-属性" tabindex="-1"><a class="header-anchor" href="#_2-5-output-的-clean-属性" aria-hidden="true">#</a> 2.5 output 的 clean 属性</h3><p><strong>webpack4 写法</strong>：</p><ol><li>下载：<code>npm i clean-webpack-plugin -D</code></li><li><em>webpack.config.js</em>：</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> CleanWebpackPlugin <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;clean-webpack-plugin&#39;</span><span class="token punctuation">)</span>\n\nplugins<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token keyword">new</span> <span class="token class-name">CleanWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><strong>webpack5 写法</strong>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>output<span class="token operator">:</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 自动清空上次打包的内容</span>\n  <span class="token comment">// 原理：在打包前，将 path 整个目录内容清空，再进行打包</span>\n  clean<span class="token operator">:</span> <span class="token boolean">true</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><br><h3 id="_2-6-打包其他资源-字体图标" tabindex="-1"><a class="header-anchor" href="#_2-6-打包其他资源-字体图标" aria-hidden="true">#</a> 2.6 打包其他资源（字体图标）</h3><blockquote><p>由于 asset-module 替代了 file-loader 与 url-loader，所以字体图标仍使用 asset-module 来进行打包。因为 iconfont 文件里面又引入了其他文件，webpack 将它们作为模块打包，又因为缺少合适的 loader,所以 webpack5 并不认识他们，就会报错</p></blockquote><p>解决办法：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.css$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n    use<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;style-loader&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;css-loader&#39;</span><span class="token punctuation">]</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token comment">// 打包其他资源（除了 html、js、css 资源以外的资源）</span>\n  <span class="token punctuation">{</span>\n    test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.(ttf|woff2?)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n    <span class="token comment">// 原封不动地打包</span>\n    type<span class="token operator">:</span> <span class="token string">&#39;asset/resource&#39;</span><span class="token punctuation">,</span>\n    generator<span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token comment">// 字体文件打包目录</span>\n      filename<span class="token operator">:</span> <span class="token string">&#39;font/[name].[hash:3][ext]&#39;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><br><h3 id="_2-7-处理其他资源" tabindex="-1"><a class="header-anchor" href="#_2-7-处理其他资源" aria-hidden="true">#</a> 2.7 处理其他资源</h3><blockquote><p>开发中还会有一些其他资源，例如音视频等</p></blockquote><p><em>webpack.config.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">{</span>\n  test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.(ttf|woff2?|mp3|mp4|avi)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n    type<span class="token operator">:</span> <span class="token string">&#39;asset/resource&#39;</span><span class="token punctuation">,</span>\n      generator<span class="token operator">:</span> <span class="token punctuation">{</span>\n        filename<span class="token operator">:</span> <span class="token string">&#39;static/media/[hash:10][ext][query]&#39;</span>\n      <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><br><h3 id="_2-8-js-语法检查-eslint" tabindex="-1"><a class="header-anchor" href="#_2-8-js-语法检查-eslint" aria-hidden="true">#</a> 2.8 js 语法检查 eslint</h3>',23),r=(0,p.Uk)("官方文档："),u={href:"https://webpack.docschina.org/plugins/eslint-webpack-plugin",target:"_blank",rel:"noopener noreferrer"},i=(0,p.Uk)("eslint-webpack-plugin (docschina.org)"),k=(0,p.Uk)("官方文档："),b={href:"https://www.npmjs.com/package/eslint-config-airbnb-base",target:"_blank",rel:"noopener noreferrer"},m=(0,p.Uk)("eslint-config-airbnb-base - npm (npmjs.com)"),d=(0,p.uE)('<ul><li><code>.eslintrc.*</code>：新建文件，位于项目根目录 <ul><li><code>.eslintrc</code></li><li><code>.eslintrc.js</code></li><li><code>eslintrc.json</code></li><li><em>package.json</em> 中的 <code>eslintConfig</code></li></ul></li></ul><p><strong>具体配置</strong>：</p><p><em>.eslintrc.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 解析选项</span>\n  parserOptions<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token comment">// 具体检查规则</span>\n  rules<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token comment">// 继承其他规则</span>\n  <span class="token keyword">extends</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token operator">...</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><hr><ol><li>下载：<code>npm install eslint eslint-webpack-plugin --save-dev</code></li><li>把插件添加到你的 webpack 配置：</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> ESLintPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;eslint-webpack-plugin&#39;</span><span class="token punctuation">)</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">// ...</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token keyword">new</span> <span class="token class-name">ESLintPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      <span class="token comment">// 检测哪些文件</span>\n      context<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;src&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token comment">// 自动修复代码</span>\n      fix<span class="token operator">:</span> <span class="token boolean">true</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">]</span>\n  <span class="token comment">// ...</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><ol start="3"><li><em>.eslintrc.js</em>：</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token keyword">extends</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;eslint:recommended&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  env<span class="token operator">:</span> <span class="token punctuation">{</span>\n    node<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//  启用 node 中全局变量</span>\n    browser<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token comment">// 启用浏览器中全局变量</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  parserOptions<span class="token operator">:</span> <span class="token punctuation">{</span>\n    ecmaVersion<span class="token operator">:</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token comment">// es6</span>\n    sourceType<span class="token operator">:</span> <span class="token string">&#39;module&#39;</span> <span class="token comment">// es module</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  rules<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token string">&#39;no-var&#39;</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token comment">// 不能使用 var 定义变量</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><ol start="4"><li><em>webpack</em> 后，成功运行！一个小知识点：可以在一行代码上面添加注释 <code>// eslint-disable-next-line</code>，这样就能忽略该行代码的 eslint 检查</li><li>以下代码会报错：</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token number">10</span> <span class="token comment">// 使用 var 定义变量</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ol start="6"><li>由于 vscode 的 eslint 会对 dist 文件夹内容进行检查、报错。解决办法：创建一个 <code>.eslintignore</code> 文件：</li></ol><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>dist\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><br><h3 id="_2-9-js-兼容性处理-babel" tabindex="-1"><a class="header-anchor" href="#_2-9-js-兼容性处理-babel" aria-hidden="true">#</a> 2.9 js 兼容性处理 babel</h3>',15),g=(0,p.Uk)("兼容全部 js："),h={href:"https://babel.docschina.org/docs/en/babel-preset-env/",target:"_blank",rel:"noopener noreferrer"},v=(0,p.Uk)("@babel/preset-env · Babel 中文文档 (docschina.org)"),x=(0,p.uE)('<p><strong>配置文件写法</strong>：</p><ul><li><code>babel.config.*</code>：<code>babal.config.js</code>、<code>babel.config.json</code></li><li><code>.babelrc.*</code>：<code>.babelrc</code>、<code>.babelrc.js</code>、<code>.babelrc.json</code></li></ul><ol><li>下载：<code>npm install -D babel-loader @babel/core @babel/preset-env</code></li><li>在 <em>webpack.config.js</em> 中配置</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>module<span class="token operator">:</span> <span class="token punctuation">{</span>\n  rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.js$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n      exclude<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">node_modules</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n      loader<span class="token operator">:</span> <span class="token string">&#39;babel-loader&#39;</span><span class="token punctuation">,</span>\n      <span class="token comment">// 下面这个可以在外面单独配置(babel.config.js、.babelrc.json...)</span>\n      options<span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 智能预设：只能处理 es6 的语法</span>\n        presets<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;@babel/preset-env&#39;</span><span class="token punctuation">]</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><ol start="3"><li>结果：</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 原先</span>\n<span class="token keyword">const</span> <span class="token function-variable function">add</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> x <span class="token operator">+</span> y\n<span class="token punctuation">}</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n\n<span class="token comment">// 现在</span>\n<span class="token function">eval</span><span class="token punctuation">(</span>\n  <span class="token string">&#39;var add = function add(x, y) {\\n  return x + y;\\n};\\n\\nconsole.log(add(2, 5));\\n\\n//# sourceURL=webpack:///./src/js/index.js?&#39;</span>\n<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><blockquote><p>可以不直接使用 options 里的 presets，而是新建一个 <em>babel.config.js</em> 去配置预设</p></blockquote><ol><li><em>webpack.config.js</em>：</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">{</span>\n  test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.js$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n  use<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;babel-loader&#39;</span><span class="token punctuation">]</span>\n  <span class="token comment">// use: [{</span>\n  <span class="token comment">//   loader: &#39;babel-loader&#39;,</span>\n  <span class="token comment">//   options: {</span>\n  <span class="token comment">//     presets: [&#39;@babel/preset-env&#39;, {</span>\n  <span class="token comment">//       targets: {chrome: 91}</span>\n  <span class="token comment">//     }]</span>\n  <span class="token comment">//   }</span>\n  <span class="token comment">// }]</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><ol start="2"><li><em>babel.config.js</em>：</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  presets<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;@babel/preset-env&#39;</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><br><h3 id="_2-10-devserver" tabindex="-1"><a class="header-anchor" href="#_2-10-devserver" aria-hidden="true">#</a> 2.10 devServer</h3><p>方法一：</p><ol><li>下载 <code>webpack-dev-server</code>：<code>npm i webpack-dev-server -D</code>，使用 <code>npx webpack server</code> 就能运行该包</li><li>在与 entry、output、module、plugins、mode 同级的下面添加代码创建开发服务器：</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code> devServer<span class="token operator">:</span> <span class="token punctuation">{</span>\n  <span class="token keyword">static</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    directory<span class="token operator">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;build&#39;</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token comment">// 启动 gzip 压缩</span>\n  compress<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  <span class="token comment">// 服务器域名</span>\n  host<span class="token operator">:</span> <span class="token string">&#39;localhost&#39;</span><span class="token punctuation">,</span>\n  <span class="token comment">// 端口号,</span>\n  port<span class="token operator">:</span> <span class="token number">3000</span><span class="token punctuation">,</span>\n  <span class="token comment">// 自动打开浏览器</span>\n  open<span class="token operator">:</span> <span class="token boolean">true</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><ol start="3"><li>输入网址：<code>localhost:3000</code>，即可访问打包后的页面（支持热刷新）</li><li>配置 <em>package.json</em> 可以快速运行：（若没有 <code>--config xxx</code>，则为默认的 <em>webpack.config.js</em>）</li></ol><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token property">&quot;serve&quot;</span><span class="token operator">:</span> <span class="token string">&quot;webpack serve --config lg.webpack.js&quot;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><hr><p>方法二：（<strong>不推荐</strong>）要搭配 live server 插件使用，不足：① 当一个文件改变，所有源代码都会重新编译，效率差；② 每次编译成功之后都要需要进行文件读写；③live server 为 vscode 生态的，非 webpack 生态的；④ 不能实现局部刷新</p><ol><li><em>package.json</em>：其中 <code>--config lg.webpack.js</code> 只是为了改 <em>webpack.config.js</em> 的名字，<code>--watch</code> 才是实现热刷新</li></ol><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token property">&quot;build&quot;</span><span class="token operator">:</span> <span class="token string">&quot;webpack --config lg.webpack.js --watch&quot;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ol start="2"><li>或者，在 <em>webpack.config.js</em> 中：</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>watch<span class="token operator">:</span> <span class="token boolean">true</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><br><h3 id="_2-11-总结前面" tabindex="-1"><a class="header-anchor" href="#_2-11-总结前面" aria-hidden="true">#</a> 2.11 总结前面</h3><blockquote><p>开发环境配置：能让代码运行即可</p></blockquote><p>*webpack.dev.js：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> ESLintPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;eslint-webpack-plugin&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;html-webpack-plugin&#39;</span><span class="token punctuation">)</span>\n\n<span class="token doc-comment comment">/**\n * <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;webpack&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Configuration<span class="token punctuation">}</span></span>\n */</span>\n<span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 虽然文件位于 config 目录下，但是运行时仍然是在根目录下，所以不需要回到上一级</span>\n  entry<span class="token operator">:</span> <span class="token string">&#39;./src/main.js&#39;</span><span class="token punctuation">,</span>\n  <span class="token comment">// 输出</span>\n  output<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 开发模式没有输出，因为是在内存编译的</span>\n    path<span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span>\n    <span class="token comment">// 入口文件打包输出文件名</span>\n    filename<span class="token operator">:</span> <span class="token string">&#39;static/js/main.js&#39;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token comment">// 加载器</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token comment">// loader 的配置</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.css$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span> <span class="token comment">// 只检测 .css 文件</span>\n        use<span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token comment">// 将 js 中的 css 通过创建 style 标签添加到 html 中生效</span>\n          <span class="token string">&#39;style-loader&#39;</span><span class="token punctuation">,</span>\n          <span class="token comment">// 将 css 资源编译成 commentjs 的模块到 js 中</span>\n          <span class="token string">&#39;css-loader&#39;</span>\n        <span class="token punctuation">]</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.less$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n        use<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;style-loader&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;css-loader&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;less-loader&#39;</span><span class="token punctuation">]</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.s[ac]ss$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n        use<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;style-loader&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;css-loader&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;sass-loader&#39;</span><span class="token punctuation">]</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.(png|jpe?g|gif|webp|svg)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n        type<span class="token operator">:</span> <span class="token string">&#39;asset&#39;</span><span class="token punctuation">,</span>\n        parser<span class="token operator">:</span> <span class="token punctuation">{</span>\n          dataUrlCondition<span class="token operator">:</span> <span class="token punctuation">{</span>\n            maxSize<span class="token operator">:</span> <span class="token number">30</span> <span class="token operator">*</span> <span class="token number">1024</span>\n          <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        generator<span class="token operator">:</span> <span class="token punctuation">{</span>\n          <span class="token comment">// 输出图片名称</span>\n          filename<span class="token operator">:</span> <span class="token string">&#39;static/images/[hash:8][ext][query]&#39;</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.(ttf|woff2?|mp3|mp4|avi)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n        type<span class="token operator">:</span> <span class="token string">&#39;asset/resource&#39;</span><span class="token punctuation">,</span>\n        generator<span class="token operator">:</span> <span class="token punctuation">{</span>\n          filename<span class="token operator">:</span> <span class="token string">&#39;static/media/[hash:10][ext][query]&#39;</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.js$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n        exclude<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">node_modules</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token comment">// 排除 node_modules 中的 js 文件</span>\n        loader<span class="token operator">:</span> <span class="token string">&#39;babel-loader&#39;</span><span class="token punctuation">,</span>\n        options<span class="token operator">:</span> <span class="token punctuation">{</span>\n          presets<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;@babel/preset-env&#39;</span><span class="token punctuation">]</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token comment">// plugin 的配置</span>\n    <span class="token keyword">new</span> <span class="token class-name">ESLintPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      <span class="token comment">// 检测哪些文件</span>\n      context<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;../src&#39;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      <span class="token comment">// 模板，以 public/index.html 文件为模板创建新的 html 文件</span>\n      <span class="token comment">// 特点：1.结构与原来一致；2.自动引入打包输出的资源</span>\n      template<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;../public/index.html&#39;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  mode<span class="token operator">:</span> <span class="token string">&#39;development&#39;</span><span class="token punctuation">,</span>\n  devServer<span class="token operator">:</span> <span class="token punctuation">{</span>\n    host<span class="token operator">:</span> <span class="token string">&#39;localhost&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 启动服务器域名</span>\n    port<span class="token operator">:</span> <span class="token number">3000</span><span class="token punctuation">,</span>\n    open<span class="token operator">:</span> <span class="token boolean">true</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> config\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br></div></div><p>注意：</p><ol><li><code>webpack</code> 会将打包结果输出出去</li><li><code>npx webpack-dev-server</code> 只会在内存中编译打包，没有输出</li><li>图片资源与字体图标资源如果想打包进特定文件夹，只需要设置 generator 属性的 <em>filename</em>： <code>filename: &#39;imgs/[hash:10].[ext]&#39;</code></li></ol><br><h2 id="_3-生产环境" tabindex="-1"><a class="header-anchor" href="#_3-生产环境" aria-hidden="true">#</a> 3.生产环境</h2><h3 id="_3-1-改造开发模式和生产模式" tabindex="-1"><a class="header-anchor" href="#_3-1-改造开发模式和生产模式" aria-hidden="true">#</a> 3.1 改造开发模式和生产模式</h3><ul><li>由于生产环境要负责运行 bundle，需要优化</li><li>样式如果在 js 中，所以生产环境中需要将 js 里的样式提取出来放到 css 中</li><li>代码需要压缩处理</li><li>兼容性问题需要处理</li><li>总之，开发环境要求速度更快且更加平稳</li></ul><p><em>config/webpack.dev.js</em>：</p><blockquote><ol><li>相对路径不需要更改；</li><li>绝对路径需要到上一级</li></ol><p>运行：<code>npx webpack serve --config ./config/webpack.dev.js</code> 为开发模式</p><p>运行：<code>npx webpack --config ./config/webpack.dev.js</code> 为生产模式</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> ESLintPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;eslint-webpack-plugin&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;html-webpack-plugin&#39;</span><span class="token punctuation">)</span>\n\n<span class="token doc-comment comment">/**\n * <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;webpack&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Configuration<span class="token punctuation">}</span></span>\n */</span>\n<span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 虽然文件位于 config 目录下，但是运行时仍然是在根目录下，所以不需要回到上一级</span>\n  entry<span class="token operator">:</span> <span class="token string">&#39;./src/main.js&#39;</span><span class="token punctuation">,</span>\n  <span class="token comment">// 输出</span>\n  output<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 开发模式没有输出，因为是在内存编译的</span>\n    path<span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span>\n    <span class="token comment">// 入口文件打包输出文件名</span>\n    filename<span class="token operator">:</span> <span class="token string">&#39;static/js/main.js&#39;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token comment">// 加载器</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token comment">// loader 的配置</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.css$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span> <span class="token comment">// 只检测 .css 文件</span>\n        use<span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token comment">// 将 js 中的 css 通过创建 style 标签添加到 html 中生效</span>\n          <span class="token string">&#39;style-loader&#39;</span><span class="token punctuation">,</span>\n          <span class="token comment">// 将 css 资源编译成 commentjs 的模块到 js 中</span>\n          <span class="token string">&#39;css-loader&#39;</span>\n        <span class="token punctuation">]</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.less$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n        use<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;style-loader&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;css-loader&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;less-loader&#39;</span><span class="token punctuation">]</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.s[ac]ss$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n        use<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;style-loader&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;css-loader&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;sass-loader&#39;</span><span class="token punctuation">]</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.(png|jpe?g|gif|webp|svg)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n        type<span class="token operator">:</span> <span class="token string">&#39;asset&#39;</span><span class="token punctuation">,</span>\n        parser<span class="token operator">:</span> <span class="token punctuation">{</span>\n          dataUrlCondition<span class="token operator">:</span> <span class="token punctuation">{</span>\n            maxSize<span class="token operator">:</span> <span class="token number">30</span> <span class="token operator">*</span> <span class="token number">1024</span>\n          <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        generator<span class="token operator">:</span> <span class="token punctuation">{</span>\n          <span class="token comment">// 输出图片名称</span>\n          filename<span class="token operator">:</span> <span class="token string">&#39;static/images/[hash:8][ext][query]&#39;</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.(ttf|woff2?|mp3|mp4|avi)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n        type<span class="token operator">:</span> <span class="token string">&#39;asset/resource&#39;</span><span class="token punctuation">,</span>\n        generator<span class="token operator">:</span> <span class="token punctuation">{</span>\n          filename<span class="token operator">:</span> <span class="token string">&#39;static/media/[hash:10][ext][query]&#39;</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.js$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n        exclude<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">node_modules</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token comment">// 排除 node_modules 中的 js 文件</span>\n        loader<span class="token operator">:</span> <span class="token string">&#39;babel-loader&#39;</span><span class="token punctuation">,</span>\n        options<span class="token operator">:</span> <span class="token punctuation">{</span>\n          presets<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;@babel/preset-env&#39;</span><span class="token punctuation">]</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token comment">// plugin 的配置</span>\n    <span class="token keyword">new</span> <span class="token class-name">ESLintPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      <span class="token comment">// 检测哪些文件</span>\n      context<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;../src&#39;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      <span class="token comment">// 模板，以 public/index.html 文件为模板创建新的 html 文件</span>\n      <span class="token comment">// 特点：1.结构与原来一致；2.自动引入打包输出的资源</span>\n      template<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;../public/index.html&#39;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  mode<span class="token operator">:</span> <span class="token string">&#39;development&#39;</span><span class="token punctuation">,</span>\n  devServer<span class="token operator">:</span> <span class="token punctuation">{</span>\n    host<span class="token operator">:</span> <span class="token string">&#39;localhost&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 启动服务器域名</span>\n    port<span class="token operator">:</span> <span class="token number">3000</span><span class="token punctuation">,</span>\n    open<span class="token operator">:</span> <span class="token boolean">true</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> config\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br></div></div><p><em>config/webpack.prod.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> ESLintPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;eslint-webpack-plugin&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;html-webpack-plugin&#39;</span><span class="token punctuation">)</span>\n\n<span class="token doc-comment comment">/**\n * <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;webpack&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Configuration<span class="token punctuation">}</span></span>\n */</span>\n<span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 入口。entry 要用相对路径</span>\n  entry<span class="token operator">:</span> <span class="token string">&#39;./src/main.js&#39;</span><span class="token punctuation">,</span>\n  <span class="token comment">// 输出</span>\n  output<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token comment">// path 要使用绝对路径</span>\n    path<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;../dist&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token comment">// 入口文件打包输出文件名</span>\n    filename<span class="token operator">:</span> <span class="token string">&#39;static/js/main.js&#39;</span><span class="token punctuation">,</span>\n    clean<span class="token operator">:</span> <span class="token boolean">true</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token comment">// 加载器</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token comment">// loader 的配置</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.css$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span> <span class="token comment">// 只检测 .css 文件</span>\n        use<span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token comment">// 将 js 中的 css 通过创建 style 标签添加到 html 中生效</span>\n          <span class="token string">&#39;style-loader&#39;</span><span class="token punctuation">,</span>\n          <span class="token comment">// 将 css 资源编译成 commentjs 的模块到 js 中</span>\n          <span class="token string">&#39;css-loader&#39;</span>\n        <span class="token punctuation">]</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.less$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n        use<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;style-loader&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;css-loader&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;less-loader&#39;</span><span class="token punctuation">]</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.s[ac]ss$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n        use<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;style-loader&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;css-loader&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;sass-loader&#39;</span><span class="token punctuation">]</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.(png|jpe?g|gif|webp|svg)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n        type<span class="token operator">:</span> <span class="token string">&#39;asset&#39;</span><span class="token punctuation">,</span>\n        parser<span class="token operator">:</span> <span class="token punctuation">{</span>\n          dataUrlCondition<span class="token operator">:</span> <span class="token punctuation">{</span>\n            maxSize<span class="token operator">:</span> <span class="token number">30</span> <span class="token operator">*</span> <span class="token number">1024</span>\n          <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        generator<span class="token operator">:</span> <span class="token punctuation">{</span>\n          <span class="token comment">// 输出图片名称</span>\n          filename<span class="token operator">:</span> <span class="token string">&#39;static/images/[hash:8][ext][query]&#39;</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.(ttf|woff2?|mp3|mp4|avi)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n        type<span class="token operator">:</span> <span class="token string">&#39;asset/resource&#39;</span><span class="token punctuation">,</span>\n        generator<span class="token operator">:</span> <span class="token punctuation">{</span>\n          filename<span class="token operator">:</span> <span class="token string">&#39;static/media/[hash:10][ext][query]&#39;</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.js$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n        exclude<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">node_modules</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token comment">// 排除 node_modules 中的 js 文件</span>\n        loader<span class="token operator">:</span> <span class="token string">&#39;babel-loader&#39;</span><span class="token punctuation">,</span>\n        options<span class="token operator">:</span> <span class="token punctuation">{</span>\n          presets<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;@babel/preset-env&#39;</span><span class="token punctuation">]</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token comment">// plugin 的配置</span>\n    <span class="token keyword">new</span> <span class="token class-name">ESLintPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      <span class="token comment">// 检测哪些文件</span>\n      context<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;../src&#39;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      <span class="token comment">// 模板，以 public/index.html 文件为模板创建新的 html 文件</span>\n      <span class="token comment">// 特点：1.结构与原来一致；2.自动引入打包输出的资源</span>\n      template<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;../public/index.html&#39;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  mode<span class="token operator">:</span> <span class="token string">&#39;production&#39;</span>\n<span class="token punctuation">}</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> config\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br></div></div><blockquote><p>如果嫌敲命令麻烦，可以去 <em>package.json</em> 中配置：</p></blockquote><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n  <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token string">&quot;yarn dev&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;dev&quot;</span><span class="token operator">:</span> <span class="token string">&quot;webpack serve --config ./config/webpack.dev.js&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;build&quot;</span><span class="token operator">:</span> <span class="token string">&quot;webpack --config ./config/webpack.prod.js&quot;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><br><h3 id="_3-2-提取-css-成单独文件" tabindex="-1"><a class="header-anchor" href="#_3-2-提取-css-成单独文件" aria-hidden="true">#</a> 3.2 提取 css 成单独文件</h3><blockquote><p>由于 js 中的 css 会导致闪屏、性能差等问题，故将 css 转为 js 后可以通过提取 js 中的 css 成单独文件</p></blockquote><ol><li>下载 <code>mini-css-extract-plugin</code>：<code>npm i mini-css-extract-plugin -D</code></li><li>引入插件，并如下示：</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>module<span class="token operator">:</span> <span class="token punctuation">{</span>\n  rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.css$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n      use<span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token comment">// 创建 style 标签，将样式放入</span>\n        <span class="token comment">// &#39;style-loader&#39;,</span>\n        <span class="token comment">// 这个 loader 取代 style-loader。作用：提取 js 中的 css 成单独文件</span>\n        MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span>\n        <span class="token comment">// 将 css 文件整合到 js 文件中</span>\n        <span class="token string">&#39;css-loader&#39;</span>\n      <span class="token punctuation">]</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      template<span class="token operator">:</span> <span class="token string">&#39;./src/index.html&#39;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      filename<span class="token operator">:</span> <span class="token string">&#39;static/css/main.css&#39;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><ol start="3"><li>这样 <em>build</em> 里就有一个 <em>css</em> 文件夹，里面有 <em>built.css</em></li></ol><br><h3 id="_3-3-css-兼容性处理" tabindex="-1"><a class="header-anchor" href="#_3-3-css-兼容性处理" aria-hidden="true">#</a> 3.3 css 兼容性处理</h3>',50),f=(0,p.Uk)("browserslist 官方文档："),w={href:"https://github.com/browserslist/browserslist",target:"_blank",rel:"noopener noreferrer"},j=(0,p.Uk)("browserslist/browserslist: 🦔 Share target browsers between different front-end tools, like Autoprefixer, Stylelint and babel-preset-env (github.com)"),y=(0,p._)("p",null,"postcss：JavaScript 转换样式的工具",-1),_=(0,p.uE)('<ol><li>安装 <em>postcss-loader</em>、<em>postcss-preset-env</em>：<code>npm i postcss postcss-loader postcss-preset-env -D</code></li><li><em>webpack.config.js</em> 设置：</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>module<span class="token operator">:</span> <span class="token punctuation">{</span>\n  rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.css$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n      use<span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token comment">// 创建 style 标签，将样式放入</span>\n        <span class="token comment">// &#39;style-loader&#39;,</span>\n        <span class="token comment">// 这个 loader 取代 style-loader。作用：提取 js 中的 css 成单独文件</span>\n        MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span>\n        <span class="token comment">// 将 css 文件整合到 js 文件中</span>\n        <span class="token string">&#39;css-loader&#39;</span><span class="token punctuation">,</span>\n        <span class="token doc-comment comment">/**\n         * css 兼容性处理：postcss --&gt; postcss-loader postcss-preset-env\n         * 帮 postcss 找到 package.json 中的 browserslist 里面的配置，通过配置加载指定的 css 兼容性样式\n         */</span>\n        <span class="token punctuation">{</span>\n          loader<span class="token operator">:</span> <span class="token string">&#39;portcss-loader&#39;</span><span class="token punctuation">,</span>\n          options<span class="token operator">:</span> <span class="token punctuation">{</span>\n            postcssOptions<span class="token operator">:</span> <span class="token punctuation">{</span>\n              plugins<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;postcss-preset-env&#39;</span><span class="token punctuation">]</span>\n            <span class="token punctuation">}</span>\n          <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">]</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><ol start="3"><li><em>package.json</em> 设置：（<em>node_modules</em> 里面在刚创建 webpack 项目时就有 <em>browserslist</em> 文件夹，里面的 <em>index.js</em> 就是向 caniuse 网站发送请求查询浏览器份额，也可以手动输入 <code>npx browserslist</code> 进行查询）</li></ol><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token property">&quot;browserslist&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n  <span class="token property">&quot;development&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token string">&quot;last 1 chrome version&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;last 1 firefox version&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;last 1 safari version&quot;</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;production&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token string">&quot;&gt; 1%&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;not dead&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;last 2 version&quot;</span>\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><ol start="4"><li>除了在 <em>package.json</em> 可以配置，也可以在根目录下创建 <em>.browserslistrc</em> 文件进行配置，里面可以写：</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token number">1</span><span class="token operator">%</span>\nlast <span class="token number">2</span> version\nnot dead\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ol start="5"><li>测试：<em>webpack.config.js</em>：</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 设置 nodejs 环境变量</span>\nprocess<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">=</span> <span class="token string">&#39;production&#39;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ol start="6"><li>打包出来的 <em>built.css</em> 成功兼容许多浏览器！</li></ol><br><h3 id="_3-4-压缩-css" tabindex="-1"><a class="header-anchor" href="#_3-4-压缩-css" aria-hidden="true">#</a> 3.4 压缩 css</h3>',11),q=(0,p.Uk)("官方文档：["),P={href:"https://webpack.docschina.org/plugins/css-minimizer-webpack-plugin/",target:"_blank",rel:"noopener noreferrer"},C=(0,p.Uk)("CssMinimizerWebpackPlugin | webpack 中文文档 (docschina.org)"),S=(0,p.Uk)("]"),$=(0,p.uE)('<ol><li>下载：<code>npm install css-minimizer-webpack-plugin --save-dev</code></li><li>代码如下：</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 1.引入</span>\n<span class="token keyword">const</span> CssMinimizerPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;css-minimizer-webpack-plugin&#39;</span><span class="token punctuation">)</span>\n\n<span class="token comment">// 2.与 module、plugins 等同级(也可以放在 plugins 里面)</span>\noptimization<span class="token operator">:</span> <span class="token punctuation">{</span>\n  minimizer<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token keyword">new</span> <span class="token class-name">CssMinimizerPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token comment">// 在开发环境下启用 CSS 优化</span>\n  minimize<span class="token operator">:</span> <span class="token boolean">true</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><br><h3 id="_3-5-总结前面" tabindex="-1"><a class="header-anchor" href="#_3-5-总结前面" aria-hidden="true">#</a> 3.5 总结前面</h3><p>``webpack.prod.js`：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> ESLintPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;eslint-webpack-plugin&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;html-webpack-plugin&#39;</span><span class="token punctuation">)</span>\n\n<span class="token doc-comment comment">/**\n * <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;webpack&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Configuration<span class="token punctuation">}</span></span>\n */</span>\n<span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 虽然文件位于 config 目录下，但是运行时仍然是在根目录下，所以不需要回到上一级</span>\n  entry<span class="token operator">:</span> <span class="token string">&#39;./src/main.js&#39;</span><span class="token punctuation">,</span>\n  <span class="token comment">// 输出</span>\n  output<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 开发模式没有输出，因为是在内存编译的</span>\n    path<span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span>\n    <span class="token comment">// 入口文件打包输出文件名</span>\n    filename<span class="token operator">:</span> <span class="token string">&#39;static/js/main.js&#39;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token comment">// 加载器</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token comment">// loader 的配置</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.css$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span> <span class="token comment">// 只检测 .css 文件</span>\n        use<span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token comment">// 将 js 中的 css 通过创建 style 标签添加到 html 中生效</span>\n          <span class="token string">&#39;style-loader&#39;</span><span class="token punctuation">,</span>\n          <span class="token comment">// 将 css 资源编译成 commentjs 的模块到 js 中</span>\n          <span class="token string">&#39;css-loader&#39;</span>\n        <span class="token punctuation">]</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.less$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n        use<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;style-loader&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;css-loader&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;less-loader&#39;</span><span class="token punctuation">]</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.s[ac]ss$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n        use<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;style-loader&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;css-loader&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;sass-loader&#39;</span><span class="token punctuation">]</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.(png|jpe?g|gif|webp|svg)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n        type<span class="token operator">:</span> <span class="token string">&#39;asset&#39;</span><span class="token punctuation">,</span>\n        parser<span class="token operator">:</span> <span class="token punctuation">{</span>\n          dataUrlCondition<span class="token operator">:</span> <span class="token punctuation">{</span>\n            maxSize<span class="token operator">:</span> <span class="token number">30</span> <span class="token operator">*</span> <span class="token number">1024</span>\n          <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        generator<span class="token operator">:</span> <span class="token punctuation">{</span>\n          <span class="token comment">// 输出图片名称</span>\n          filename<span class="token operator">:</span> <span class="token string">&#39;static/images/[hash:8][ext][query]&#39;</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.(ttf|woff2?|mp3|mp4|avi)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n        type<span class="token operator">:</span> <span class="token string">&#39;asset/resource&#39;</span><span class="token punctuation">,</span>\n        generator<span class="token operator">:</span> <span class="token punctuation">{</span>\n          filename<span class="token operator">:</span> <span class="token string">&#39;static/media/[hash:10][ext][query]&#39;</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.js$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n        exclude<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">node_modules</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token comment">// 排除 node_modules 中的 js 文件</span>\n        loader<span class="token operator">:</span> <span class="token string">&#39;babel-loader&#39;</span><span class="token punctuation">,</span>\n        options<span class="token operator">:</span> <span class="token punctuation">{</span>\n          presets<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;@babel/preset-env&#39;</span><span class="token punctuation">]</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token comment">// plugin 的配置</span>\n    <span class="token keyword">new</span> <span class="token class-name">ESLintPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      <span class="token comment">// 检测哪些文件</span>\n      context<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;../src&#39;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      <span class="token comment">// 模板，以 public/index.html 文件为模板创建新的 html 文件</span>\n      <span class="token comment">// 特点：1.结构与原来一致；2.自动引入打包输出的资源</span>\n      template<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;../public/index.html&#39;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  mode<span class="token operator">:</span> <span class="token string">&#39;development&#39;</span><span class="token punctuation">,</span>\n  devServer<span class="token operator">:</span> <span class="token punctuation">{</span>\n    host<span class="token operator">:</span> <span class="token string">&#39;localhost&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 启动服务器域名</span>\n    port<span class="token operator">:</span> <span class="token number">3000</span><span class="token punctuation">,</span>\n    open<span class="token operator">:</span> <span class="token boolean">true</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> config\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br></div></div><br><h2 id="_4-webpack-高级" tabindex="-1"><a class="header-anchor" href="#_4-webpack-高级" aria-hidden="true">#</a> 4.webpack 高级</h2><h3 id="_4-1-封装样式-loader-函数" tabindex="-1"><a class="header-anchor" href="#_4-1-封装样式-loader-函数" aria-hidden="true">#</a> 4.1 封装样式 loader 函数</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> ESLintPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;eslint-webpack-plugin&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;html-webpack-plugin&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> MiniCssExtractPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;mini-css-extract-plugin&#39;</span><span class="token punctuation">)</span>\n\n<span class="token comment">// 用来获取处理样式的方法</span>\n<span class="token keyword">function</span> <span class="token function">getStyleLoader</span><span class="token punctuation">(</span><span class="token parameter">pre</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">[</span>\n    <span class="token comment">// 提取 css 成单独的文件</span>\n    MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span>\n    <span class="token comment">// 将 css 资源编译成 commentjs 的模块到 js 中</span>\n    <span class="token string">&#39;css-loader&#39;</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      loader<span class="token operator">:</span> <span class="token string">&#39;postcss-loader&#39;</span><span class="token punctuation">,</span>\n      options<span class="token operator">:</span> <span class="token punctuation">{</span>\n        postcssOptions<span class="token operator">:</span> <span class="token punctuation">{</span>\n          plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n            <span class="token string">&#39;postcss-preset-env&#39;</span> <span class="token comment">// 能解决大多数样式兼容问题</span>\n          <span class="token punctuation">]</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    pre\n    <span class="token comment">// [].filter(Boolean) 等价于 [].filter(item =&gt; Boolean(item))</span>\n  <span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>Boolean<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token doc-comment comment">/**\n * <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;webpack&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Configuration<span class="token punctuation">}</span></span>\n */</span>\n<span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 入口。entry 要用相对路径</span>\n  entry<span class="token operator">:</span> <span class="token string">&#39;./src/main.js&#39;</span><span class="token punctuation">,</span>\n  <span class="token comment">// 输出</span>\n  output<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token comment">// path 要使用绝对路径</span>\n    path<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;../dist&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token comment">// 入口文件打包输出文件名</span>\n    filename<span class="token operator">:</span> <span class="token string">&#39;static/js/main.js&#39;</span><span class="token punctuation">,</span>\n    clean<span class="token operator">:</span> <span class="token boolean">true</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token comment">// 加载器</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token comment">// loader 的配置</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.css$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span> <span class="token comment">// 只检测 .css 文件</span>\n        use<span class="token operator">:</span> <span class="token function">getStyleLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.less$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n        use<span class="token operator">:</span> <span class="token function">getStyleLoader</span><span class="token punctuation">(</span><span class="token string">&#39;less-loader&#39;</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.s[ac]ss$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n        use<span class="token operator">:</span> <span class="token function">getStyleLoader</span><span class="token punctuation">(</span><span class="token string">&#39;sass-loader&#39;</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.(png|jpe?g|gif|webp|svg)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n        type<span class="token operator">:</span> <span class="token string">&#39;asset&#39;</span><span class="token punctuation">,</span>\n        parser<span class="token operator">:</span> <span class="token punctuation">{</span>\n          dataUrlCondition<span class="token operator">:</span> <span class="token punctuation">{</span>\n            maxSize<span class="token operator">:</span> <span class="token number">30</span> <span class="token operator">*</span> <span class="token number">1024</span>\n          <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        generator<span class="token operator">:</span> <span class="token punctuation">{</span>\n          <span class="token comment">// 输出图片名称</span>\n          filename<span class="token operator">:</span> <span class="token string">&#39;static/images/[hash:8][ext][query]&#39;</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.(ttf|woff2?|mp3|mp4|avi)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n        type<span class="token operator">:</span> <span class="token string">&#39;asset/resource&#39;</span><span class="token punctuation">,</span>\n        generator<span class="token operator">:</span> <span class="token punctuation">{</span>\n          filename<span class="token operator">:</span> <span class="token string">&#39;static/media/[hash:10][ext][query]&#39;</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.js$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n        exclude<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">node_modules</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token comment">// 排除 node_modules 中的 js 文件</span>\n        loader<span class="token operator">:</span> <span class="token string">&#39;babel-loader&#39;</span><span class="token punctuation">,</span>\n        options<span class="token operator">:</span> <span class="token punctuation">{</span>\n          presets<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;@babel/preset-env&#39;</span><span class="token punctuation">]</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token comment">// plugin 的配置</span>\n    <span class="token keyword">new</span> <span class="token class-name">ESLintPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      <span class="token comment">// 检测哪些文件</span>\n      context<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;../src&#39;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      <span class="token comment">// 模板，以 public/index.html 文件为模板创建新的 html 文件</span>\n      <span class="token comment">// 特点：1.结构与原来一致；2.自动引入打包输出的资源</span>\n      template<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;../public/index.html&#39;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      filename<span class="token operator">:</span> <span class="token string">&#39;static/css/main.css&#39;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  mode<span class="token operator">:</span> <span class="token string">&#39;production&#39;</span>\n<span class="token punctuation">}</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> config\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br></div></div><br><h3 id="_4-2-source-map" tabindex="-1"><a class="header-anchor" href="#_4-2-source-map" aria-hidden="true">#</a> 4.2 source map</h3><blockquote><p>源代码映射是生成源代码与构建后代码——映射的文件的方案。它会生成一个 xx.map 的文件，里面包含源代码和构建后代码每一行、每一列的映射关系，会通过 xxx.map 文件 ，从构建后的代码出错位置找到映射后源代码出错位置，从而让浏览器提示源代码出错位置，帮助找到错误根源</p><ul><li><p>在开发环境中我们使用：cheap-module-source-map / eval-cheap-module-source-map</p></li><li><p>在生产环境中我们使用：hidden-source-map。</p></li></ul></blockquote><table><thead><tr><th>参数</th><th>参数解释</th></tr></thead><tbody><tr><td>eval</td><td>打包后的模块都使用 <code>eval()</code> 执行，行映射可能不准；不产生独立的 map 文件</td></tr><tr><td>cheap</td><td>map 映射只显示行不显示列，忽略源自 loader 的 source map</td></tr><tr><td>inline</td><td>映射文件以 base64 格式编码，加在 bundle 文件最后，不产生独立的 map 文件</td></tr><tr><td>module</td><td>增加对 loader source map 和第三方模块的映射</td></tr></tbody></table><p><img src="https://pic1.zhimg.com/v2-06b1aefbe840e68158162016fef88354_r.jpg" alt="img"></p><p><strong>source-map</strong></p><p>这个是正版的 source-map 的生成方式，是最全面 main 的生成方式，生成 .map 文件, 会在 bundle 文件末尾追加 sourceURI= 指定 .map 文件路径，会在浏览器开发者工具中看到 webpack://的文件夹。</p><p><strong>eval</strong></p><p>eval 做的就是将源代码包在了 eval 函数中，并在结尾将 sourceURL 指向了源文件通过 webpack 编译后的文件。这种方式并没有生成 map 文件，而且很明显无法在生产环境使用。eval 是在 development 模式下默认的配置，速度非常快，看到的代码可能掺杂一些 webpack 相关的代码。</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">;</span><span class="token punctuation">[</span>\n  <span class="token comment">/* 0 */</span>\n  <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">module<span class="token punctuation">,</span> exports</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">eval</span><span class="token punctuation">(</span><span class="token string">&quot;throw new Error(&#39;error 1&#39;);\\r\\n\\n\\n//# sourceURL=webpack:///./src/index.js?&quot;</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><strong>inline-source-map</strong></p><p>inline 的含义就是不产生独立的 .map 文件，而把 source-map 的内容以 dataURI 的方式追加到 bundle 件末尾。这种方式会造成打包后文件过大，所以 inline 不适用于线上。</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndl...</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>cheap-source-map</strong></p><p>cheap 的含义是忽略列信息，source map 被简化为每行一个映射。这通常意味着每个语句只有一个映射，这么做的好处就是会极大的减少计算量，提升打包速度，与压缩后的代码组合后，映射关系是不可能实现的，因为压缩工具通常只会输出一行。所以 cheap 方式也是不适合生产环境的。</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&quot;mappings&quot;</span><span class="token operator">:</span> <span class="token string">&quot;;;AAAA,AACA,AADA,AADA,AAFA,AAAA,AAAA&quot;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>cheap-module-source-map</strong></p><p>module 的作用是 map 到 loader 处理前的文件，如果不加 module, 实际上是 map 到源文件经过对应 loader 处理后的样子。简单来说，如果不加 module，sourcesContent 中就是 var，如果加入 module，会是 var 经过 loader 前的样子，可能是 let 或是 const。</p><p>webpack 的大部分配置都是 inline，cheap 和 module 这几种的排列组合，就不一一分析了。</p><p><strong>hidden-source-map</strong></p><p>以上的几种方式，都会在打包后文件的末尾增加 sourceURL，也就是说，浏览器端是可以拿到 source map 文件的，也就存在源码泄露的可能，hidden-source-map，就是不在 bundle 文件结尾处追加 sourceURL 指定其 sourcemap 文件的位置，但是仍然会生成 sourcemap 文件。这样，浏览器开发者工具就无法应用 sourcemap, 目的是避免把 sourcemap 文件发布到生产环境，造成源码泄露。生产环境应该用错误报告工具结合 sourcemap 文件来查找问题。</p><p><strong>nosources-source-map</strong></p><p>sourcemap 中不带有源码，这样，sourcemap 可以部署到生产环境而不会造成源码泄露，同时一旦出了问题，error stacks 中会显示准确的错误信息，比如发生在哪个源文件的哪一行。其实就是去掉了 map 文件中的 sourcesContent 字段。</p><br><h3 id="_4-3-提升打包构建速度-hmr" tabindex="-1"><a class="header-anchor" href="#_4-3-提升打包构建速度-hmr" aria-hidden="true">#</a> 4.3 提升打包构建速度 - HMR</h3><blockquote><p>开发时候如果修改了其中一个模块代码，webpack 会默认将所有模块全部重新打包编译，速度很慢。HotModuleReplacement（热模块替换）能在程序运行时替换、添加和删除模块，而无需加载整个页面</p></blockquote><p><em>webpack.dev.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>devServer<span class="token operator">:</span> <span class="token punctuation">{</span>\n  host<span class="token operator">:</span> <span class="token string">&#39;localhost&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 启动服务器域名</span>\n    port<span class="token operator">:</span> <span class="token number">3000</span><span class="token punctuation">,</span>\n      open<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        hot<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token comment">// 热模块替换，默认是开启的</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><blockquote><p>style-loader 自带热模块替换，但是 js 默认不行。解决办法如下：</p></blockquote><p><em>main.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>module<span class="token punctuation">.</span>hot<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 判断是否支持热模块替换功能</span>\n  <span class="token comment">// 实际开发项目时，会有 vue-loader、react-hot-loader 等 loader 来帮助进行模块热替换</span>\n  module<span class="token punctuation">.</span>hot<span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span><span class="token string">&#39;./js/count&#39;</span><span class="token punctuation">)</span>\n  module<span class="token punctuation">.</span>hot<span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span><span class="token string">&#39;./js/sum&#39;</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><br><h3 id="_4-4-oneof" tabindex="-1"><a class="header-anchor" href="#_4-4-oneof" aria-hidden="true">#</a> 4.4 OneOf</h3><blockquote><p>打包每个文件都会经过所有 loader 处理，虽然因为 <code>test</code> 正则原因实际没有处理上，但是都要过一遍，比较慢</p></blockquote><p><em>webpack.dev.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> ESLintPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;eslint-webpack-plugin&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;html-webpack-plugin&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> MiniCssExtractPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;mini-css-extract-plugin&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> CssMinimizerPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;css-minimizer-webpack-plugin&#39;</span><span class="token punctuation">)</span>\n\n<span class="token comment">// 用来获取处理样式的方法</span>\n<span class="token keyword">function</span> <span class="token function">getStyleLoader</span><span class="token punctuation">(</span><span class="token parameter">pre</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">[</span>\n    <span class="token comment">// 提取 css 成单独的文件</span>\n    MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span>\n    <span class="token comment">// 将 css 资源编译成 commentjs 的模块到 js 中</span>\n    <span class="token string">&#39;css-loader&#39;</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      loader<span class="token operator">:</span> <span class="token string">&#39;postcss-loader&#39;</span><span class="token punctuation">,</span>\n      options<span class="token operator">:</span> <span class="token punctuation">{</span>\n        postcssOptions<span class="token operator">:</span> <span class="token punctuation">{</span>\n          plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n            <span class="token string">&#39;postcss-preset-env&#39;</span> <span class="token comment">// 能解决大多数样式兼容问题</span>\n          <span class="token punctuation">]</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    pre\n    <span class="token comment">// [].filter(Boolean) 等价于 [].filter(item =&gt; Boolean(item))</span>\n  <span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>Boolean<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token doc-comment comment">/**\n * <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;webpack&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Configuration<span class="token punctuation">}</span></span>\n */</span>\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 入口。entry 要用相对路径</span>\n  entry<span class="token operator">:</span> <span class="token string">&#39;./src/main.js&#39;</span><span class="token punctuation">,</span>\n  <span class="token comment">// 输出</span>\n  output<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token comment">// path 要使用绝对路径</span>\n    path<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;../dist&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token comment">// 入口文件打包输出文件名</span>\n    filename<span class="token operator">:</span> <span class="token string">&#39;static/js/main.js&#39;</span><span class="token punctuation">,</span>\n    clean<span class="token operator">:</span> <span class="token boolean">true</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token comment">// 加载器</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        oneOf<span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token comment">// loader 的配置</span>\n          <span class="token punctuation">{</span>\n            test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.css$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span> <span class="token comment">// 只检测 .css 文件</span>\n            use<span class="token operator">:</span> <span class="token function">getStyleLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.less$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n            use<span class="token operator">:</span> <span class="token function">getStyleLoader</span><span class="token punctuation">(</span><span class="token string">&#39;less-loader&#39;</span><span class="token punctuation">)</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.s[ac]ss$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n            use<span class="token operator">:</span> <span class="token function">getStyleLoader</span><span class="token punctuation">(</span><span class="token string">&#39;sass-loader&#39;</span><span class="token punctuation">)</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.(png|jpe?g|gif|webp|svg)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n            type<span class="token operator">:</span> <span class="token string">&#39;asset&#39;</span><span class="token punctuation">,</span>\n            parser<span class="token operator">:</span> <span class="token punctuation">{</span>\n              dataUrlCondition<span class="token operator">:</span> <span class="token punctuation">{</span>\n                maxSize<span class="token operator">:</span> <span class="token number">30</span> <span class="token operator">*</span> <span class="token number">1024</span>\n              <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            generator<span class="token operator">:</span> <span class="token punctuation">{</span>\n              <span class="token comment">// 输出图片名称</span>\n              filename<span class="token operator">:</span> <span class="token string">&#39;static/images/[hash:8][ext][query]&#39;</span>\n            <span class="token punctuation">}</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.(ttf|woff2?|mp3|mp4|avi)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n            type<span class="token operator">:</span> <span class="token string">&#39;asset/resource&#39;</span><span class="token punctuation">,</span>\n            generator<span class="token operator">:</span> <span class="token punctuation">{</span>\n              filename<span class="token operator">:</span> <span class="token string">&#39;static/media/[hash:10][ext][query]&#39;</span>\n            <span class="token punctuation">}</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.js$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n            exclude<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">node_modules</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token comment">// 排除 node_modules 中的 js 文件</span>\n            loader<span class="token operator">:</span> <span class="token string">&#39;babel-loader&#39;</span><span class="token punctuation">,</span>\n            options<span class="token operator">:</span> <span class="token punctuation">{</span>\n              presets<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;@babel/preset-env&#39;</span><span class="token punctuation">]</span>\n            <span class="token punctuation">}</span>\n          <span class="token punctuation">}</span>\n        <span class="token punctuation">]</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token comment">// plugin 的配置</span>\n    <span class="token keyword">new</span> <span class="token class-name">ESLintPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      <span class="token comment">// 检测哪些文件</span>\n      context<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;../src&#39;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      <span class="token comment">// 模板，以 public/index.html 文件为模板创建新的 html 文件</span>\n      <span class="token comment">// 特点：1.结构与原来一致；2.自动引入打包输出的资源</span>\n      template<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;../public/index.html&#39;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      filename<span class="token operator">:</span> <span class="token string">&#39;static/css/main.css&#39;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token keyword">new</span> <span class="token class-name">CssMinimizerPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  mode<span class="token operator">:</span> <span class="token string">&#39;production&#39;</span><span class="token punctuation">,</span>\n  devtool<span class="token operator">:</span> <span class="token string">&#39;hidden-source-map&#39;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br></div></div><br><h3 id="_4-5-include-exclude" tabindex="-1"><a class="header-anchor" href="#_4-5-include-exclude" aria-hidden="true">#</a> 4.5 include/Exclude</h3><ul><li>Include：只处理 xxx 文件</li><li>exclude：排除，除了 xxx 文件以外其他文件都处理</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">{</span>\n  test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.js$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n    <span class="token comment">// exclude: /node_modules/, // 排除 node_modules 中的 js 文件</span>\n    include<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;../src&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      loader<span class="token operator">:</span> <span class="token string">&#39;babel-loader&#39;</span><span class="token punctuation">,</span>\n        options<span class="token operator">:</span> <span class="token punctuation">{</span>\n          presets<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;@babel/preset-env&#39;</span><span class="token punctuation">]</span>\n        <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><br><h3 id="_4-6-cache" tabindex="-1"><a class="header-anchor" href="#_4-6-cache" aria-hidden="true">#</a> 4.6 cache</h3><p><strong>为什么</strong>？</p><p>每次打包 js 都要经过 eslint 检查和 babel 编译，速度比较慢。可以缓存之前的 eslint 检查和 babel 编译结果。这样第二次打包就会很快了</p><p><strong>是什么</strong>？</p><p>对 eslint 检查和 babel 编译结果进行缓存</p><p><strong>babel 开启</strong>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">{</span>\n  test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.js$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n    <span class="token comment">// exclude: /node_modules/, // 排除 node_modules 中的 js 文件</span>\n    include<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;../src&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      loader<span class="token operator">:</span> <span class="token string">&#39;babel-loader&#39;</span><span class="token punctuation">,</span>\n        options<span class="token operator">:</span> <span class="token punctuation">{</span>\n          cacheDirectory<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 开启 babel 缓存</span>\n            cacheCompression<span class="token operator">:</span> <span class="token boolean">false</span> <span class="token comment">// 关闭缓存文件压缩</span>\n        <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p><strong>eslint 开启</strong>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// plugin 的配置</span>\n<span class="token keyword">new</span> <span class="token class-name">ESLintPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token comment">// 检测哪些文件</span>\n  context<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;../src&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  exclude<span class="token operator">:</span> <span class="token string">&#39;node_modules&#39;</span><span class="token punctuation">,</span>\n  cache<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 开启缓存</span>\n  cacheLocation<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;../node_modules/.cache/eslintcache&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 缓存位置</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><br><h3 id="_4-7-多进程-thread" tabindex="-1"><a class="header-anchor" href="#_4-7-多进程-thread" aria-hidden="true">#</a> 4.7 多进程 thread</h3><ol><li>获取 cpu 核数：</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> os <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;os&#39;</span><span class="token punctuation">)</span>\n<span class="token comment">// cpu 核数</span>\n<span class="token keyword">const</span> threads <span class="token operator">=</span> os<span class="token punctuation">.</span><span class="token function">cpus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ol start="2"><li>下载包：<code>yarn add thread-loader -D</code></li><li>使用：</li></ol><p><em>webpack.prod.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> os <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;os&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> ESLintPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;eslint-webpack-plugin&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;html-webpack-plugin&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> MiniCssExtractPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;mini-css-extract-plugin&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> CssMinimizerPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;css-minimizer-webpack-plugin&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> TerserWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;terser-webpack-plugin&#39;</span><span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> threads <span class="token operator">=</span> os<span class="token punctuation">.</span><span class="token function">cpus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length\n\n<span class="token comment">// 用来获取处理样式的方法</span>\n<span class="token keyword">function</span> <span class="token function">getStyleLoader</span><span class="token punctuation">(</span><span class="token parameter">pre</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">[</span>\n    <span class="token comment">// 提取 css 成单独的文件</span>\n    MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span>\n    <span class="token comment">// 将 css 资源编译成 commentjs 的模块到 js 中</span>\n    <span class="token string">&#39;css-loader&#39;</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      loader<span class="token operator">:</span> <span class="token string">&#39;postcss-loader&#39;</span><span class="token punctuation">,</span>\n      options<span class="token operator">:</span> <span class="token punctuation">{</span>\n        postcssOptions<span class="token operator">:</span> <span class="token punctuation">{</span>\n          plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n            <span class="token string">&#39;postcss-preset-env&#39;</span> <span class="token comment">// 能解决大多数样式兼容问题</span>\n          <span class="token punctuation">]</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    pre\n    <span class="token comment">// [].filter(Boolean) 等价于 [].filter(item =&gt; Boolean(item))</span>\n  <span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>Boolean<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token doc-comment comment">/**\n * <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;webpack&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Configuration<span class="token punctuation">}</span></span>\n */</span>\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 入口。entry 要用相对路径</span>\n  entry<span class="token operator">:</span> <span class="token string">&#39;./src/main.js&#39;</span><span class="token punctuation">,</span>\n  <span class="token comment">// 输出</span>\n  output<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token comment">// path 要使用绝对路径</span>\n    path<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;../dist&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token comment">// 入口文件打包输出文件名</span>\n    filename<span class="token operator">:</span> <span class="token string">&#39;static/js/main.js&#39;</span><span class="token punctuation">,</span>\n    clean<span class="token operator">:</span> <span class="token boolean">true</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token comment">// 加载器</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        oneOf<span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token comment">// loader 的配置</span>\n          <span class="token punctuation">{</span>\n            test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.css$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span> <span class="token comment">// 只检测 .css 文件</span>\n            use<span class="token operator">:</span> <span class="token function">getStyleLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.less$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n            use<span class="token operator">:</span> <span class="token function">getStyleLoader</span><span class="token punctuation">(</span><span class="token string">&#39;less-loader&#39;</span><span class="token punctuation">)</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.s[ac]ss$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n            use<span class="token operator">:</span> <span class="token function">getStyleLoader</span><span class="token punctuation">(</span><span class="token string">&#39;sass-loader&#39;</span><span class="token punctuation">)</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.(png|jpe?g|gif|webp|svg)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n            type<span class="token operator">:</span> <span class="token string">&#39;asset&#39;</span><span class="token punctuation">,</span>\n            parser<span class="token operator">:</span> <span class="token punctuation">{</span>\n              dataUrlCondition<span class="token operator">:</span> <span class="token punctuation">{</span>\n                maxSize<span class="token operator">:</span> <span class="token number">30</span> <span class="token operator">*</span> <span class="token number">1024</span>\n              <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            generator<span class="token operator">:</span> <span class="token punctuation">{</span>\n              <span class="token comment">// 输出图片名称</span>\n              filename<span class="token operator">:</span> <span class="token string">&#39;static/images/[hash:8][ext][query]&#39;</span>\n            <span class="token punctuation">}</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.(ttf|woff2?|mp3|mp4|avi)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n            type<span class="token operator">:</span> <span class="token string">&#39;asset/resource&#39;</span><span class="token punctuation">,</span>\n            generator<span class="token operator">:</span> <span class="token punctuation">{</span>\n              filename<span class="token operator">:</span> <span class="token string">&#39;static/media/[hash:10][ext][query]&#39;</span>\n            <span class="token punctuation">}</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.js$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n            <span class="token comment">// exclude: /node_modules/, // 排除 node_modules 中的 js 文件</span>\n            include<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;../src&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            use<span class="token operator">:</span> <span class="token punctuation">[</span>\n              <span class="token punctuation">{</span>\n                loader<span class="token operator">:</span> <span class="token string">&#39;thread-loader&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 开启多进程</span>\n                options<span class="token operator">:</span> <span class="token punctuation">{</span>\n                  workers<span class="token operator">:</span> threads <span class="token comment">// 进程数量</span>\n                <span class="token punctuation">}</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n              <span class="token punctuation">{</span>\n                loader<span class="token operator">:</span> <span class="token string">&#39;babel-loader&#39;</span><span class="token punctuation">,</span>\n                options<span class="token operator">:</span> <span class="token punctuation">{</span>\n                  cacheDirectory<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 开启 babel 缓存</span>\n                  cacheCompression<span class="token operator">:</span> <span class="token boolean">false</span> <span class="token comment">// 关闭缓存文件压缩</span>\n                <span class="token punctuation">}</span>\n              <span class="token punctuation">}</span>\n            <span class="token punctuation">]</span>\n          <span class="token punctuation">}</span>\n        <span class="token punctuation">]</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token comment">// plugin 的配置</span>\n    <span class="token keyword">new</span> <span class="token class-name">ESLintPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      <span class="token comment">// 检测哪些文件</span>\n      context<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;../src&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      exclude<span class="token operator">:</span> <span class="token string">&#39;node_modules&#39;</span><span class="token punctuation">,</span>\n      cache<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 开启缓存</span>\n      cacheLocation<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;../node_modules/.cache/eslintcache&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      threads <span class="token comment">// 开启多进程和设置进程数量</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      <span class="token comment">// 模板，以 public/index.html 文件为模板创建新的 html 文件</span>\n      <span class="token comment">// 特点：1.结构与原来一致；2.自动引入打包输出的资源</span>\n      template<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;../public/index.html&#39;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      filename<span class="token operator">:</span> <span class="token string">&#39;static/css/main.css&#39;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token comment">// new CssMinimizerPlugin(),</span>\n    <span class="token comment">// new TerserWebpackPlugin({</span>\n    <span class="token comment">//   parallel: threads // 开启多进程和设置进程数量</span>\n    <span class="token comment">// })</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  mode<span class="token operator">:</span> <span class="token string">&#39;production&#39;</span><span class="token punctuation">,</span>\n  devtool<span class="token operator">:</span> <span class="token string">&#39;hidden-source-map&#39;</span><span class="token punctuation">,</span>\n  optimization<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 压缩的操作</span>\n    minimizer<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token comment">// 压缩 css</span>\n      <span class="token keyword">new</span> <span class="token class-name">CssMinimizerPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token comment">// 压缩 js</span>\n      <span class="token keyword">new</span> <span class="token class-name">TerserWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        parallel<span class="token operator">:</span> threads <span class="token comment">// 开启多进程和设置进程数量</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br></div></div><p><em>webpack.dev.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> os <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;os&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> ESLintPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;eslint-webpack-plugin&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;html-webpack-plugin&#39;</span><span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> threads <span class="token operator">=</span> os<span class="token punctuation">.</span><span class="token function">cpus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length\n\n<span class="token doc-comment comment">/**\n * <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;webpack&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Configuration<span class="token punctuation">}</span></span>\n */</span>\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 虽然文件位于 config 目录下，但是运行时仍然是在根目录下，所以不需要回到上一级</span>\n  entry<span class="token operator">:</span> <span class="token string">&#39;./src/main.js&#39;</span><span class="token punctuation">,</span>\n  <span class="token comment">// 输出</span>\n  output<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 开发模式没有输出，因为是在内存编译的</span>\n    path<span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span>\n    <span class="token comment">// 入口文件打包输出文件名</span>\n    filename<span class="token operator">:</span> <span class="token string">&#39;static/js/main.js&#39;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token comment">// 加载器</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        <span class="token comment">// 每个文件只能被其中一个 loader 配置处理</span>\n        oneOf<span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token comment">// loader 的配置</span>\n          <span class="token punctuation">{</span>\n            test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.css$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span> <span class="token comment">// 只检测 .css 文件</span>\n            use<span class="token operator">:</span> <span class="token punctuation">[</span>\n              <span class="token comment">// 将 js 中的 css 通过创建 style 标签添加到 html 中生效</span>\n              <span class="token string">&#39;style-loader&#39;</span><span class="token punctuation">,</span>\n              <span class="token comment">// 将 css 资源编译成 commentjs 的模块到 js 中</span>\n              <span class="token string">&#39;css-loader&#39;</span>\n            <span class="token punctuation">]</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.less$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n            use<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;style-loader&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;css-loader&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;less-loader&#39;</span><span class="token punctuation">]</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.s[ac]ss$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n            use<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;style-loader&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;css-loader&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;sass-loader&#39;</span><span class="token punctuation">]</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.(png|jpe?g|gif|webp|svg)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n            type<span class="token operator">:</span> <span class="token string">&#39;asset&#39;</span><span class="token punctuation">,</span>\n            parser<span class="token operator">:</span> <span class="token punctuation">{</span>\n              dataUrlCondition<span class="token operator">:</span> <span class="token punctuation">{</span>\n                maxSize<span class="token operator">:</span> <span class="token number">30</span> <span class="token operator">*</span> <span class="token number">1024</span>\n              <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            generator<span class="token operator">:</span> <span class="token punctuation">{</span>\n              <span class="token comment">// 输出图片名称</span>\n              filename<span class="token operator">:</span> <span class="token string">&#39;static/images/[hash:8][ext][query]&#39;</span>\n            <span class="token punctuation">}</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.(ttf|woff2?|mp3|mp4|avi)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n            type<span class="token operator">:</span> <span class="token string">&#39;asset/resource&#39;</span><span class="token punctuation">,</span>\n            generator<span class="token operator">:</span> <span class="token punctuation">{</span>\n              filename<span class="token operator">:</span> <span class="token string">&#39;static/media/[hash:10][ext][query]&#39;</span>\n            <span class="token punctuation">}</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.js$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n            <span class="token comment">// exclude: /node_modules/, // 排除 node_modules 中的 js 文件</span>\n            include<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;../src&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// 只处理 src 下的文件，其他文件不处理</span>\n            use<span class="token operator">:</span> <span class="token punctuation">[</span>\n              <span class="token punctuation">{</span>\n                loader<span class="token operator">:</span> <span class="token string">&#39;thread-loader&#39;</span><span class="token punctuation">,</span>\n                options<span class="token operator">:</span> <span class="token punctuation">{</span>\n                  workers<span class="token operator">:</span> threads\n                <span class="token punctuation">}</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n              <span class="token punctuation">{</span>\n                loader<span class="token operator">:</span> <span class="token string">&#39;babel-loader&#39;</span><span class="token punctuation">,</span>\n                options<span class="token operator">:</span> <span class="token punctuation">{</span>\n                  cacheDirectory<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 开启 babel 缓存</span>\n                  cacheCompression<span class="token operator">:</span> <span class="token boolean">false</span> <span class="token comment">// 关闭缓存文件压缩</span>\n                <span class="token punctuation">}</span>\n              <span class="token punctuation">}</span>\n            <span class="token punctuation">]</span>\n          <span class="token punctuation">}</span>\n        <span class="token punctuation">]</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token comment">// plugin 的配置</span>\n    <span class="token keyword">new</span> <span class="token class-name">ESLintPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      <span class="token comment">// 检测哪些文件</span>\n      context<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;../src&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      exclude<span class="token operator">:</span> <span class="token string">&#39;node_modules&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 默认值</span>\n      cache<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 开启缓存</span>\n      threads\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      <span class="token comment">// 模板，以 public/index.html 文件为模板创建新的 html 文件</span>\n      <span class="token comment">// 特点：1.结构与原来一致；2.自动引入打包输出的资源</span>\n      template<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;../public/index.html&#39;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  mode<span class="token operator">:</span> <span class="token string">&#39;development&#39;</span><span class="token punctuation">,</span>\n  devServer<span class="token operator">:</span> <span class="token punctuation">{</span>\n    host<span class="token operator">:</span> <span class="token string">&#39;localhost&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 启动服务器域名</span>\n    port<span class="token operator">:</span> <span class="token number">3000</span><span class="token punctuation">,</span>\n    open<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    hot<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token comment">// 热模块替换，默认是开启的</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  devtool<span class="token operator">:</span> <span class="token string">&#39;cheap-module-source-map&#39;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br></div></div><br><h3 id="_4-8-tree-shaking" tabindex="-1"><a class="header-anchor" href="#_4-8-tree-shaking" aria-hidden="true">#</a> 4.8 tree-shaking</h3><blockquote><p>开发时会引入一些工具函数库等，如果打包时就会引入整个库 ，但实际上我们可能只使用其中的一小部分的功能。tree shaking 就是用于移除 js 中没有使用的代码。注意：<strong>它依赖 es module</strong></p></blockquote><p>默认是开启的。举例子：</p><p><em>math.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> x <span class="token operator">+</span> y\n<span class="token punctuation">}</span>\n<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">mul</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> x <span class="token operator">*</span> y\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><em>main.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> add <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./js/math&#39;</span>\n\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>这时候打包时，mul 函数将不会被打包。</p><br><h3 id="_4-9-减少-babel-生成文件的体积" tabindex="-1"><a class="header-anchor" href="#_4-9-减少-babel-生成文件的体积" aria-hidden="true">#</a> 4.9 减少 babel 生成文件的体积</h3><blockquote><p><code>@babel/plugin-transform-runtime</code>：禁用了 Babel 自动对每个文件的 runtime 注入，而是引入 <code>@babel/plugin-transform-runtime 并且使所有辅助函数从这里引入</code></p></blockquote><ol><li>安装：<code>yarn add @babel/plugin-transform-runtime -D</code></li><li>代码：</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">{</span>\n  test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.js$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n    <span class="token comment">// exclude: /node_modules/, // 排除 node_modules 中的 js 文件</span>\n    include<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;../src&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// 只处理 src 下的文件，其他文件不处理</span>\n      use<span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n          loader<span class="token operator">:</span> <span class="token string">&#39;thread-loader&#39;</span><span class="token punctuation">,</span>\n          options<span class="token operator">:</span> <span class="token punctuation">{</span>\n            workers<span class="token operator">:</span> threads\n          <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span>\n          loader<span class="token operator">:</span> <span class="token string">&#39;babel-loader&#39;</span><span class="token punctuation">,</span>\n          options<span class="token operator">:</span> <span class="token punctuation">{</span>\n            cacheDirectory<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 开启 babel 缓存</span>\n            cacheCompression<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 关闭缓存文件压缩</span>\n            plugins<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;@babel/plugin-transform-runtime&#39;</span><span class="token punctuation">]</span> <span class="token comment">// 减少代码体积</span>\n          <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><br><h3 id="_4-10-image-minimizer" tabindex="-1"><a class="header-anchor" href="#_4-10-image-minimizer" aria-hidden="true">#</a> 4.10 image Minimizer</h3><blockquote><p>对图片进行压缩。如果项目中都是在线图片，就不需要了 。本地项目静态图片才需要进行压缩</p></blockquote><ol><li>安装 ：<code>yarn add image-minimizer-webpack-plugin imagemin -D</code></li><li>无损压缩的话安装：<code>yarn add imagemin-gifsicle imagemin-jpegtran imagemin-optipng imagemin-svgo -D</code></li><li>有损压缩的话安装：<code>yarn add imagemin-gifsicle imagemin-mozjpeg imagemin-pngquant imagemin-svgo -d</code></li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">new</span> <span class="token class-name">ImageMinimizerPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  minimizer<span class="token operator">:</span> <span class="token punctuation">{</span>\n    implementation<span class="token operator">:</span> ImageMinimizerPlugin<span class="token punctuation">.</span>imageminGenerate<span class="token punctuation">,</span>\n    options<span class="token operator">:</span> <span class="token punctuation">{</span>\n      plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">[</span><span class="token string">&#39;gifsicle&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> interlaced<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">[</span><span class="token string">&#39;jpegtran&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> progressive<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">[</span><span class="token string">&#39;optipng&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> optimizationLevel<span class="token operator">:</span> <span class="token number">5</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">[</span>\n          <span class="token string">&#39;svgo&#39;</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n              <span class="token string">&#39;preset-default&#39;</span><span class="token punctuation">,</span>\n              <span class="token string">&#39;prefixIds&#39;</span><span class="token punctuation">,</span>\n              <span class="token punctuation">{</span>\n                name<span class="token operator">:</span> <span class="token string">&#39;sortAttrs&#39;</span><span class="token punctuation">,</span>\n                params<span class="token operator">:</span> <span class="token punctuation">{</span>\n                  xmlnsOrder<span class="token operator">:</span> <span class="token string">&#39;alphabetica&#39;</span>\n                <span class="token punctuation">}</span>\n              <span class="token punctuation">}</span>\n            <span class="token punctuation">]</span>\n          <span class="token punctuation">}</span>\n        <span class="token punctuation">]</span>\n      <span class="token punctuation">]</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><blockquote><p>由于用的是 mac，无法下载对应程序，就跳过这章了。有需要再来看看</p></blockquote><br><h3 id="_4-11-代码分割-code-split" tabindex="-1"><a class="header-anchor" href="#_4-11-代码分割-code-split" aria-hidden="true">#</a> 4.11 代码分割 code split</h3><blockquote><p>打包代码会把所有 js 文件打包到一个文件中，体积太大。如果只要渲染首页，就应该只加载首页的 js 文件，其他文件不应该加载。所以要将打包生成的文件进行代码分割，生成多个 js 文件，渲染哪个页面就加载哪个 js 文件</p></blockquote><p><strong>功能</strong>：</p><ol><li>分割文件：将打包生成的文件进行分割，生成多个 js 文件</li><li>按需加载：需要哪个文件就加载哪个文件</li></ol><p><em>webpack.config.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;html-webpack-plugin&#39;</span><span class="token punctuation">)</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">// entry: &#39;./src/main.js&#39;, // 只有一个入口文件，单入口</span>\n  entry<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 有多个入口文件，多入口</span>\n    app<span class="token operator">:</span> <span class="token string">&#39;./src/app.js&#39;</span><span class="token punctuation">,</span>\n    main<span class="token operator">:</span> <span class="token string">&#39;./src/main.js&#39;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  output<span class="token operator">:</span> <span class="token punctuation">{</span>\n    path<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;dist&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    filename<span class="token operator">:</span> <span class="token string">&#39;[name].js&#39;</span> <span class="token comment">// webpack 命名方式，[name] 以文件名自己命名</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      template<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;public/index.html&#39;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  mode<span class="token operator">:</span> <span class="token string">&#39;production&#39;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><br><h3 id="_4-12-多入口文件提取公共模块" tabindex="-1"><a class="header-anchor" href="#_4-12-多入口文件提取公共模块" aria-hidden="true">#</a> 4.12 多入口文件提取公共模块</h3><blockquote><p>当 main.js 和 app.js 共同使用了一个函数模块 add()，打包后该模块分别编译到不同入口文件中。这样是不好的。</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;html-webpack-plugin&#39;</span><span class="token punctuation">)</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">// entry: &#39;./src/main.js&#39;, // 只有一个入口文件，单入口</span>\n  entry<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 有多个入口文件，多入口</span>\n    app<span class="token operator">:</span> <span class="token string">&#39;./src/app.js&#39;</span><span class="token punctuation">,</span>\n    main<span class="token operator">:</span> <span class="token string">&#39;./src/main.js&#39;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  output<span class="token operator">:</span> <span class="token punctuation">{</span>\n    path<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;dist&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    filename<span class="token operator">:</span> <span class="token string">&#39;[name].js&#39;</span> <span class="token comment">// webpack 命名方式，[name] 以文件名自己命名</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      template<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;public/index.html&#39;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  mode<span class="token operator">:</span> <span class="token string">&#39;production&#39;</span><span class="token punctuation">,</span>\n  optimization<span class="token operator">:</span> <span class="token punctuation">{</span>\n    splitChunks<span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token comment">// 代码分割配置</span>\n      chunks<span class="token operator">:</span> <span class="token string">&#39;all&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 对所有模块都进行分割</span>\n      <span class="token comment">// // 以下是默认值</span>\n      <span class="token comment">// minSize: 20000, // 分割代码最小的大小</span>\n      <span class="token comment">// minRemainingSize: 0, // 类似于 minSize，最后确保提取的文件大小不能为 0</span>\n      <span class="token comment">// minChunks: 1, // 至少被引用的次数 ，满足条件才会代码分割</span>\n      <span class="token comment">// maxAsyncRequests: 30, // 按需加载时并行加载的文件的最大数量</span>\n      <span class="token comment">// enforceSizeThreshold: 50000, // 超过 50kb 一定会单独打包(此时会忽略 minRemainingSize、maxAsyncRequests、maxInitialRequests)</span>\n      <span class="token comment">// cacheGroups: {</span>\n      <span class="token comment">//   // 组，哪些模块要打包到一个组</span>\n      <span class="token comment">//   defaultVendors: {</span>\n      <span class="token comment">//     // 组名</span>\n      <span class="token comment">//     test: /[\\\\/]node_modules[\\\\/]/, // 需要打包在一起的模块</span>\n      <span class="token comment">//     priority: 10, // 权重(越大越高)</span>\n      <span class="token comment">//     reuseExistingChunk: true // 如果当前 chunk 包含已从主 bundle 中拆分出的模块，则他将被重用，而不是生成新的模块</span>\n      <span class="token comment">//   },</span>\n      <span class="token comment">//   default: {</span>\n      <span class="token comment">//     // 其他没有写的配置会使用上面的默认值</span>\n      <span class="token comment">//     minChunks: 2, // 这里 的 minChunks 权重更大</span>\n      <span class="token comment">//     priority: -20,</span>\n      <span class="token comment">//     reuseExistingChunk: true</span>\n      <span class="token comment">//   }</span>\n      <span class="token comment">// },</span>\n      <span class="token comment">// 修改配置</span>\n      cacheGroups<span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token comment">// // 组，哪些模块需要打包到一个组</span>\n        <span class="token comment">// defaultVendors: {</span>\n        <span class="token comment">//   // 组名</span>\n        <span class="token comment">//   test: /[\\\\/]node_modules[\\\\/]/, // 需要打包到一起的模块</span>\n        <span class="token comment">//   priority: 10, // 权重(越大越高)</span>\n        <span class="token comment">//   reuseExistingChunk: true, // 如果当前 chunk 包含已从主 bundle 中拆分的模块，则它将被重用，而不是生成新的模块</span>\n        <span class="token comment">// }</span>\n        <span class="token keyword">default</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n          <span class="token comment">// 其他没有写的配置会使用上面的默认值</span>\n          minSize<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// 我们定义的文件体积太小了，所以要改打包的最小文件体积</span>\n          minChunks<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>\n          priority<span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>\n          reuseExistingChunk<span class="token operator">:</span> <span class="token boolean">true</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br></div></div><blockquote><p>单文件应用直接用：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>optimization<span class="token operator">:</span> <span class="token punctuation">{</span>\n  splitChunks<span class="token operator">:</span> <span class="token punctuation">{</span>\n    chunks<span class="token operator">:</span> <span class="token string">&#39;all&#39;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>就行</p></blockquote><br><h3 id="_4-13-按需加载、动态导入" tabindex="-1"><a class="header-anchor" href="#_4-13-按需加载、动态导入" aria-hidden="true">#</a> 4.13 按需加载、动态导入</h3><blockquote><p>当网站上有一个按钮，点击后计算出别的模块传来的 count 函数的结果。如果不进行按需加载，则该模块会被提前加载，影响性能。这时可以使用动态加载。</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;btn&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// import 动态导入，会将动态导入的文件代码分割(拆分为单独模块)，在需要使用的时候自动加载</span>\n  <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;./count&#39;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;模块加载成功&#39;</span><span class="token punctuation">,</span> res<span class="token punctuation">.</span><span class="token function">default</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;模块加载失败&#39;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><br><h3 id="_4-14-给模块命名" tabindex="-1"><a class="header-anchor" href="#_4-14-给模块命名" aria-hidden="true">#</a> 4.14 给模块命名</h3><ol><li>魔法命名</li></ol><p><em>main.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;btn&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// eslint 不识别动态导入语法,需要额外增加配置</span>\n  <span class="token comment">// /* webpackChunkName: &quot;math&quot; */ webpack 魔法命名</span>\n  <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token comment">/* webpackChunkName: &quot;math&quot; */</span> <span class="token string">&#39;./js/math&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> mul <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">mul</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p><em>webpack.prod.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>output<span class="token operator">:</span> <span class="token punctuation">{</span>\n  <span class="token comment">// path 要使用绝对路径</span>\n  path<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;../dist&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token comment">// 入口文件打包输出文件名</span>\n  filename<span class="token operator">:</span> <span class="token string">&#39;static/js/main.js&#39;</span><span class="token punctuation">,</span>\n  <span class="token comment">// 打包输出的其他文件命名</span>\n  chunkFilename<span class="token operator">:</span> <span class="token string">&#39;static/js/[name].js&#39;</span><span class="token punctuation">,</span>\n  clean<span class="token operator">:</span> <span class="token boolean">true</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><br><h3 id="_4-15-统一命名" tabindex="-1"><a class="header-anchor" href="#_4-15-统一命名" aria-hidden="true">#</a> 4.15 统一命名</h3><p><strong>已有的命名</strong>：</p><ol><li>output 中的 filename：入口文件输出的文件名</li><li>output 中的 chunkFilename：chunk 块的名字</li><li>图片中 generator 里的 filename：图片的文件名和字体图标的文件名</li><li>plugins 里 MiniCssExtractPlugin 中的 filename：打包样式的文件名</li></ol><p><em>webpack.prod.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> os <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;os&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> ESLintPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;eslint-webpack-plugin&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;html-webpack-plugin&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> MiniCssExtractPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;mini-css-extract-plugin&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> CssMinimizerPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;css-minimizer-webpack-plugin&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> TerserWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;terser-webpack-plugin&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> ImageMinimizerPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;image-minimizer-webpack-plugin&#39;</span><span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> threads <span class="token operator">=</span> os<span class="token punctuation">.</span><span class="token function">cpus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length\n\n<span class="token comment">// 用来获取处理样式的方法</span>\n<span class="token keyword">function</span> <span class="token function">getStyleLoader</span><span class="token punctuation">(</span><span class="token parameter">pre</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">[</span>\n    <span class="token comment">// 提取 css 成单独的文件</span>\n    MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span>\n    <span class="token comment">// 将 css 资源编译成 commentjs 的模块到 js 中</span>\n    <span class="token string">&#39;css-loader&#39;</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      loader<span class="token operator">:</span> <span class="token string">&#39;postcss-loader&#39;</span><span class="token punctuation">,</span>\n      options<span class="token operator">:</span> <span class="token punctuation">{</span>\n        postcssOptions<span class="token operator">:</span> <span class="token punctuation">{</span>\n          plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n            <span class="token string">&#39;postcss-preset-env&#39;</span> <span class="token comment">// 能解决大多数样式兼容问题</span>\n          <span class="token punctuation">]</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    pre\n    <span class="token comment">// [].filter(Boolean) 等价于 [].filter(item =&gt; Boolean(item))</span>\n  <span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>Boolean<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token doc-comment comment">/**\n * <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;webpack&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Configuration<span class="token punctuation">}</span></span>\n */</span>\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 入口。entry 要用相对路径</span>\n  entry<span class="token operator">:</span> <span class="token string">&#39;./src/main.js&#39;</span><span class="token punctuation">,</span>\n  <span class="token comment">// 输出</span>\n  output<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token comment">// path 要使用绝对路径</span>\n    path<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;../dist&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token comment">// 入口文件打包输出文件名</span>\n    filename<span class="token operator">:</span> <span class="token string">&#39;static/js/[name].js&#39;</span><span class="token punctuation">,</span>\n    <span class="token comment">// 打包输出的其他文件命名</span>\n    chunkFilename<span class="token operator">:</span> <span class="token string">&#39;static/js/[name].chunk.js&#39;</span><span class="token punctuation">,</span>\n    <span class="token comment">// 对图片、字体等通过 type: asset 资源进行统一命名</span>\n    assetModuleFilename<span class="token operator">:</span> <span class="token string">&#39;static/media/[hash:10][ext][query]&#39;</span><span class="token punctuation">,</span>\n    clean<span class="token operator">:</span> <span class="token boolean">true</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token comment">// 加载器</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        oneOf<span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token comment">// loader 的配置</span>\n          <span class="token punctuation">{</span>\n            test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.css$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span> <span class="token comment">// 只检测 .css 文件</span>\n            use<span class="token operator">:</span> <span class="token function">getStyleLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.less$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n            use<span class="token operator">:</span> <span class="token function">getStyleLoader</span><span class="token punctuation">(</span><span class="token string">&#39;less-loader&#39;</span><span class="token punctuation">)</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.s[ac]ss$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n            use<span class="token operator">:</span> <span class="token function">getStyleLoader</span><span class="token punctuation">(</span><span class="token string">&#39;sass-loader&#39;</span><span class="token punctuation">)</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.(png|jpe?g|gif|webp|svg)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n            type<span class="token operator">:</span> <span class="token string">&#39;asset&#39;</span><span class="token punctuation">,</span>\n            parser<span class="token operator">:</span> <span class="token punctuation">{</span>\n              dataUrlCondition<span class="token operator">:</span> <span class="token punctuation">{</span>\n                maxSize<span class="token operator">:</span> <span class="token number">30</span> <span class="token operator">*</span> <span class="token number">1024</span>\n              <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span>\n            <span class="token comment">// generator: {</span>\n            <span class="token comment">//   // 输出图片名称</span>\n            <span class="token comment">//   filename: &#39;static/images/[hash:10][ext][query]&#39;</span>\n            <span class="token comment">// }</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.(ttf|woff2?|mp3|mp4|avi)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n            type<span class="token operator">:</span> <span class="token string">&#39;asset/resource&#39;</span>\n            <span class="token comment">// generator: {</span>\n            <span class="token comment">//   filename: &#39;static/media/[hash:10][ext][query]&#39;</span>\n            <span class="token comment">// }</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.js$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n            <span class="token comment">// exclude: /node_modules/, // 排除 node_modules 中的 js 文件</span>\n            include<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;../src&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            use<span class="token operator">:</span> <span class="token punctuation">[</span>\n              <span class="token punctuation">{</span>\n                loader<span class="token operator">:</span> <span class="token string">&#39;thread-loader&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 开启多进程</span>\n                options<span class="token operator">:</span> <span class="token punctuation">{</span>\n                  workers<span class="token operator">:</span> threads <span class="token comment">// 进程数量</span>\n                <span class="token punctuation">}</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n              <span class="token punctuation">{</span>\n                loader<span class="token operator">:</span> <span class="token string">&#39;babel-loader&#39;</span><span class="token punctuation">,</span>\n                options<span class="token operator">:</span> <span class="token punctuation">{</span>\n                  cacheDirectory<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 开启 babel 缓存</span>\n                  cacheCompression<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 关闭缓存文件压缩</span>\n                  plugins<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;@babel/plugin-transform-runtime&#39;</span><span class="token punctuation">]</span> <span class="token comment">// 减少代码体积</span>\n                <span class="token punctuation">}</span>\n              <span class="token punctuation">}</span>\n            <span class="token punctuation">]</span>\n          <span class="token punctuation">}</span>\n        <span class="token punctuation">]</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token comment">// plugin 的配置</span>\n    <span class="token keyword">new</span> <span class="token class-name">ESLintPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      <span class="token comment">// 检测哪些文件</span>\n      context<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;../src&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      exclude<span class="token operator">:</span> <span class="token string">&#39;node_modules&#39;</span><span class="token punctuation">,</span>\n      cache<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 开启缓存</span>\n      cacheLocation<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;../node_modules/.cache/eslintcache&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      threads <span class="token comment">// 开启多进程和设置进程数量</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      <span class="token comment">// 模板，以 public/index.html 文件为模板创建新的 html 文件</span>\n      <span class="token comment">// 特点：1.结构与原来一致；2.自动引入打包输出的资源</span>\n      template<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;../public/index.html&#39;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      filename<span class="token operator">:</span> <span class="token string">&#39;static/css/[name].css&#39;</span><span class="token punctuation">,</span>\n      chunkFilename<span class="token operator">:</span> <span class="token string">&#39;static/css/[name].chunk.css&#39;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token comment">// new CssMinimizerPlugin(),</span>\n    <span class="token comment">// new TerserWebpackPlugin({</span>\n    <span class="token comment">//   parallel: threads // 开启多进程和设置进程数量</span>\n    <span class="token comment">// })</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  mode<span class="token operator">:</span> <span class="token string">&#39;production&#39;</span><span class="token punctuation">,</span>\n  devtool<span class="token operator">:</span> <span class="token string">&#39;hidden-source-map&#39;</span><span class="token punctuation">,</span>\n  optimization<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 压缩的操作</span>\n    minimizer<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token comment">// 压缩 css</span>\n      <span class="token keyword">new</span> <span class="token class-name">CssMinimizerPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token comment">// 压缩 js</span>\n      <span class="token keyword">new</span> <span class="token class-name">TerserWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        parallel<span class="token operator">:</span> threads <span class="token comment">// 开启多进程和设置进程数量</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    splitChunks<span class="token operator">:</span> <span class="token punctuation">{</span>\n      chunks<span class="token operator">:</span> <span class="token string">&#39;all&#39;</span>\n      <span class="token comment">// 其他都用默认值</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br><span class="line-number">146</span><br><span class="line-number">147</span><br><span class="line-number">148</span><br><span class="line-number">149</span><br><span class="line-number">150</span><br><span class="line-number">151</span><br><span class="line-number">152</span><br><span class="line-number">153</span><br><span class="line-number">154</span><br><span class="line-number">155</span><br><span class="line-number">156</span><br></div></div><br><h3 id="_4-16-preload-prefetch" tabindex="-1"><a class="header-anchor" href="#_4-16-preload-prefetch" aria-hidden="true">#</a> 4.16 preload / prefetch</h3><blockquote><p>如果想在浏览器空闲时间，加载后续需要使用的资源 ，就需要使用 preload 和 prefetch 技术</p></blockquote><p><strong>是什么</strong>？</p><ul><li><code>Preload</code>：告诉浏览器立即加载资源</li><li><code>Prefetch</code>：告诉浏览器在空闲时才开始加载资源</li></ul><p><strong>区别</strong>：</p><ul><li><code>Preload</code> 加载优先级高，<code>Prefetch</code> 加载优先级低</li><li><code>Preload</code> 只能加载当前页面需要使用的资源，<code>Prefetch</code> 可以加载当前页面资源，也可以加载下一个页面需要使用的资源</li></ul><p><strong>总结</strong>：</p><ul><li>当前页面优先级高的资源用 <code>Preload</code> 加载</li><li>下一个页面需要使用的资源用 <code>Prefetch</code> 加载</li></ul><hr><ol><li>安装：<code>yarn add @vue/preload-webpack-plugin -D</code></li><li>写入：</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">new</span> <span class="token class-name">PreloadWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  rel<span class="token operator">:</span> <span class="token string">&#39;preload&#39;</span><span class="token punctuation">,</span>\n  <span class="token keyword">as</span><span class="token operator">:</span> <span class="token string">&#39;script&#39;</span>\n  <span class="token comment">// rel: &#39;prefetch&#39;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ol start="3"><li>preload build 之后的内容：</li></ol><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>X-UA-Compatible<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>IE=edge<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>viewport<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>width=device-width,initial-scale=1<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>webpack<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">defer</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>defer<span class="token punctuation">&quot;</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>static/js/main.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>static/js/math.chunk.js<span class="token punctuation">&quot;</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>preload<span class="token punctuation">&quot;</span></span> <span class="token attr-name">as</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>script<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>static/css/main.css<span class="token punctuation">&quot;</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>stylesheet<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>hello webpack<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>box1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>box2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>计算<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><br><h3 id="_4-17-网络缓存-contenthash" tabindex="-1"><a class="header-anchor" href="#_4-17-网络缓存-contenthash" aria-hidden="true">#</a> 4.17 网络缓存 contenthash</h3><blockquote><p>当一个入口文件引用一个 chunk(通过动态引入等方式)文件时，每次 chunk 内容发生改变时，入口文件内容也要重新加载一遍</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 输出</span>\noutput<span class="token operator">:</span> <span class="token punctuation">{</span>\n  <span class="token comment">// path 要使用绝对路径</span>\n  path<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;../dist&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token comment">// 入口文件打包输出文件名</span>\n  filename<span class="token operator">:</span> <span class="token string">&#39;static/js/[name].[contenthash:10].js&#39;</span><span class="token punctuation">,</span>\n  <span class="token comment">// 打包输出的其他文件命名</span>\n  chunkFilename<span class="token operator">:</span> <span class="token string">&#39;static/js/[name].chunk.[contenthash:10].js&#39;</span><span class="token punctuation">,</span>\n  <span class="token comment">// 对图片、字体等通过 type: asset 资源进行统一命名</span>\n  assetModuleFilename<span class="token operator">:</span> <span class="token string">&#39;static/media/[hash:10][ext][query]&#39;</span><span class="token punctuation">,</span>\n  clean<span class="token operator">:</span> <span class="token boolean">true</span>\n<span class="token punctuation">}</span>\n\noptimization<span class="token operator">:</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 压缩的操作</span>\n  minimizer<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token comment">// 压缩 css</span>\n    <span class="token keyword">new</span> <span class="token class-name">CssMinimizerPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token comment">// 压缩 js</span>\n    <span class="token keyword">new</span> <span class="token class-name">TerserWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      parallel<span class="token operator">:</span> threads <span class="token comment">// 开启多进程和设置进程数量</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  splitChunks<span class="token operator">:</span> <span class="token punctuation">{</span>\n    chunks<span class="token operator">:</span> <span class="token string">&#39;all&#39;</span>\n    <span class="token comment">// 其他都用默认值</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token comment">// 当两个或以上的文件引入同一个模块时，当模块发生改变，两文件都会重载，这是应该设置一个 runtimeChunk</span>\n  runtimeChunk<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token function-variable function">name</span><span class="token operator">:</span> <span class="token parameter">entrypoint</span> <span class="token operator">=&gt;</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">runtime-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>entrypoint<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.js</span><span class="token template-punctuation string">`</span></span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div><br><h3 id="_4-18-js-兼容性问题-core-js" tabindex="-1"><a class="header-anchor" href="#_4-18-js-兼容性问题-core-js" aria-hidden="true">#</a> 4.18 js 兼容性问题 Core.js</h3><blockquote><p><code>core-js</code> 专门用来做 ES6 以及以上 API 的 polyfill</p></blockquote><p><strong>完整引用</strong>：</p><blockquote><p>虽然打包后的代码仍有 <code>new Promise()</code> 字样，但是已经是兼容了 ie 浏览器的写法了。完整引入引入了其他兼容的解决方案，所以体积太大，不适合项目开发</p></blockquote><ol><li>安装：<code>yarn add core-js</code></li><li><em>main.js</em> 引入：<code>import &#39;core-js&#39;</code></li></ol><p><strong>按需引入</strong>：</p><p><em>main.js</em> 引入：<code>import &#39;core-js/es/promise&#39;</code></p><p><strong>按需引入且自动引入</strong>：</p><blockquote><p>.browserlistrc 不要设置 ，否则可能会无效</p></blockquote><p><em>babel.config.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 智能预设，能够编译 ES6 的语法</span>\n  presets<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">[</span>\n      <span class="token string">&#39;@babel/preset-env&#39;</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        useBuiltIns<span class="token operator">:</span> <span class="token string">&#39;usage&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 按需加载自动引入</span>\n        corejs<span class="token operator">:</span> <span class="token number">3</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><br><h3 id="_4-19-pwa" tabindex="-1"><a class="header-anchor" href="#_4-19-pwa" aria-hidden="true">#</a> 4.19 PWA</h3><blockquote><p>网络离线时，web 应用就无法访问了。pwa(progressive web application)是一种可以提供类似于 native app(原生应用程序)体验的 web app 技术。离线(offline)时应用程序能够继续运行功能。通过 service workers 技术实现的</p></blockquote><ol><li>安装：<code>yarn add workbox-webpack-plugin -D</code></li><li><em>main.js</em> 写入：</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">&#39;serviceWorker&#39;</span> <span class="token keyword">in</span> navigator<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;load&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    navigator<span class="token punctuation">.</span>serviceWorker\n      <span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token string">&#39;/service-worker.js&#39;</span><span class="token punctuation">)</span>\n      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">registration</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;SW registered: &#39;</span><span class="token punctuation">,</span> registration<span class="token punctuation">)</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span>\n      <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">registrationError</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;SW registration failed: &#39;</span><span class="token punctuation">,</span> registrationError<span class="token punctuation">)</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>`\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><ol start="3"><li>运行：<code>serve dist</code>，运行 build 后的文件，就能实现 pwa 的效果了</li></ol><br><h2 id="_5-其他内容" tabindex="-1"><a class="header-anchor" href="#_5-其他内容" aria-hidden="true">#</a> 5.其他内容</h2><h3 id="_5-1-output-中的-publicpath-和-devserver-中的-publicpath" tabindex="-1"><a class="header-anchor" href="#_5-1-output-中的-publicpath-和-devserver-中的-publicpath" aria-hidden="true">#</a> 5.1 output 中的 publicPath 和 devServer 中的 publicPath</h3><p><strong>强烈建议将 output 里的 publicPath 与 devServer 里的 publicPath 设置为一样的</strong></p><br><h3 id="_5-3-proxy-代理设置" tabindex="-1"><a class="header-anchor" href="#_5-3-proxy-代理设置" aria-hidden="true">#</a> 5.3 proxy 代理设置</h3><p><em>index.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">&#39;axios&#39;</span>\n\naxios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/api/users&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><em>webpack.config.js</em>：（devServer 里面的）</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>proxy<span class="token operator">:</span> <span class="token punctuation">{</span>\n  <span class="token comment">// /api/users</span>\n  <span class="token comment">// http://localhost:4000/api/users =&gt; https://api.github.com/api/users</span>\n  <span class="token string">&#39;/api&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    target<span class="token operator">:</span> <span class="token string">&#39;https://api.github.com&#39;</span><span class="token punctuation">,</span>\n    <span class="token comment">// 如果目标地址为 https://api.github.com/info/users，就需要写成 {&#39;^api&#39;: &#39;info&#39;}</span>\n    pathRewrite<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token string">&#39;^/api&#39;</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token comment">// github 对 4000 端口的请求有判断，所以要欺骗 github</span>\n    changeOrigin<span class="token operator">:</span> <span class="token boolean">true</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><br><h3 id="_5-4-resolve-解析规则" tabindex="-1"><a class="header-anchor" href="#_5-4-resolve-解析规则" aria-hidden="true">#</a> 5.4 resolve 解析规则</h3><p><em>index.js</em>：引入模块时有时候省略后缀名会报错</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">&#39;axios&#39;</span> <span class="token comment">// 从 node_modules 里面找</span>\n<span class="token keyword">import</span> Home <span class="token keyword">from</span> <span class="token string">&#39;./componenets/Home.jsx&#39;</span>\n<span class="token keyword">import</span> About <span class="token keyword">from</span> <span class="token string">&#39;./components/About&#39;</span> <span class="token comment">// 省略了后缀名会报错！</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><em>webpack.config.js</em>：解决办法：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  resolve<span class="token operator">:</span> <span class="token punctuation">{</span>\n    extensions<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;.js&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;.json&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;.wasm&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;.jsx&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;.vue&#39;</span><span class="token punctuation">]</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><em>webpack.config.js</em>：对路径起别名：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>resolve<span class="token operator">:</span> <span class="token punctuation">{</span>\n  extensions<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;.js&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;.vue&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;.jsx&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  alias<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token string">&#39;@&#39;</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;src&#39;</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>这样的话，效果如下：</p><p><em>index.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// import Home from &#39;./components/Home&#39;</span>\n<span class="token keyword">import</span> Home <span class="token keyword">from</span> <span class="token string">&#39;@/coomponents/Home&#39;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><br><h3 id="_5-6-ts-loader-编译-ts" tabindex="-1"><a class="header-anchor" href="#_5-6-ts-loader-编译-ts" aria-hidden="true">#</a> 5.6 ts-loader 编译 TS</h3><ol><li>安装 typescript：<code>npm i -g typescript</code></li><li>初始化 typescript：<code>tsc --init</code>，这时候控制台输入：<code>tsc ./src/index.ts</code> 就能编译出 <em>index.js</em> 在 <em>index.ts</em> 的同级目录下了</li><li>安装 ts-loader：<code>npm i -D ts-loader</code></li><li><em>webpack.config.js</em> 配置：但是，这时候编译不了新的 es6 语法，需要配合 babel-loader 进行编译</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">{</span>\n  test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.ts$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n  use<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;babel-loader&#39;</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ol start="5"><li><em>babel.config.js</em> ：</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  presets<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">[</span>\n      <span class="token string">&#39;@babel/preset-env&#39;</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        useBuiltIns<span class="token operator">:</span> <span class="token string">&#39;usage&#39;</span><span class="token punctuation">,</span>\n        corejs<span class="token operator">:</span> <span class="token number">3</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">[</span><span class="token string">&#39;@babel/preset-typescript&#39;</span><span class="token punctuation">]</span>\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><ol start="6"><li>安装 babel-loader：<code>npm i -D babel-loader @babel/preset-typescript core-js</code></li><li><code>npm run build</code>：编译成功！但是仍然有问题：<strong>在编译阶段不能暴露出语法问题，只有在运行阶段才会报错</strong>，这时候还是得看 ts-loader</li></ol><hr><p>最完美的解决方法：</p><p><em>package.json</em>：只利用 ts-loader 的语法校验功能：</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token property">&quot;build&quot;</span><span class="token operator">:</span> <span class="token string">&quot;npm run ck &amp;&amp; webpack&quot;</span><span class="token punctuation">,</span>\n<span class="token property">&quot;ck&quot;</span><span class="token operator">:</span> <span class="token string">&quot;tsc --noEmit&quot;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><em>webpack.config.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">{</span>\n  test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.ts$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n  use<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;babel-loader&#39;</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><em>babel.config.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  presets<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">[</span>\n      <span class="token string">&#39;@babel/preset-env&#39;</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        useBuiltIns<span class="token operator">:</span> <span class="token string">&#39;usage&#39;</span><span class="token punctuation">,</span>\n        corejs<span class="token operator">:</span> <span class="token number">3</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">[</span><span class="token string">&#39;@babel/preset-typescript&#39;</span><span class="token punctuation">]</span>\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><br><h2 id="_6-reactcli-项目" tabindex="-1"><a class="header-anchor" href="#_6-reactcli-项目" aria-hidden="true">#</a> 6.ReactCli 项目</h2><h3 id="_6-1-使用-history-导致的刷新后路由丢失问题" tabindex="-1"><a class="header-anchor" href="#_6-1-使用-history-导致的刷新后路由丢失问题" aria-hidden="true">#</a> 6.1 使用 history 导致的刷新后路由丢失问题</h3><p><em>devServer.hostoryApiFallback</em>：设置为 true 就行了</p><br><h3 id="_6-2-复制-public-目录下的-favicon-ico-到-dist-目录" tabindex="-1"><a class="header-anchor" href="#_6-2-复制-public-目录下的-favicon-ico-到-dist-目录" aria-hidden="true">#</a> 6.2 复制 public 目录下的 favicon.ico 到 dist 目录</h3><ol><li>安装：<code>yarn add -D copy-webpack-plugin</code></li><li><em>webpack.prod.js</em>：</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// &lt;link rel=&quot;shortcut icon&quot; href=&quot;favicon.ico&quot; type=&quot;image/x-icon&quot; /&gt;</span>\n<span class="token keyword">new</span> <span class="token class-name">CopyPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  patterns<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      from<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;../public&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      to<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;../dist&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      globOptions<span class="token operator">:</span> <span class="token punctuation">{</span>\n        ignore<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;**/index.html&#39;</span><span class="token punctuation">]</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><br><h3 id="_6-3-合并之后的配置" tabindex="-1"><a class="header-anchor" href="#_6-3-合并之后的配置" aria-hidden="true">#</a> 6.3 合并之后的配置</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> EslintWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;eslint-webpack-plugin&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;html-webpack-plugin&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> MiniCssExtractPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;mini-css-extract-plugin&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> CssMinimizerWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;css-minimizer-webpack-plugin&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> TerserWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;terser-webpack-plugin&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> CopyPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;copy-webpack-plugin&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> ReactRefreshWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;@pmmmwh/react-refresh-webpack-plugin&#39;</span><span class="token punctuation">)</span>\n\n<span class="token comment">// 获取 cross-env 定义的环境变量</span>\n<span class="token keyword">const</span> isProduction <span class="token operator">=</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">===</span> <span class="token string">&#39;production&#39;</span>\n\n<span class="token comment">// 返回处理样式 loader 函数</span>\n<span class="token keyword">const</span> <span class="token function-variable function">getStyleLoaders</span> <span class="token operator">=</span> <span class="token parameter">pre</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">[</span>\n    isProduction <span class="token operator">?</span> MiniCssExtractPlugin<span class="token punctuation">.</span>loader <span class="token operator">:</span> <span class="token string">&#39;style-loader&#39;</span><span class="token punctuation">,</span>\n    <span class="token string">&#39;css-loader&#39;</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token comment">// 处理 css 兼容性问题</span>\n      <span class="token comment">// 配合 package.json 中的 browserlist 来指定兼容性</span>\n      loader<span class="token operator">:</span> <span class="token string">&#39;postcss-loader&#39;</span><span class="token punctuation">,</span>\n      options<span class="token operator">:</span> <span class="token punctuation">{</span>\n        postcssOptions<span class="token operator">:</span> <span class="token punctuation">{</span>\n          plugins<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;postcss-preset-env&#39;</span><span class="token punctuation">]</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    pre <span class="token operator">&amp;&amp;</span> <span class="token punctuation">{</span>\n      loader<span class="token operator">:</span> pre<span class="token punctuation">,</span>\n      options<span class="token operator">:</span>\n        pre <span class="token operator">===</span> <span class="token string">&#39;less-loader&#39;</span>\n          <span class="token operator">?</span> <span class="token punctuation">{</span>\n              lessOptions<span class="token operator">:</span> <span class="token punctuation">{</span>\n                <span class="token comment">// 如果使用less-loader@5，请移除 lessOptions 这一级直接配置选项。</span>\n                modifyVars<span class="token operator">:</span> <span class="token punctuation">{</span>\n                  <span class="token string">&#39;primary-color&#39;</span><span class="token operator">:</span> <span class="token string">&#39;#eee&#39;</span><span class="token punctuation">,</span>\n                  <span class="token string">&#39;link-color&#39;</span><span class="token operator">:</span> <span class="token string">&#39;#1DA57A&#39;</span><span class="token punctuation">,</span>\n                  <span class="token string">&#39;border-radius-base&#39;</span><span class="token operator">:</span> <span class="token string">&#39;2px&#39;</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                javascriptEnabled<span class="token operator">:</span> <span class="token boolean">true</span>\n              <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span>\n          <span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>Boolean<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  entry<span class="token operator">:</span> <span class="token string">&#39;./src/main.js&#39;</span><span class="token punctuation">,</span>\n  output<span class="token operator">:</span> <span class="token punctuation">{</span>\n    path<span class="token operator">:</span> isProduction <span class="token operator">?</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;../dist&#39;</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span>\n    filename<span class="token operator">:</span> isProduction <span class="token operator">?</span> <span class="token string">&#39;static/js/[name].[contenthash:10].js&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;static/js/[name].js&#39;</span><span class="token punctuation">,</span>\n    <span class="token comment">// static/js/[name].[contenthash:10].chunk.js</span>\n    chunkFilename<span class="token operator">:</span> isProduction\n      <span class="token operator">?</span> <span class="token string">&#39;static/js/[name].[contenthash:10].chunk.js&#39;</span>\n      <span class="token operator">:</span> <span class="token string">&#39;static/js/[name].chunk.js&#39;</span><span class="token punctuation">,</span>\n    assetModuleFilename<span class="token operator">:</span> <span class="token string">&#39;static/media/[hash:10][ext][query]&#39;</span><span class="token punctuation">,</span>\n    clean<span class="token operator">:</span> <span class="token boolean">true</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token comment">// 处理 css</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.css$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n        use<span class="token operator">:</span> <span class="token function">getStyleLoaders</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token comment">// 处理 less</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.less$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n        use<span class="token operator">:</span> <span class="token function">getStyleLoaders</span><span class="token punctuation">(</span><span class="token string">&#39;less-loader&#39;</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token comment">// 处理 sass</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.s[ac]ss$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n        use<span class="token operator">:</span> <span class="token function">getStyleLoaders</span><span class="token punctuation">(</span><span class="token string">&#39;sass-loader&#39;</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token comment">// 处理 stylus</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.styl$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n        use<span class="token operator">:</span> <span class="token function">getStyleLoaders</span><span class="token punctuation">(</span><span class="token string">&#39;stylus-loader&#39;</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token comment">// 处理图片</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.(jpe?g|png|gif|webp|svg)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n        type<span class="token operator">:</span> <span class="token string">&#39;asset&#39;</span><span class="token punctuation">,</span>\n        parser<span class="token operator">:</span> <span class="token punctuation">{</span>\n          dataUrlCondition<span class="token operator">:</span> <span class="token punctuation">{</span>\n            maxSize<span class="token operator">:</span> <span class="token number">10</span> <span class="token operator">*</span> <span class="token number">1024</span>\n          <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token comment">// 处理其他资源</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.(woff2?|ttf)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n        type<span class="token operator">:</span> <span class="token string">&#39;asset/resource&#39;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token comment">// 处理 js</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.jsx?$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n        include<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;../src&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        loader<span class="token operator">:</span> <span class="token string">&#39;babel-loader&#39;</span><span class="token punctuation">,</span>\n        options<span class="token operator">:</span> <span class="token punctuation">{</span>\n          cacheDirectory<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n          cacheCompression<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n          plugins<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token operator">!</span>isProduction <span class="token operator">&amp;&amp;</span> <span class="token string">&#39;react-refresh/babel&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>Boolean<span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token keyword">new</span> <span class="token class-name">EslintWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      context<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;../src&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      exclude<span class="token operator">:</span> <span class="token string">&#39;node_modules&#39;</span><span class="token punctuation">,</span>\n      cache<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      cacheLocation<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;../node_modules/.cache/.eslintcache&#39;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      template<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;../public/index.html&#39;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    isProduction <span class="token operator">&amp;&amp;</span>\n      <span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        filename<span class="token operator">:</span> <span class="token string">&#39;static/css/[name].[contenthash:10].css&#39;</span><span class="token punctuation">,</span>\n        chunkFilename<span class="token operator">:</span> <span class="token string">&#39;static/css/[name].[contenthash:10].chunk.css&#39;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    isProduction <span class="token operator">&amp;&amp;</span>\n      <span class="token keyword">new</span> <span class="token class-name">CopyPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        patterns<span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token punctuation">{</span>\n            from<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;../public&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            to<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;../dist&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            globOptions<span class="token operator">:</span> <span class="token punctuation">{</span>\n              ignore<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;**/index.html&#39;</span><span class="token punctuation">]</span>\n            <span class="token punctuation">}</span>\n          <span class="token punctuation">}</span>\n        <span class="token punctuation">]</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token operator">!</span>isProduction <span class="token operator">&amp;&amp;</span> <span class="token keyword">new</span> <span class="token class-name">ReactRefreshWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>Boolean<span class="token punctuation">)</span><span class="token punctuation">,</span>\n  mode<span class="token operator">:</span> isProduction <span class="token operator">?</span> <span class="token string">&#39;production&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;development&#39;</span><span class="token punctuation">,</span>\n  devtool<span class="token operator">:</span> isProduction <span class="token operator">?</span> <span class="token string">&#39;hidden-source-map&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;cheap-module-source-map&#39;</span><span class="token punctuation">,</span>\n  optimization<span class="token operator">:</span> <span class="token punctuation">{</span>\n    splitChunks<span class="token operator">:</span> <span class="token punctuation">{</span>\n      chunks<span class="token operator">:</span> <span class="token string">&#39;all&#39;</span><span class="token punctuation">,</span>\n      cacheGroups<span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token comment">// react react-dom react-router-dom 一起打包</span>\n        <span class="token comment">// antd 单独打包</span>\n        <span class="token comment">// 剩下 node_modules 单独打包</span>\n        react<span class="token operator">:</span> <span class="token punctuation">{</span>\n          test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[\\\\/]node_modules[\\\\/]react(.*)?[\\\\/]</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n          name<span class="token operator">:</span> <span class="token string">&#39;chunk-react&#39;</span><span class="token punctuation">,</span>\n          priority<span class="token operator">:</span> <span class="token number">40</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        antd<span class="token operator">:</span> <span class="token punctuation">{</span>\n          test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[\\\\/]node_modules[\\\\/]antd(.*)?[\\\\/]</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n          name<span class="token operator">:</span> <span class="token string">&#39;chunk-antd&#39;</span><span class="token punctuation">,</span>\n          priority<span class="token operator">:</span> <span class="token number">30</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        libs<span class="token operator">:</span> <span class="token punctuation">{</span>\n          test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[\\\\/]node_modules[\\\\/]</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n          name<span class="token operator">:</span> <span class="token string">&#39;chunk-libs&#39;</span><span class="token punctuation">,</span>\n          priority<span class="token operator">:</span> <span class="token number">20</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token comment">// 代码分割可能会导致缓存失效</span>\n    runtimeChunk<span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token function-variable function">name</span><span class="token operator">:</span> <span class="token parameter">entrypoint</span> <span class="token operator">=&gt;</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">runtime-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>entrypoint<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.js</span><span class="token template-punctuation string">`</span></span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token comment">// 是否需要进行压缩</span>\n    minimize<span class="token operator">:</span> isProduction<span class="token punctuation">,</span>\n    minimizer<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token keyword">new</span> <span class="token class-name">CssMinimizerWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">TerserWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token comment">// webapck 解析模块加载选项</span>\n  resolve<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 自动补全后缀名</span>\n    extensions<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;.jsx&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;.js&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;.json&#39;</span><span class="token punctuation">]</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  devServer<span class="token operator">:</span> <span class="token punctuation">{</span>\n    host<span class="token operator">:</span> <span class="token string">&#39;localhost&#39;</span><span class="token punctuation">,</span>\n    port<span class="token operator">:</span> <span class="token number">3000</span><span class="token punctuation">,</span>\n    open<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    hot<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    historyApiFallback<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token comment">// 解决前端路由 history 模式的 404 问题</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  performance<span class="token operator">:</span> <span class="token boolean">false</span> <span class="token comment">// 关闭性能分析，进一步加快打包速度</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br><span class="line-number">146</span><br><span class="line-number">147</span><br><span class="line-number">148</span><br><span class="line-number">149</span><br><span class="line-number">150</span><br><span class="line-number">151</span><br><span class="line-number">152</span><br><span class="line-number">153</span><br><span class="line-number">154</span><br><span class="line-number">155</span><br><span class="line-number">156</span><br><span class="line-number">157</span><br><span class="line-number">158</span><br><span class="line-number">159</span><br><span class="line-number">160</span><br><span class="line-number">161</span><br><span class="line-number">162</span><br><span class="line-number">163</span><br><span class="line-number">164</span><br><span class="line-number">165</span><br><span class="line-number">166</span><br><span class="line-number">167</span><br><span class="line-number">168</span><br><span class="line-number">169</span><br><span class="line-number">170</span><br><span class="line-number">171</span><br><span class="line-number">172</span><br><span class="line-number">173</span><br><span class="line-number">174</span><br><span class="line-number">175</span><br><span class="line-number">176</span><br><span class="line-number">177</span><br><span class="line-number">178</span><br><span class="line-number">179</span><br><span class="line-number">180</span><br><span class="line-number">181</span><br><span class="line-number">182</span><br><span class="line-number">183</span><br><span class="line-number">184</span><br><span class="line-number">185</span><br><span class="line-number">186</span><br></div></div><br><h2 id="_7-vue-项目" tabindex="-1"><a class="header-anchor" href="#_7-vue-项目" aria-hidden="true">#</a> 7.Vue 项目</h2><h3 id="_7-1-完整配置" tabindex="-1"><a class="header-anchor" href="#_7-1-完整配置" aria-hidden="true">#</a> 7.1 完整配置</h3><p><em>webpack.config.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> EslintWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;eslint-webpack-plugin&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;html-webpack-plugin&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> MiniCssExtractPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;mini-css-extract-plugin&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> CssMinimizerWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;css-minimizer-webpack-plugin&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> TerserWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;terser-webpack-plugin&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> CopyPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;copy-webpack-plugin&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> VueLoaderPlugin <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;vue-loader&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> DefinePlugin <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;webpack&#39;</span><span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> isProduction <span class="token operator">=</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">===</span> <span class="token string">&#39;production&#39;</span>\n\n<span class="token comment">// 返回处理样式 loader 函数</span>\n<span class="token keyword">const</span> <span class="token function-variable function">getStyleLoaders</span> <span class="token operator">=</span> <span class="token parameter">pre</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">[</span>\n    isProduction <span class="token operator">?</span> MiniCssExtractPlugin<span class="token punctuation">.</span>loader <span class="token operator">:</span> <span class="token string">&#39;vue-style-loader&#39;</span><span class="token punctuation">,</span>\n    <span class="token string">&#39;css-loader&#39;</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token comment">// 处理 css 兼容性问题</span>\n      <span class="token comment">// 配合 package.json 中的 browserlist 来指定兼容性</span>\n      loader<span class="token operator">:</span> <span class="token string">&#39;postcss-loader&#39;</span><span class="token punctuation">,</span>\n      options<span class="token operator">:</span> <span class="token punctuation">{</span>\n        postcssOptions<span class="token operator">:</span> <span class="token punctuation">{</span>\n          plugins<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;postcss-preset-env&#39;</span><span class="token punctuation">]</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    pre\n  <span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>Boolean<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  entry<span class="token operator">:</span> <span class="token string">&#39;./src/main.js&#39;</span><span class="token punctuation">,</span>\n  output<span class="token operator">:</span> <span class="token punctuation">{</span>\n    path<span class="token operator">:</span> isProduction <span class="token operator">?</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;../dist&#39;</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span>\n    filename<span class="token operator">:</span> isProduction <span class="token operator">?</span> <span class="token string">&#39;static/js/[name].[contenthash:10].js&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;static/js/[name].js&#39;</span><span class="token punctuation">,</span>\n    chunkFilename<span class="token operator">:</span> isProduction\n      <span class="token operator">?</span> <span class="token string">&#39;static/js/[name].[contenthash:10].chunk.js&#39;</span>\n      <span class="token operator">:</span> <span class="token string">&#39;static/js/[name].chunk.js&#39;</span><span class="token punctuation">,</span>\n    assetModuleFilename<span class="token operator">:</span> <span class="token string">&#39;static/media/[hash:10][ext][query]&#39;</span><span class="token punctuation">,</span>\n    clean<span class="token operator">:</span> <span class="token boolean">true</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token comment">// 处理 css</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.css$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n        use<span class="token operator">:</span> <span class="token function">getStyleLoaders</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token comment">// 处理 less</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.less$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n        use<span class="token operator">:</span> <span class="token function">getStyleLoaders</span><span class="token punctuation">(</span><span class="token string">&#39;less-loader&#39;</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token comment">// 处理 sass</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.s[ac]ss$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n        use<span class="token operator">:</span> <span class="token function">getStyleLoaders</span><span class="token punctuation">(</span><span class="token string">&#39;sass-loader&#39;</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token comment">// 处理 stylus</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.styl$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n        use<span class="token operator">:</span> <span class="token function">getStyleLoaders</span><span class="token punctuation">(</span><span class="token string">&#39;stylus-loader&#39;</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token comment">// 处理图片</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.(jpe?g|png|gif|webp|svg)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n        type<span class="token operator">:</span> <span class="token string">&#39;asset&#39;</span><span class="token punctuation">,</span>\n        parser<span class="token operator">:</span> <span class="token punctuation">{</span>\n          dataUrlCondition<span class="token operator">:</span> <span class="token punctuation">{</span>\n            maxSize<span class="token operator">:</span> <span class="token number">10</span> <span class="token operator">*</span> <span class="token number">1024</span>\n          <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token comment">// 处理其他资源</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.(woff2?|ttf)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n        type<span class="token operator">:</span> <span class="token string">&#39;asset/resource&#39;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token comment">// 处理 js</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.js?$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n        include<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;../src&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        loader<span class="token operator">:</span> <span class="token string">&#39;babel-loader&#39;</span><span class="token punctuation">,</span>\n        options<span class="token operator">:</span> <span class="token punctuation">{</span>\n          cacheDirectory<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n          cacheCompression<span class="token operator">:</span> <span class="token boolean">false</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.vue$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n        loader<span class="token operator">:</span> <span class="token string">&#39;vue-loader&#39;</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token keyword">new</span> <span class="token class-name">EslintWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      context<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;../src&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      exclude<span class="token operator">:</span> <span class="token string">&#39;node_modules&#39;</span><span class="token punctuation">,</span>\n      cache<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      cacheLocation<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;../node_modules/.cache/.eslintcache&#39;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      template<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;../public/index.html&#39;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    isProduction <span class="token operator">&amp;&amp;</span>\n      <span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        filename<span class="token operator">:</span> <span class="token string">&#39;static/css/[name].[contenthash:10].css&#39;</span><span class="token punctuation">,</span>\n        chunkFilename<span class="token operator">:</span> <span class="token string">&#39;static/css/[name].[contenthash:10].chunk.css&#39;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    isProduction <span class="token operator">&amp;&amp;</span>\n      <span class="token keyword">new</span> <span class="token class-name">CopyPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        patterns<span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token punctuation">{</span>\n            from<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;../public&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            to<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;../dist&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            globOptions<span class="token operator">:</span> <span class="token punctuation">{</span>\n              ignore<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;**/index.html&#39;</span><span class="token punctuation">]</span>\n            <span class="token punctuation">}</span>\n          <span class="token punctuation">}</span>\n        <span class="token punctuation">]</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token keyword">new</span> <span class="token class-name">VueLoaderPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token comment">// cross-env 定义的环境变量给 webpack 打包工具使用</span>\n    <span class="token comment">// DefinePlugin 定义环境变量给源代码使用，解决 vue3 页面警告的问题</span>\n    <span class="token keyword">new</span> <span class="token class-name">DefinePlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      __VUE_OPTIONS_API__<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      __VUE_PROD_DEVTOOLS__<span class="token operator">:</span> <span class="token boolean">false</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>Boolean<span class="token punctuation">)</span><span class="token punctuation">,</span>\n  mode<span class="token operator">:</span> isProduction <span class="token operator">?</span> <span class="token string">&#39;production&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;development&#39;</span><span class="token punctuation">,</span>\n  devtool<span class="token operator">:</span> isProduction <span class="token operator">?</span> <span class="token string">&#39;hidden-source-map&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;cheap-module-source-map&#39;</span><span class="token punctuation">,</span>\n  optimization<span class="token operator">:</span> <span class="token punctuation">{</span>\n    splitChunks<span class="token operator">:</span> <span class="token punctuation">{</span>\n      chunks<span class="token operator">:</span> <span class="token string">&#39;all&#39;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token comment">// 代码分割可能会导致缓存失效</span>\n    runtimeChunk<span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token function-variable function">name</span><span class="token operator">:</span> <span class="token parameter">entrypoint</span> <span class="token operator">=&gt;</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">runtime-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>entrypoint<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.js</span><span class="token template-punctuation string">`</span></span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    minimize<span class="token operator">:</span> isProduction<span class="token punctuation">,</span>\n    minimizer<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token keyword">new</span> <span class="token class-name">CssMinimizerWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">TerserWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token comment">// webapck 解析模块加载选项</span>\n  resolve<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 自动补全后缀名</span>\n    extensions<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;.vue&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;.js&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;.json&#39;</span><span class="token punctuation">]</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  devServer<span class="token operator">:</span> <span class="token punctuation">{</span>\n    host<span class="token operator">:</span> <span class="token string">&#39;localhost&#39;</span><span class="token punctuation">,</span>\n    port<span class="token operator">:</span> <span class="token number">3000</span><span class="token punctuation">,</span>\n    open<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    hot<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    historyApiFallback<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token comment">// 解决前端路由 history 模式的 404 问题</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br><span class="line-number">146</span><br><span class="line-number">147</span><br><span class="line-number">148</span><br><span class="line-number">149</span><br><span class="line-number">150</span><br><span class="line-number">151</span><br><span class="line-number">152</span><br><span class="line-number">153</span><br><span class="line-number">154</span><br><span class="line-number">155</span><br><span class="line-number">156</span><br></div></div><br><h2 id="_8-loader" tabindex="-1"><a class="header-anchor" href="#_8-loader" aria-hidden="true">#</a> 8.Loader</h2><h3 id="_8-1-loader-介绍" tabindex="-1"><a class="header-anchor" href="#_8-1-loader-介绍" aria-hidden="true">#</a> 8.1 loader 介绍</h3><blockquote><p>帮助 webpack 将不同类型的文件转换成 webpack 可识别的模块</p></blockquote><ol><li>分类(可以在 <code>modules</code> 中的 <code>rules</code> 规则中指定 <code>enforce: &#39;pre&#39;</code> 这样来指定 loader 模式) <ul><li><code>pre</code>：配置 <code>loader</code></li><li><code>normal</code>：普通 <code>loader</code></li><li><code>inline</code>：内联 <code>loader</code></li><li><code>post</code>：后置 <code>loader</code></li></ul></li><li>执行顺序 <ul><li>四类 loader 执行优先级：<code>pre &gt; normal &gt; inline &gt; post</code></li><li>相同优先级的 loader 执行顺序为：从右到左，从下到上</li></ul></li><li>使用 loader 的方式 <ul><li>配置方式：在 <em>webpack.config.js</em> 中指定 loader(pre、normal、post loader)</li><li>内联方式：在每个 <code>import</code> 语句中显式指定 loader(inline loader)</li></ul></li><li>inline loader <ul><li>用法：<code>import Styles from &#39;style-loader!css-loader?modules!./styles.css&#39;</code></li><li>含义：使用 <code>css-loader</code> 和 <code>style-loader</code> 处理 <code>styles.css</code> 文件</li><li>通过 <code>!</code> 将资源中的 loader 分开</li><li><code>inline-loader</code> 可以加不同的前缀，跳过其他类型的 loader</li><li><code>!</code> 跳过 normal loader：<code>import Styles from &#39;!style-loader!css-loader?modules!./styles.css&#39;</code></li><li><code>-!</code> 跳过 pre 和 normal loader：<code>import Styles from &#39;-!style-loader!css-loader?modules!./styles.css</code></li><li><code>!!</code> 跳过 pre、normal 和 post loader：<code>import Styles from &#39;!!style-loader!css-loader?modules!./styles.css</code></li></ul></li></ol><br><h3 id="_8-2-开发一个-loader" tabindex="-1"><a class="header-anchor" href="#_8-2-开发一个-loader" aria-hidden="true">#</a> 8.2 开发一个 loader</h3><p><em>loader/test-loader.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">/* \n  loader就是一个函数\n  当 webpack 解析资源时，会调用相应的 loader 去处理\n  loader 接收到文件内容作为参数，返回内容出去\n    content 文件内容\n    map sourceMap\n    mata 别的 loader 传递的数据\n*/</span>\nmodule<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">content<span class="token punctuation">,</span> map<span class="token punctuation">,</span> meta</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span> <span class="token comment">// 输出 3 次 hello main</span>\n  <span class="token keyword">return</span> content\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p><em>webpack.config.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;html-webpack-plugin&#39;</span><span class="token punctuation">)</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  entry<span class="token operator">:</span> <span class="token string">&#39;./src/main.js&#39;</span><span class="token punctuation">,</span>\n  output<span class="token operator">:</span> <span class="token punctuation">{</span>\n    path<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;./dist&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    filename<span class="token operator">:</span> <span class="token string">&#39;js/[name].js&#39;</span><span class="token punctuation">,</span>\n    clean<span class="token operator">:</span> <span class="token boolean">true</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.js$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n        loader<span class="token operator">:</span> <span class="token string">&#39;./loaders/test-loader.js&#39;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.js$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n        loader<span class="token operator">:</span> <span class="token string">&#39;./loaders/test-loader.js&#39;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.js$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n        loader<span class="token operator">:</span> <span class="token string">&#39;./loaders/test-loader.js&#39;</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      template<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;public/index.html&#39;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  mode<span class="token operator">:</span> <span class="token string">&#39;development&#39;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><br><h3 id="_8-3-同步-loader" tabindex="-1"><a class="header-anchor" href="#_8-3-同步-loader" aria-hidden="true">#</a> 8.3 同步 loader</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// module.exports = function (content) {</span>\n<span class="token comment">//   return content</span>\n<span class="token comment">// }</span>\n\nmodule<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">content<span class="token punctuation">,</span> map<span class="token punctuation">,</span> meta</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;test1&#39;</span><span class="token punctuation">)</span>\n  <span class="token comment">/*\n    第一个参数，err 代表是否有错误\n    第二个参数，content 处理后的内容\n    第三个参数，source-map 继续传递 source-map\n    第四个参数，meta 给下一个 loader 传递参数\n  */</span>\n  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">callback</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> content<span class="token punctuation">,</span> map<span class="token punctuation">,</span> meta<span class="token punctuation">)</span>\n  <span class="token comment">// 同步 loader 中不能进行异步操作</span>\n  <span class="token comment">// setTimeout(() =&gt; {</span>\n  <span class="token comment">//   console.log(&#39;test1&#39;)</span>\n  <span class="token comment">//   this.callback(null, content, map, meta)</span>\n  <span class="token comment">// }, 1000)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><br><h3 id="_8-4-异步-loader" tabindex="-1"><a class="header-anchor" href="#_8-4-异步-loader" aria-hidden="true">#</a> 8.4 异步 loader</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">content<span class="token punctuation">,</span> map<span class="token punctuation">,</span> meta</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> callback <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">async</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;test2&#39;</span><span class="token punctuation">,</span> content<span class="token punctuation">)</span>\n    <span class="token function">callback</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> content<span class="token punctuation">,</span> map<span class="token punctuation">,</span> meta<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><br><h3 id="_8-5-raw-loader-实现返回-buffer-数据" tabindex="-1"><a class="header-anchor" href="#_8-5-raw-loader-实现返回-buffer-数据" aria-hidden="true">#</a> 8.5 raw loader 实现返回 buffer 数据</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// // raw loader 接收到 content 是 Buffer 数据</span>\n<span class="token comment">// module.exports = function (content) {</span>\n<span class="token comment">//   console.log(content)</span>\n<span class="token comment">//   return content</span>\n<span class="token comment">// }</span>\n<span class="token comment">// module.exports.raw = true</span>\n\n<span class="token keyword">function</span> <span class="token function">Test3Loader</span><span class="token punctuation">(</span><span class="token parameter">content</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> content\n<span class="token punctuation">}</span>\nTest3Loader<span class="token punctuation">.</span>raw <span class="token operator">=</span> <span class="token boolean">true</span>\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> Test3Loader\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><br><h3 id="_8-6-pitch-loader-优先执行" tabindex="-1"><a class="header-anchor" href="#_8-6-pitch-loader-优先执行" aria-hidden="true">#</a> 8.6 pitch loader 优先执行</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">content</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;normal loader 1&#39;</span><span class="token punctuation">)</span>\n  <span class="token keyword">return</span> content\n<span class="token punctuation">}</span>\n<span class="token comment">// 加了 pitch 会优先执行</span>\nmodule<span class="token punctuation">.</span>exports<span class="token punctuation">.</span><span class="token function-variable function">pitch</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;pitch loader 1&#39;</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><br><h3 id="_8-7-loader-api" tabindex="-1"><a class="header-anchor" href="#_8-7-loader-api" aria-hidden="true">#</a> 8.7 loader API</h3><table><thead><tr><th>方法名</th><th>含义</th><th>用法</th></tr></thead><tbody><tr><td><code>this.async</code></td><td>异步回调 loader，返回 <code>this.callback</code></td><td><code>const callback = this.async()</code></td></tr><tr><td><code>this.callback</code></td><td>可以同步或者异步调用的并返回多个结果的函数</td><td><code>this.callback(err, content, sourceMap?, meta?)</code></td></tr><tr><td><code>this.emitFile</code></td><td>产生一个文件</td><td><code>this.emitFile(name, content, sourceMap)</code></td></tr><tr><td><code>this.utils.contextify</code></td><td>返回一个相对路径</td><td><code>this.utils.contextify(context, request)</code></td></tr><tr><td><code>this.utils.absolutify</code></td><td>返回一个绝对路径</td><td><code>this.urils.absolutify(context, request)</code></td></tr><tr><td><code>this.getOptions(schema)</code></td><td>获取 loader 的 options</td><td><code>this.getOptions(schema)</code></td></tr></tbody></table><br><h3 id="_8-8-自定义-clean-log-loader" tabindex="-1"><a class="header-anchor" href="#_8-8-自定义-clean-log-loader" aria-hidden="true">#</a> 8.8 自定义 clean-log-loader</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">content</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 清除文件内容中的 console.log(xxx)</span>\n  <span class="token keyword">return</span> content<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">console\\.log\\(.*?\\);?</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><br><h3 id="_8-9-自定义-banner-loader" tabindex="-1"><a class="header-anchor" href="#_8-9-自定义-banner-loader" aria-hidden="true">#</a> 8.9 自定义 banner-loader</h3><p><em>webpack.config.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">{</span>\n  test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.js$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n  loader<span class="token operator">:</span> <span class="token string">&#39;./loaders/banner-loader/banner-loader.js&#39;</span><span class="token punctuation">,</span>\n  options<span class="token operator">:</span> <span class="token punctuation">{</span>\n    author<span class="token operator">:</span> <span class="token string">&#39;张三&#39;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p><em>banner-loader.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> schema <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./schema.json&#39;</span><span class="token punctuation">)</span>\nmodule<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">content</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// schema 对 options 的验证规则</span>\n  <span class="token comment">// schema 符合 JSON schema 的规则</span>\n  <span class="token keyword">const</span> options <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getOptions</span><span class="token punctuation">(</span>schema<span class="token punctuation">)</span>\n  <span class="token keyword">const</span> prefix <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n    /*\n    * Author: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>options<span class="token punctuation">.</span>author<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\n    */\n  </span><span class="token template-punctuation string">`</span></span>\n  <span class="token keyword">return</span> prefix <span class="token operator">+</span> content\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p><em>schema.json</em>：</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;object&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;properties&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;author&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;string&quot;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;additionalProperties&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><br><h3 id="_8-10-babel-loader" tabindex="-1"><a class="header-anchor" href="#_8-10-babel-loader" aria-hidden="true">#</a> 8.10 babel-loader</h3><ol><li>安装：<code>yarn add -D @babel/core @babel/preset-env</code></li><li>代码如下：</li></ol><p><em>main.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">sum</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> args<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">p<span class="token punctuation">,</span> c</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> p <span class="token operator">+</span> c<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><em>webpack.config.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">{</span>\n  test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.js$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n  loader<span class="token operator">:</span> <span class="token string">&#39;./loaders/babel-loader/index.js&#39;</span><span class="token punctuation">,</span>\n  options<span class="token operator">:</span> <span class="token punctuation">{</span>\n    presets<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;@babel/preset-env&#39;</span><span class="token punctuation">]</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p><em>babel-loader/index.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> babel <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;@babel/core&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> schema <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./schema.json&#39;</span><span class="token punctuation">)</span>\n\nmodule<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">content</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> callback <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">async</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token keyword">const</span> options <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getOptions</span><span class="token punctuation">(</span>schema<span class="token punctuation">)</span>\n  <span class="token comment">// 使用 babel 对代码进行编译</span>\n  babel<span class="token punctuation">.</span><span class="token function">transform</span><span class="token punctuation">(</span>content<span class="token punctuation">,</span> options<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> result</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token function">callback</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>\n    <span class="token function">callback</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> result<span class="token punctuation">.</span>code<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p><em>schema.json</em>：</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;object&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;properties&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;presets&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;array&quot;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;additionalProperties&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><br><h3 id="_8-11-原理-自定义-file-loader" tabindex="-1"><a class="header-anchor" href="#_8-11-原理-自定义-file-loader" aria-hidden="true">#</a> 8.11 原理 - 自定义 file-loader</h3><ol><li>安装：<code>yarn add -D loader-utils</code></li><li>代码：</li></ol><p><em>file-loader/index.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> loaderUtils <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;loader-utils&#39;</span><span class="token punctuation">)</span>\n\nmodule<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">content</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 1.根据文件内容生成带 hash 值的文件名</span>\n  <span class="token keyword">let</span> interpolatedName <span class="token operator">=</span> loaderUtils<span class="token punctuation">.</span><span class="token function">interpolateName</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token string">&#39;[hash].[ext][query]&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    content\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  interpolatedName <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">images/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>interpolatedName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span> <span class="token comment">// 输出到 images 文件夹中</span>\n  <span class="token comment">// 2.将文件输出出去</span>\n  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">emitFile</span><span class="token punctuation">(</span>interpolatedName<span class="token punctuation">,</span> content<span class="token punctuation">)</span>\n  <span class="token comment">// 3.返回 module.exports = &#39;文件路径(文件名)&#39;</span>\n  <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">module.exports = &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>interpolatedName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;</span><span class="token template-punctuation string">`</span></span>\n<span class="token punctuation">}</span>\n<span class="token comment">// 处理图片、字体等文件，它们都是 buffer 数据</span>\n<span class="token comment">// 需要使用 raw-loader 才能处理</span>\nmodule<span class="token punctuation">.</span>exports<span class="token punctuation">.</span>raw <span class="token operator">=</span> <span class="token boolean">true</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p><em>webpack.config.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">{</span>\n  test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.(png|jpe?g|gif)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n  loader<span class="token operator">:</span> <span class="token string">&#39;./loaders/file-loader&#39;</span><span class="token punctuation">,</span>\n  type<span class="token operator">:</span> <span class="token string">&#39;javascript/auto&#39;</span> <span class="token comment">// 阻止 webpack 默认处理图片资源，只使用 file-loader 处理</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">{</span>\n  test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.css$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n  use<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;style-loader&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;css-loader&#39;</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><br><h3 id="_8-12-原理-自定义-style-loader" tabindex="-1"><a class="header-anchor" href="#_8-12-原理-自定义-style-loader" aria-hidden="true">#</a> 8.12 原理 - 自定义 style-loader</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">content</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token doc-comment comment">/**\n   * 1.直接使用 style-loader，只能处理样式，不能处理样式中引入其他资源\n   *   use: [&#39;./loaders/style-loader&#39;]\n   * 2.需要借助 css-loader 解决样式中引入其他资源的问题\n   *   use: [&#39;./loaders/style-loader&#39;, &#39;css-loader&#39;]\n   *   问题是 css-loader 暴露了一段 js 代码，style-loader 需要执行 js 代码，得到返回值，再动态创建 style 标签，插入到页面上，不好操作\n   * 3.style-loader 使用 pitch-loader 用法操作\n   */</span>\n<span class="token punctuation">}</span>\n\nmodule<span class="token punctuation">.</span>exports<span class="token punctuation">.</span><span class="token function-variable function">pitch</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">remainingRequest</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// remainingRequest 剩下还需要处理的 loader</span>\n  <span class="token comment">// console.log(remainingRequest) // G:\\Microsoft desktop\\webpack\\source\\node_modules\\css-loader\\dist\\cjs.js!G:\\Microsoft desktop\\webpack\\source\\src\\css\\index.css</span>\n  <span class="token comment">// 1.将 remainingRequest 中绝对路径改成相对路径(后面只能使用相对路径进行操作)</span>\n  <span class="token keyword">const</span> relatePath <span class="token operator">=</span> remainingRequest\n    <span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;!&#39;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">absolutePath</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      <span class="token comment">// 返回相对路径，this.context 即本文件的路径</span>\n      <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>utils<span class="token punctuation">.</span><span class="token function">contextify</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>context<span class="token punctuation">,</span> absolutePath<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;!&#39;</span><span class="token punctuation">)</span>\n  <span class="token comment">// console.log(relatePath) // ../../node_modules/css-loader/dist/cjs.js!./index.css</span>\n  <span class="token comment">// 2.引入 css-loader 处理后的资源</span>\n  <span class="token comment">// 3.创建 style，将内容插入到页面中生效</span>\n  <span class="token keyword">const</span> script <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n    import style from &quot;!!</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>relatePath<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;\n    const styleEl = document.createElement(&#39;style&#39;)\n    styleEl.innerHTML = style\n    document.head.appendChild(styleEl)\n  </span><span class="token template-punctuation string">`</span></span>\n  <span class="token comment">// 终止后面 loader 执行</span>\n  <span class="token keyword">return</span> script\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div><br><h2 id="_9-plugins" tabindex="-1"><a class="header-anchor" href="#_9-plugins" aria-hidden="true">#</a> 9.Plugins</h2><h3 id="_9-1-plugin-介绍" tabindex="-1"><a class="header-anchor" href="#_9-1-plugin-介绍" aria-hidden="true">#</a> 9.1 plugin 介绍</h3><blockquote><p>通过插件我们可以拓展 webpack，加入自定义的构建行为，使 webpack 可以执行更广泛的任务，拥有更强的构建能力</p></blockquote><p><strong>工作原理</strong>：</p><p>webpack 就像一条生产线，要经过过一系列处理流程后才能将源文件转换成输出结果。这条生产线上的每个处理流程的职责都是单一的，多个流程之间有存在依赖关系，只有完成当前处理后才能交给下个流程去处理。插件就像是一个插入到生产线中的一个功能，在特定的时机对生产线上的资源做处理。webpack 通过 tapable 来阻止这条复杂的生产线。webpack 在运行过程中会广播事件，插件只需要监听它所关心的事件，就能加入到这条生产线中，去改变生产线的运作。webpack 的事件流机制保证了插件的有序性，使得整个系统拓展性很好。<em>站在代码逻辑的角度就是：webpack 在编译代码过程中，会触发一系列 Tapable 钩子事件，插件所做的，就是找到相应从钩子，往上挂上自己的任务，也就是注册事件。这样，当 webpack 构建的时候，插件注册的事件就会随着钩子的触发而执行了</em></p><p><strong>钩子</strong>：</p><p>钩子的本质就是：事件。为了方便我们直接介入和控制编译过程，webpack 把编译过程中触发的各类关键事件封装成事件接口暴露了出来。这些接口被称作 <code>hooks</code>(钩子)。开发插件，离不开钩子</p><p><strong>Tapable</strong>：</p><blockquote><p>Tapable 暴露了三个方法给插件，用于注入不同类型的自定义构建行为</p></blockquote><ul><li><code>tap</code>：可以注册同步钩子和异步钩子</li><li><code>tapAsync</code>：回调方式注册异步钩子</li><li><code>tapPromise</code>：Promise 方式注册异步钩子</li></ul><p><strong>Plugin 构建对象</strong>：</p><ol><li><code>Compiler</code>：compiler 对象保存着 webpack 环境配置，每次启动 webpack 构建时它都是一个独一无二、仅仅会创建一次的对象。在该对象可以访问到 webpack 的主环境配置，如 loader、plugin 等配置信息。它有一下主要属性： <ul><li><code>compiler.options</code>：可以访问本次启动 webpack 所有的配置文件，包括但不限于 loader、plugin、entry、output 等</li><li><code>compiler.inputFileSystem</code> 和 <code>compiler.outputFileSystem</code> 可以进行文件操作，相当于 nodejs 中的 fs</li><li><code>compiler.hooks</code> 可以注册 tapable 的不同种类 Hook，从而可以在 compiler 的生命周期中植入不同逻辑</li></ul></li><li><code>Compilation</code>：代表一次资源的构建，compilation 实例能够访问所有的模块和它们的依赖。在编译阶段，模块会被加载(load)、封存(seal)、优化(optimize)、分块(chunk)、哈西(hash)和重新创建(restore)。主要有以下主要属性： <ul><li><code>compilation.modules</code>：可以访问所有模块，打包的每一个文件都是模块</li><li><code>compilation.chunks</code>：chunk 即是多个 modules 组成而来的一个代码块。入口文件引入的资源组成一个 chunk，通过代码分割的模块又是另外的 chunk</li><li><code>compilation.assets</code>：可以访问本次打包生成所有文件的结果</li><li><code>compilation.hooks</code>：可以注册 tapable 的不同种类 hook，用于在 compilation 编译模块阶段进行逻辑添加以及修改</li></ul></li></ol><p><strong>webpack 基本流程</strong>：</p><ol><li>创建 compiler 对象，里面保存着 webpack 完整配置 -&gt; <code>compiler</code> -&gt; <code>compiler.run()</code> -&gt; <code>compiler.compilation()</code> -&gt; <code>compiler.make()</code> 创建 compilation 对象，包含一次资源完整构建过程</li><li><code>compiler.make()</code> -&gt; <code>compilation.buildModule()</code> -&gt; <code>compilation.seal()</code> -&gt; <code>compilation.optimize()</code> -&gt; <code>compilation.reviveChunks()</code> -&gt; <code>compilation.seal()</code></li><li>结束 <code>compiler.seal()</code> -&gt; <code>compiler.afterCompile()</code> -&gt; <code>compile.emit()</code> -&gt; <code>compiler.emitAssets()</code> 最后将资源输出到 dist 上去</li></ol><br><h3 id="_9-2-第一个-plugin" tabindex="-1"><a class="header-anchor" href="#_9-2-第一个-plugin" aria-hidden="true">#</a> 9.2 第一个 plugin</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * 1.webpack 加载 webpack.config.js 中所有配置，此时就会 new TestPlugin()，这样插件的 constructor\n * 2.webpack 创建 compiler 对象\n * 3.遍历所有 plugins 中插件，调用插件的 apply 方法\n * 4.执行剩下编译流程(触发各个 hooks 事件)\n */</span>\n<span class="token keyword">class</span> <span class="token class-name">TestPlugin</span> <span class="token punctuation">{</span>\n  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;TestPlugin constructor&#39;</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n  <span class="token function">apply</span><span class="token punctuation">(</span><span class="token parameter">compiler</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;TestPlugin apply&#39;</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> TestPlugin\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><br><h3 id="_9-3-注册-hooks" tabindex="-1"><a class="header-anchor" href="#_9-3-注册-hooks" aria-hidden="true">#</a> 9.3 注册 hooks</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * 1.webpack 加载 webpack.config.js 中所有配置，此时就会 new TestPlugin()，这样插件的 constructor\n * 2.webpack 创建 compiler 对象\n * 3.遍历所有 plugins 中插件，调用插件的 apply 方法\n * 4.执行剩下编译流程(触发各个 hooks 事件)\n */</span>\n<span class="token keyword">class</span> <span class="token class-name">TestPlugin</span> <span class="token punctuation">{</span>\n  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;TestPlugin constructor&#39;</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n  <span class="token function">apply</span><span class="token punctuation">(</span><span class="token parameter">compiler</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;TestPlugin apply&#39;</span><span class="token punctuation">)</span>\n    <span class="token comment">// 由文档可知，environment 是同步串行钩子，所以用 tap</span>\n    compiler<span class="token punctuation">.</span>hooks<span class="token punctuation">.</span>environment<span class="token punctuation">.</span><span class="token function">tap</span><span class="token punctuation">(</span><span class="token string">&#39;TestPlugin&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;TestPlugin environment&#39;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token comment">// // emit 是异步串行钩子 AsyncSeriesHook</span>\n    compiler<span class="token punctuation">.</span>hooks<span class="token punctuation">.</span>emit<span class="token punctuation">.</span><span class="token function">tap</span><span class="token punctuation">(</span><span class="token string">&#39;TestPlugin&#39;</span><span class="token punctuation">,</span> <span class="token parameter">compilation</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;TestPlugin emit 111&#39;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    compiler<span class="token punctuation">.</span>hooks<span class="token punctuation">.</span>emit<span class="token punctuation">.</span><span class="token function">tapAsync</span><span class="token punctuation">(</span><span class="token string">&#39;TestPlugin&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">compilation<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;TestPlugin emit 222&#39;</span><span class="token punctuation">)</span>\n        <span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    compiler<span class="token punctuation">.</span>hooks<span class="token punctuation">.</span>emit<span class="token punctuation">.</span><span class="token function">tapPromise</span><span class="token punctuation">(</span><span class="token string">&#39;TestPlugin&#39;</span><span class="token punctuation">,</span> <span class="token parameter">compilation</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;TestPlugin emit 333&#39;</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token comment">// make 是异步并行钩子 AsyncParallelHook</span>\n    compiler<span class="token punctuation">.</span>hooks<span class="token punctuation">.</span>make<span class="token punctuation">.</span><span class="token function">tapAsync</span><span class="token punctuation">(</span><span class="token string">&#39;TestPlugin&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">compilation<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      <span class="token comment">// 需要在 compilation hooks 触发前注册才能使用</span>\n      compilation<span class="token punctuation">.</span>hooks<span class="token punctuation">.</span>seal<span class="token punctuation">.</span><span class="token function">tap</span><span class="token punctuation">(</span><span class="token string">&#39;TestPlugin&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;TestPlugin seal&#39;</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span>\n      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;TestPlugin make 111&#39;</span><span class="token punctuation">)</span>\n        <span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    compiler<span class="token punctuation">.</span>hooks<span class="token punctuation">.</span>make<span class="token punctuation">.</span><span class="token function">tapAsync</span><span class="token punctuation">(</span><span class="token string">&#39;TestPlugin&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">compilation<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;TestPlugin make 222&#39;</span><span class="token punctuation">)</span>\n        <span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    compiler<span class="token punctuation">.</span>hooks<span class="token punctuation">.</span>make<span class="token punctuation">.</span><span class="token function">tapAsync</span><span class="token punctuation">(</span><span class="token string">&#39;TestPlugin&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">compilation<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;TestPlugin make 333&#39;</span><span class="token punctuation">)</span>\n        <span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> TestPlugin\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br></div></div><br><h3 id="_9-4-查看-compiler-和-compilation-对象" tabindex="-1"><a class="header-anchor" href="#_9-4-查看-compiler-和-compilation-对象" aria-hidden="true">#</a> 9.4 查看 compiler 和 compilation 对象</h3><ol><li>在可以得到 compiler 对象的下一行写 <code>debugger</code></li><li><em>package.json</em> 中写入：<code>&quot;debug&quot;: &quot;node --inspect-brk ./node_modules/webpack-cli/bin/cli.js&quot;</code>，<code>brk</code> 是在代码第一行打断点的意思，整个命令是运行 webpack 的命令</li></ol><br><h3 id="_9-5-自定义-bannerwebpackplugin" tabindex="-1"><a class="header-anchor" href="#_9-5-自定义-bannerwebpackplugin" aria-hidden="true">#</a> 9.5 自定义 BannerWebpackPlugin</h3><ol><li>作用：给打包输出文件添加注释</li><li>开发思路： <ul><li>需要打包输出前添加注释，需要使用 <code>compiler.hooks.emit</code> 钩子，它是打包输出前触发</li><li>如何获取打包输出的资源：<code>compilation.assets</code> 可以获取所有即将输出的资源文件</li></ul></li><li>实现：</li></ol><p><em>webpack.config.js</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">new</span> <span class="token class-name">BannerWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  author<span class="token operator">:</span> <span class="token string">&#39;老王&#39;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><em>banner-webpack-plugin</em>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">BannerWebpackPlugin</span> <span class="token punctuation">{</span>\n  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">options <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>options <span class="token operator">=</span> options\n  <span class="token punctuation">}</span>\n  <span class="token function">apply</span><span class="token punctuation">(</span><span class="token parameter">compiler</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 资源输出前触发</span>\n    compiler<span class="token punctuation">.</span>hooks<span class="token punctuation">.</span>emit<span class="token punctuation">.</span><span class="token function">tapAsync</span><span class="token punctuation">(</span><span class="token string">&#39;BannerWebpackPlugin&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">compilation<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      <span class="token keyword">debugger</span>\n      <span class="token keyword">const</span> extensions <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;css&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;js&#39;</span><span class="token punctuation">]</span>\n      <span class="token comment">// 1.获取即将输出的资源文件- compilation.assets</span>\n      <span class="token comment">// 2.过滤只保留 js 和 css 资源</span>\n      <span class="token keyword">const</span> assets <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>compilation<span class="token punctuation">.</span>assets<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">assetPath</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 将文件名切割 [&#39;xxx&#39;, &#39;js&#39;] [&#39;xxx&#39;, &#39;css&#39;]</span>\n        <span class="token keyword">const</span> splitted <span class="token operator">=</span> assetPath<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span>\n        <span class="token comment">// 获取最后一个文件扩展名</span>\n        <span class="token keyword">const</span> extension <span class="token operator">=</span> splitted<span class="token punctuation">[</span>splitted<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span>\n        <span class="token comment">// 判断是否包含</span>\n        <span class="token keyword">return</span> extensions<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>extension<span class="token punctuation">)</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n      <span class="token keyword">const</span> prefix <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">/*\n      * Author: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">.</span>author<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\n      */\n      </span><span class="token template-punctuation string">`</span></span>\n\n      <span class="token comment">// 3.遍历剩下资源加上注释</span>\n      assets<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">asset</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 获取原来内容</span>\n        <span class="token keyword">const</span> source <span class="token operator">=</span> compilation<span class="token punctuation">.</span>assets<span class="token punctuation">[</span>asset<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">source</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n        <span class="token comment">// 拼接上注释</span>\n        <span class="token keyword">const</span> content <span class="token operator">=</span> prefix <span class="token operator">+</span> source\n        <span class="token comment">// 修改资源</span>\n        compilation<span class="token punctuation">.</span>assets<span class="token punctuation">[</span>asset<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n          <span class="token comment">// 最终资源输出时，调用 source 方法，source 方法的返回值就是资源的具体内容</span>\n          <span class="token function">source</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> content\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token comment">// 资源大小</span>\n          <span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> content<span class="token punctuation">.</span>length\n          <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span>\n      <span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> BannerWebpackPlugin\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br></div></div><br><h3 id="_9-6-自定义-cleanwebpackplugin" tabindex="-1"><a class="header-anchor" href="#_9-6-自定义-cleanwebpackplugin" aria-hidden="true">#</a> 9.6 自定义 CleanWebpackPlugin</h3><ol><li>作用：在 webpack 打包输出前将上次打包内容清空</li><li>开发思路： <ul><li>如何在打包输出前执行？需要使用 <code>compiler.hooks.emit</code> 钩子，它是打包输出前触发</li><li>如何清空上次打包内容？ <ul><li>获取打包输出目录，通过 compiler 对象</li><li>通过文件操作清空内容，通过 <code>compiler.outputFileSystem</code> 操作文件</li></ul></li></ul></li><li>实现：</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">CleanWebpackPlugin</span> <span class="token punctuation">{</span>\n  <span class="token function">apply</span><span class="token punctuation">(</span><span class="token parameter">compiler</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 2.获取打包输出的目录</span>\n    <span class="token keyword">const</span> outputPath <span class="token operator">=</span> compiler<span class="token punctuation">.</span>options<span class="token punctuation">.</span>output<span class="token punctuation">.</span>path\n    <span class="token keyword">const</span> fs <span class="token operator">=</span> compiler<span class="token punctuation">.</span>outputFileSystem\n\n    <span class="token comment">// 1.注册钩子，在打包输出之前 emit</span>\n    compiler<span class="token punctuation">.</span>hooks<span class="token punctuation">.</span>emit<span class="token punctuation">.</span><span class="token function">tap</span><span class="token punctuation">(</span><span class="token string">&#39;CleanWebpackPlugin&#39;</span><span class="token punctuation">,</span> <span class="token parameter">compilation</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token comment">// 3.通过 fs 删除打包输出的目录下的所有文件</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">removeFiles</span><span class="token punctuation">(</span>fs<span class="token punctuation">,</span> outputPath<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">removeFiles</span><span class="token punctuation">(</span><span class="token parameter">fs<span class="token punctuation">,</span> filePath</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 想要删除打包输出下所有资源，需要先将目录下的资源删除，不能删除这个目录</span>\n    <span class="token comment">// 1.读取目录下所有资源</span>\n    <span class="token keyword">const</span> files <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readdirSync</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span>\n    <span class="token comment">// 2.遍历一个个删除</span>\n    files<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">file</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      <span class="token comment">// 2.1 遍历所有文件，判断是文件还是文件夹</span>\n      <span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>filePath<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>file<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span>\n      <span class="token keyword">const</span> fileStat <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">statSync</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fileStat<span class="token punctuation">)</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>fileStat<span class="token punctuation">.</span><span class="token function">isDirectory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 2.2 是文件夹，就得删除下面所有的文件，才能删除文件夹</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">removeFiles</span><span class="token punctuation">(</span>fs<span class="token punctuation">,</span> path<span class="token punctuation">)</span>\n      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 2.3 是文件，直接删除</span>\n        fs<span class="token punctuation">.</span><span class="token function">unlinkSync</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> CleanWebpackPlugin\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><br><h3 id="_9-7-自定义-analyzewebpackplugin" tabindex="-1"><a class="header-anchor" href="#_9-7-自定义-analyzewebpackplugin" aria-hidden="true">#</a> 9.7 自定义 AnalyzeWebpackPlugin</h3><ol><li>作用：分析 <code>webpack</code> 打包资源大小，并输出分析文件</li><li>开发思路： <ul><li>在哪放？<code>compiler.hooks.emit</code>，它是在打包输出前触发，我们需要分析资源大小同时添加上分析后的 md 文件</li></ul></li><li>实现：</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">AnalyzeWebpackPlugin</span> <span class="token punctuation">{</span>\n  <span class="token function">apply</span><span class="token punctuation">(</span><span class="token parameter">compiler</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    compiler<span class="token punctuation">.</span>hooks<span class="token punctuation">.</span>emit<span class="token punctuation">.</span><span class="token function">tap</span><span class="token punctuation">(</span><span class="token string">&#39;AnalyzeWebpackPlugin&#39;</span><span class="token punctuation">,</span> <span class="token parameter">compilation</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      <span class="token comment">// 1.遍历所有即将输出文件，得到其大小</span>\n      <span class="token comment">// 将对象变成一个二维数组</span>\n      <span class="token keyword">const</span> assets <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span>compilation<span class="token punctuation">.</span>assets<span class="token punctuation">)</span>\n      <span class="token doc-comment comment">/**\n       * md 中表格语法\n       * | 资源名称 | 资源大小 |\n       * | --- | --- |\n       * | xxx.js | 10kb |\n       */</span>\n      <span class="token keyword">let</span> content <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">| 资源名称 | 资源大小 |\n| --- | --- |</span><span class="token template-punctuation string">`</span></span>\n      assets<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">[</span>filename<span class="token punctuation">,</span> file<span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        content <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\\n| </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>filename<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> | </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">1024</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">kb |</span><span class="token template-punctuation string">`</span></span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span>\n      <span class="token comment">// 2.生成一个 md 文件</span>\n      compilation<span class="token punctuation">.</span>assets<span class="token punctuation">[</span><span class="token string">&#39;analyze.md&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n        <span class="token function">source</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          <span class="token keyword">return</span> content\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          <span class="token keyword">return</span> content<span class="token punctuation">.</span>length\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> AnalyzeWebpackPlugin\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><br>',304),E={},z=(0,a(3744).Z)(E,[["render",function(n,s){const a=(0,p.up)("OutboundLink");return(0,p.wg)(),(0,p.iD)(p.HY,null,[e,(0,p._)("blockquote",null,[(0,p._)("p",null,[t,(0,p._)("a",o,[c,(0,p.Wm)(a)])])]),l,(0,p._)("blockquote",null,[(0,p._)("p",null,[r,(0,p._)("a",u,[i,(0,p.Wm)(a)])]),(0,p._)("p",null,[k,(0,p._)("a",b,[m,(0,p.Wm)(a)])])]),d,(0,p._)("blockquote",null,[(0,p._)("p",null,[g,(0,p._)("a",h,[v,(0,p.Wm)(a)])])]),x,(0,p._)("blockquote",null,[(0,p._)("p",null,[f,(0,p._)("a",w,[j,(0,p.Wm)(a)])]),y]),_,(0,p._)("blockquote",null,[(0,p._)("p",null,[q,(0,p._)("a",P,[C,(0,p.Wm)(a)]),S])]),$],64)}]])},3744:(n,s)=>{s.Z=(n,s)=>{for(const[a,p]of s)n[a]=p;return n}}}]);