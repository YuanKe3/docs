"use strict";(self.webpackChunknotebook=self.webpackChunknotebook||[]).push([[324],{553:(e,a,r)=>{r.r(a),r.d(a,{data:()=>t});const t={key:"v-1d5bae40",path:"/git.html",title:"",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"首次阅读请看这里！！！",slug:"首次阅读请看这里",children:[]},{level:2,title:"情况一：准备在master拉取代码进行开发",slug:"情况一-准备在master拉取代码进行开发",children:[{level:3,title:"一 拉取远程master",slug:"一-拉取远程master",children:[]},{level:3,title:"二 将修改后的代码提交到远程的kxz/yxy中",slug:"二-将修改后的代码提交到远程的kxz-yxy中",children:[]},{level:3,title:"三 将修改后的代码与远程的master合并",slug:"三-将修改后的代码与远程的master合并",children:[]},{level:3,title:"小总结",slug:"小总结",children:[]}]},{level:2,title:"情况二：在本地工作区原有基础上进行开发（以在本地kxz工作区举例）",slug:"情况二-在本地工作区原有基础上进行开发-以在本地kxz工作区举例",children:[{level:3,title:"一 将修改后的代码推送到远程kxz中",slug:"一-将修改后的代码推送到远程kxz中",children:[]},{level:3,title:"二 将修改后的代码推送到远程master中",slug:"二-将修改后的代码推送到远程master中",children:[]}]}],filePathRelative:"git.md",git:{updatedTime:1635168924e3,contributors:[{name:"YuanKe",email:"cctvyxy@qq.coom",commits:1}]}}},424:(e,a,r)=>{r.r(a),r.d(a,{default:()=>i});const t=(0,r(252).uE)('<h2 id="首次阅读请看这里" tabindex="-1"><a class="header-anchor" href="#首次阅读请看这里" aria-hidden="true">#</a> 首次阅读请看这里！！！</h2><ol><li>要==严格==按照下面要求来操作</li><li>由于代码由两人维护，所以凡是写代码前，<strong>一定要从远程master拉取代码！</strong> （如果仍在修改代码就不要拉取了，免得被远程master的旧代码合并了，详见下面的情况二）</li><li>合并到master前，<strong>一定要告知对方</strong>。若不能或不方便告知的，可以备份一份修改前的master并微信留言 <br></li></ol><h2 id="情况一-准备在master拉取代码进行开发" tabindex="-1"><a class="header-anchor" href="#情况一-准备在master拉取代码进行开发" aria-hidden="true">#</a> 情况一：准备在master拉取代码进行开发</h2><h3 id="一-拉取远程master" tabindex="-1"><a class="header-anchor" href="#一-拉取远程master" aria-hidden="true">#</a> 一 拉取远程master</h3><ol><li>新建文件夹，终端输入 <code>git clone https://gitee.com/wddzhahaha/our-plant-book.git</code></li><li>将该文件夹放入vscode中，在其中修改代码（<s>默认是在本地master工作区修改代码，可以从vscode左下角看到，第三步操作与之相关</s>）</li></ol><h3 id="二-将修改后的代码提交到远程的kxz-yxy中" tabindex="-1"><a class="header-anchor" href="#二-将修改后的代码提交到远程的kxz-yxy中" aria-hidden="true">#</a> 二 将修改后的代码提交到远程的kxz/yxy中</h3><ol><li>添加远程存储库，暂存并提交修改</li><li>切换到远程的kxz/yxy分支，直接合并分支，然后推送（亲测在这里无需暂存和提交）</li><li><s>若合并后突然发现代码还有能修改的地方，可以按上述&#39;2. &#39;图片的区域，切换到本地的分支进行修改，修改完后继续走1、2流程即可</s></li></ol><h3 id="三-将修改后的代码与远程的master合并" tabindex="-1"><a class="header-anchor" href="#三-将修改后的代码与远程的master合并" aria-hidden="true">#</a> 三 将修改后的代码与远程的master合并</h3><ol><li>切换到本地master工作区，直接按推送，远程master代码就更新成功了。</li></ol><hr><h3 id="小总结" tabindex="-1"><a class="header-anchor" href="#小总结" aria-hidden="true">#</a> 小总结</h3><p>走过上面流程可以看出：</p><ol><li>不需要建立代码副本，也可以同时将修改后的代码推送到远程yxy/kxz和远程master中。其中上述流程中，可以先将修改后的代码推送到远程master中，再推送到远程kxz/yxy，即情况一的 二 、三 完全对调，这样更为简便</li><li>切换远程存储库时（如远程的kxz时），就会自动生成一个本地的kxz <br></li></ol><h2 id="情况二-在本地工作区原有基础上进行开发-以在本地kxz工作区举例" tabindex="-1"><a class="header-anchor" href="#情况二-在本地工作区原有基础上进行开发-以在本地kxz工作区举例" aria-hidden="true">#</a> 情况二：在本地工作区原有基础上进行开发（以在本地kxz工作区举例）</h2><h3 id="一-将修改后的代码推送到远程kxz中" tabindex="-1"><a class="header-anchor" href="#一-将修改后的代码推送到远程kxz中" aria-hidden="true">#</a> 一 将修改后的代码推送到远程kxz中</h3><p>代码修改后，直接按==暂存+提交+推送==。只要左下角的显示的是==本地==的kxz工作区，那么按推送后就直接提交到远程的kxz中了。</p><h3 id="二-将修改后的代码推送到远程master中" tabindex="-1"><a class="header-anchor" href="#二-将修改后的代码推送到远程master中" aria-hidden="true">#</a> 二 将修改后的代码推送到远程master中</h3><p>代码修改后，暂存+提交，然后切换到本地的master中（==！！！注意是本地的master==），按合并分支，然后再提交到远程master。</p>',18),l={},i=(0,r(744).Z)(l,[["render",function(e,a){return t}]])},744:(e,a)=>{a.Z=(e,a)=>{for(const[r,t]of a)e[r]=t;return e}}}]);